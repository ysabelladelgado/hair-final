{"version":3,"file":"MotionPathHelper.min.js","sources":["../src/utils/paths.js","../src/utils/matrix.js","../src/utils/PathEditor.js","../src/MotionPathHelper.js"],"sourcesContent":["/*!\n * paths 3.2.6\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n\t_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t_DEG2RAD = Math.PI / 180,\n\t_RAD2DEG = 180 / Math.PI,\n\t_sin = Math.sin,\n\t_cos = Math.cos,\n\t_abs = Math.abs,\n\t_sqrt = Math.sqrt,\n\t_atan2 = Math.atan2,\n\t_largeNum = 1e8,\n\t_isString = value => typeof(value) === \"string\",\n\t_isNumber = value => typeof(value) === \"number\",\n\t_isUndefined = value => typeof(value) === \"undefined\",\n\t_temp = {},\n\t_temp2 = {},\n\t_roundingNum = 1e5,\n\t_wrapProgress = progress => (Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum) || ((progress < 0) ? 0 : 1), //if progress lands on 1, the % will make it 0 which is why we || 1, but not if it's negative because it makes more sense for motion to end at 0 in that case.\n\t_round = value => (Math.round(value * _roundingNum) / _roundingNum) || 0,\n\t_splitSegment = (rawPath, segIndex, i, t) => {\n\t\tlet segment = rawPath[segIndex],\n\t\t\tshift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n\t\tif (shift && shift + i + 2 < segment.length) {\n\t\t\trawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n\t\t\tsegment.splice(0, i + shift);\n\t\t\treturn 1;\n\t\t}\n\t},\n\t_reverseRawPath = (rawPath, skipOuter) => {\n\t\tlet i = rawPath.length;\n\t\tif (!skipOuter) {\n\t\t\trawPath.reverse();\n\t\t}\n\t\twhile (i--) {\n\t\t\tif (!rawPath[i].reversed) {\n\t\t\t\treverseSegment(rawPath[i]);\n\t\t\t}\n\t\t}\n\t},\n\t_copyMetaData = (source, copy) => {\n\t\tcopy.totalLength = source.totalLength;\n\t\tif (source.samples) { //segment\n\t\t\tcopy.samples = source.samples.slice(0);\n\t\t\tcopy.lookup = source.lookup.slice(0);\n\t\t\tcopy.minLength = source.minLength;\n\t\t\tcopy.resolution = source.resolution;\n\t\t} else { //rawPath\n\t\t\tcopy.totalPoints = source.totalPoints;\n\t\t}\n\t\treturn copy;\n\t},\n\t//pushes a new segment into a rawPath, but if its starting values match the ending values of the last segment, it'll merge it into that same segment (to reduce the number of segments)\n\t_appendOrMerge = (rawPath, segment) => {\n\t\tlet index = rawPath.length,\n\t\t\tprevSeg = rawPath[index - 1] || [],\n\t\t\tl = prevSeg.length;\n\t\tif (segment[0] === prevSeg[l-2] && segment[1] === prevSeg[l-1]) {\n\t\t\tsegment = prevSeg.concat(segment.slice(2));\n\t\t\tindex--;\n\t\t}\n\t\trawPath[index] = segment;\n\t},\n\t_bestDistance;\n\n/* TERMINOLOGY\n - RawPath - an array of arrays, one for each Segment. A single RawPath could have multiple \"M\" commands, defining Segments (paths aren't always connected).\n - Segment - an array containing a sequence of Cubic Bezier coordinates in alternating x, y, x, y format. Starting anchor, then control point 1, control point 2, and ending anchor, then the next control point 1, control point 2, anchor, etc. Uses less memory than an array with a bunch of {x, y} points.\n - Bezier - a single cubic Bezier with a starting anchor, two control points, and an ending anchor.\n - the variable \"t\" is typically the position along an individual Bezier path (time) and it's NOT linear, meaning it could accelerate/decelerate based on the control points whereas the \"p\" or \"progress\" value is linearly mapped to the whole path, so it shouldn't really accelerate/decelerate based on control points. So a progress of 0.2 would be almost exactly 20% along the path. \"t\" is ONLY in an individual Bezier piece.\n */\n\n//accepts basic selector text, a path instance, a RawPath instance, or a Segment and returns a RawPath (makes it easy to homogenize things). If an element or selector text is passed in, it'll also cache the value so that if it's queried again, it'll just take the path data from there instead of parsing it all over again (as long as the path data itself hasn't changed - it'll check).\nexport function getRawPath(value) {\n\tvalue = (_isString(value) && _selectorExp.test(value)) ? document.querySelector(value) || value : value;\n\tlet e = value.getAttribute ? value : 0,\n\t\trawPath;\n\tif (e && (value = value.getAttribute(\"d\"))) {\n\t\t//implements caching\n\t\tif (!e._gsPath) {\n\t\t\te._gsPath = {};\n\t\t}\n\t\trawPath = e._gsPath[value];\n\t\treturn (rawPath && !rawPath._dirty) ? rawPath : (e._gsPath[value] = stringToRawPath(value));\n\t}\n\treturn !value ? console.warn(\"Expecting a <path> element or an SVG path data string\") : _isString(value) ? stringToRawPath(value) : (_isNumber(value[0])) ? [value] : value;\n}\n\n//copies a RawPath WITHOUT the length meta data (for speed)\nexport function copyRawPath(rawPath) {\n\tlet a = [],\n\t\ti = 0;\n\tfor (; i < rawPath.length; i++) {\n\t\ta[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n\t}\n\treturn _copyMetaData(rawPath, a);\n}\n\nexport function reverseSegment(segment) {\n\tlet i = 0,\n\t\ty;\n\tsegment.reverse(); //this will invert the order y, x, y, x so we must flip it back.\n\tfor (; i < segment.length; i += 2) {\n\t\ty = segment[i];\n\t\tsegment[i] = segment[i+1];\n\t\tsegment[i+1] = y;\n\t}\n\tsegment.reversed = !segment.reversed;\n}\n\n\n\nlet _createPath = (e, ignore) => {\n\t\tlet path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"),\n\t\t\tattr = [].slice.call(e.attributes),\n\t\t\ti = attr.length,\n\t\t\tname;\n\t\tignore = \",\" + ignore + \",\";\n\t\twhile (--i > -1) {\n\t\t\tname = attr[i].nodeName.toLowerCase(); //in Microsoft Edge, if you don't set the attribute with a lowercase name, it doesn't render correctly! Super weird.\n\t\t\tif (ignore.indexOf(\",\" + name + \",\") < 0) {\n\t\t\t\tpath.setAttributeNS(null, name, attr[i].nodeValue);\n\t\t\t}\n\t\t}\n\t\treturn path;\n\t},\n\t_typeAttrs = {\n\t\trect:\"rx,ry,x,y,width,height\",\n\t\tcircle:\"r,cx,cy\",\n\t\tellipse:\"rx,ry,cx,cy\",\n\t\tline:\"x1,x2,y1,y2\"\n\t},\n\t_attrToObj = (e, attrs) => {\n\t\tlet props = attrs ? attrs.split(\",\") : [],\n\t\t\tobj = {},\n\t\t\ti = props.length;\n\t\twhile (--i > -1) {\n\t\t\tobj[props[i]] = +e.getAttribute(props[i]) || 0;\n\t\t}\n\t\treturn obj;\n\t};\n\n//converts an SVG shape like <circle>, <rect>, <polygon>, <polyline>, <ellipse>, etc. to a <path>, swapping it in and copying the attributes to match.\nexport function convertToPath(element, swap) {\n\tlet type = element.tagName.toLowerCase(),\n\t\tcirc = 0.552284749831,\n\t\tdata, x, y, r, ry, path, rcirc, rycirc, points, w, h, x2, x3, x4, x5, x6, y2, y3, y4, y5, y6, attr;\n\tif (type === \"path\" || !element.getBBox) {\n\t\treturn element;\n\t}\n\tpath = _createPath(element, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n\tattr = _attrToObj(element, _typeAttrs[type]);\n\tif (type === \"rect\") {\n\t\tr = attr.rx;\n\t\try = attr.ry;\n\t\tx = attr.x;\n\t\ty = attr.y;\n\t\tw = attr.width - r * 2;\n\t\th = attr.height - ry * 2;\n\t\tif (r || ry) { //if there are rounded corners, render cubic beziers\n\t\t\tx2 = x + r * (1 - circ);\n\t\t\tx3 = x + r;\n\t\t\tx4 = x3 + w;\n\t\t\tx5 = x4 + r * circ;\n\t\t\tx6 = x4 + r;\n\t\t\ty2 = y + ry * (1 - circ);\n\t\t\ty3 = y + ry;\n\t\t\ty4 = y3 + h;\n\t\t\ty5 = y4 + ry * circ;\n\t\t\ty6 = y4 + ry;\n\t\t\tdata = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(\",\") + \"z\";\n\t\t} else {\n\t\t\tdata = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + (-w) + \" v\" + (-h) + \" h\" + w + \"z\";\n\t\t}\n\n\t} else if (type === \"circle\" || type === \"ellipse\") {\n\t\tif (type === \"circle\") {\n\t\t\tr = ry = attr.r;\n\t\t\trycirc = r * circ;\n\t\t} else {\n\t\t\tr = attr.rx;\n\t\t\try = attr.ry;\n\t\t\trycirc = ry * circ;\n\t\t}\n\t\tx = attr.cx;\n\t\ty = attr.cy;\n\t\trcirc = r * circ;\n\t\tdata = \"M\" + (x+r) + \",\" + y + \" C\" + [x+r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(\",\") + \"z\";\n\t} else if (type === \"line\") {\n\t\tdata = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2; //previously, we just converted to \"Mx,y Lx,y\" but Safari has bugs that cause that not to render properly when using a stroke-dasharray that's not fully visible! Using a cubic bezier fixes that issue.\n\t} else if (type === \"polyline\" || type === \"polygon\") {\n\t\tpoints = (element.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n\t\tx = points.shift();\n\t\ty = points.shift();\n\t\tdata = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n\t\tif (type === \"polygon\") {\n\t\t\tdata += \",\" + x + \",\" + y + \"z\";\n\t\t}\n\t}\n\tpath.setAttribute(\"d\", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n\tif (swap && element.parentNode) {\n\t\telement.parentNode.insertBefore(path, element);\n\t\telement.parentNode.removeChild(element);\n\t}\n\treturn path;\n}\n\n\n\n//returns the rotation (in degrees) at a particular progress on a rawPath (the slope of the tangent)\nexport function getRotationAtProgress(rawPath, progress) {\n\tlet d = getProgressData(rawPath, progress >= 1 ? 1 - 1e-9 : progress ? progress : 1e-9);\n\treturn getRotationAtBezierT(d.segment, d.i, d.t);\n}\n\nfunction getRotationAtBezierT(segment, i, t) {\n\tlet a = segment[i],\n\t\tb = segment[i+2],\n\t\tc = segment[i+4],\n\t\tx;\n\ta += (b - a) * t;\n\tb += (c - b) * t;\n\ta += (b - a) * t;\n\tx = b + ((c + (segment[i+6] - c) * t) - b) * t - a;\n\ta = segment[i+1];\n\tb = segment[i+3];\n\tc = segment[i+5];\n\ta += (b - a) * t;\n\tb += (c - b) * t;\n\ta += (b - a) * t;\n\treturn _round(_atan2(b + ((c + (segment[i+7] - c) * t) - b) * t - a, x) * _RAD2DEG);\n}\n\nexport function sliceRawPath(rawPath, start, end) {\n\tif (_isUndefined(end)) {\n\t\tend = 1;\n\t}\n\tstart = start || 0;\n\tlet reverse = start > end,\n\t\tloops = Math.max(0, ~~(_abs(end - start) - 1e-8));\n\tif (reverse) {\n\t\treverse = end;\n\t\tend = start;\n\t\tstart = reverse;\n\t\treverse = 1;\n\t\tloops -= loops ? 1 : 0;\n\t}\n\tif (start < 0 || end < 0) {\n\t\tlet offset = ~~Math.min(start, end) + 1;\n\t\tstart += offset;\n\t\tend += offset;\n\t}\n\tlet path = copyRawPath(rawPath.totalLength ? rawPath : cacheRawPathMeasurements(rawPath)),\n\t\twrap = (end > 1),\n\t\ts = getProgressData(path, start, _temp, true),\n\t\te = getProgressData(path, end, _temp2),\n\t\teSeg = e.segment,\n\t\tsSeg = s.segment,\n\t\teSegIndex = e.segIndex,\n\t\tsSegIndex = s.segIndex,\n\t\tei = e.i,\n\t\tsi = s.i,\n\t\tsameSegment = (sSegIndex === eSegIndex),\n\t\tsameBezier = (ei === si && sameSegment),\n\t\tinvertedOrder = ((sameSegment && si > ei) || (sameBezier && s.t > e.t)),\n\t\tsShift, eShift, i, copy, totalSegments, l, j;\n\tif (wrap || loops) {\n\t\tif (_splitSegment(path, sSegIndex, si, s.t)) {\n\t\t\tsShift = 1;\n\t\t\tsSegIndex++;\n\t\t\tif (sameBezier) {\n\t\t\t\tif (invertedOrder) {\n\t\t\t\t\te.t /= s.t;\n\t\t\t\t} else {\n\t\t\t\t\te.t = (e.t - s.t) / (1 - s.t);\n\t\t\t\t\teSegIndex++;\n\t\t\t\t\tei = 0;\n\t\t\t\t}\n\t\t\t} else if (sSegIndex <= eSegIndex + 1 && !invertedOrder) {\n\t\t\t\teSegIndex++;\n\t\t\t\tif (sameSegment) {\n\t\t\t\t\tei -= si;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!e.t) {\n\t\t\teSegIndex--;\n\t\t\tif (reverse) {\n\t\t\t\tsSegIndex--;\n\t\t\t}\n\t\t} else if (_splitSegment(path, eSegIndex, ei, e.t)) {\n\t\t\tif (invertedOrder && sShift) {\n\t\t\t\tsSegIndex++;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\teSegIndex++;\n\t\t\t}\n\t\t}\n\t\tcopy = [];\n\t\ttotalSegments = path.length;\n\t\tl = 1 + totalSegments * loops;\n\t\tj = sSegIndex;\n\t\tif (reverse) {\n\t\t\teSegIndex = (eSegIndex || totalSegments) - 1;\n\t\t\tl += (totalSegments - eSegIndex + sSegIndex) % totalSegments;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t_appendOrMerge(copy, path[j]);\n\t\t\t\tj = (j || totalSegments) - 1;\n\t\t\t}\n\t\t} else {\n\t\t\tl += ((totalSegments - sSegIndex) + eSegIndex) % totalSegments;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t_appendOrMerge(copy, path[j++ % totalSegments]);\n\t\t\t}\n\t\t}\n\t\tpath = copy;\n\t} else {\n\t\teShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n\t\tif (start !== end) {\n\t\t\tsShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n\t\t\tif (sameSegment) {\n\t\t\t\teShift += sShift;\n\t\t\t}\n\t\t\teSeg.splice(ei + eShift + 2);\n\t\t\tif (sShift || si) {\n\t\t\t\tsSeg.splice(0, si + sShift);\n\t\t\t}\n\t\t\ti = path.length;\n\t\t\twhile (i--) {\n\t\t\t\t//chop off any extra segments\n\t\t\t\tif (i < sSegIndex || i > eSegIndex) {\n\t\t\t\t\tpath.splice(i, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\teSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0); //record the value before we chop because it'll be impossible to determine the angle after its length is 0!\n\t\t\tei += eShift;\n\t\t\ts = eSeg[ei];\n\t\t\te = eSeg[ei+1];\n\t\t\teSeg.length = eSeg.totalLength = 0;\n\t\t\teSeg.totalPoints = path.totalPoints = 8;\n\t\t\teSeg.push(s, e, s, e, s, e, s, e);\n\t\t}\n\t}\n\tif (reverse) {\n\t\t_reverseRawPath(path, wrap || loops);\n\t}\n\tpath.totalLength = 0;\n\treturn path;\n}\n\n//measures a Segment according to its resolution (so if segment.resolution is 6, for example, it'll take 6 samples equally across each Bezier) and create/populate a \"samples\" array that has the length up to each of those sample points (always increasing from the start) as well as a \"lookup\" array that's broken up according to the smallest distance between 2 samples. This gives us a very fast way of looking up a progress position rather than looping through all the points/Beziers. You can optionally have it only measure a subset, starting at startIndex and going for a specific number of beziers (remember, there are 3 x/y pairs each, for a total of 6 elements for each Bezier). It will also populate a \"totalLength\" property, but that's not generally super accurate because by default it'll only take 6 samples per Bezier. But for performance reasons, it's perfectly adequate for measuring progress values along the path. If you need a more accurate totalLength, either increase the resolution or use the more advanced bezierToPoints() method which keeps adding points until they don't deviate by more than a certain precision value.\nfunction measureSegment(segment, startIndex, bezierQty) {\n\tstartIndex = startIndex || 0;\n\tif (!segment.samples) {\n\t\tsegment.samples = [];\n\t\tsegment.lookup = [];\n\t}\n\tlet resolution = ~~segment.resolution || 12,\n\t\tinc = 1 / resolution,\n\t\tendIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length,\n\t\tx1 = segment[startIndex],\n\t\ty1 = segment[startIndex + 1],\n\t\tsamplesIndex = startIndex ? (startIndex / 6) * resolution : 0,\n\t\tsamples = segment.samples,\n\t\tlookup = segment.lookup,\n\t\tmin = (startIndex ? segment.minLength : _largeNum) || _largeNum,\n\t\tprevLength = samples[samplesIndex + bezierQty * resolution - 1],\n\t\tlength = startIndex ? samples[samplesIndex-1] : 0,\n\t\ti, j, x4, x3, x2, xd, xd1, y4, y3, y2, yd, yd1, inv, t, lengthIndex, l, segLength;\n\tsamples.length = lookup.length = 0;\n\tfor (j = startIndex + 2; j < endIndex; j += 6) {\n\t\tx4 = segment[j + 4] - x1;\n\t\tx3 = segment[j + 2] - x1;\n\t\tx2 = segment[j] - x1;\n\t\ty4 = segment[j + 5] - y1;\n\t\ty3 = segment[j + 3] - y1;\n\t\ty2 = segment[j + 1] - y1;\n\t\txd = xd1 = yd = yd1 = 0;\n\t\tif (_abs(x4) < 1e-5 && _abs(y4) < 1e-5 && _abs(x2) + _abs(y2) < 1e-5) { //dump points that are sufficiently close (basically right on top of each other, making a bezier super tiny or 0 length)\n\t\t\tif (segment.length > 8) {\n\t\t\t\tsegment.splice(j, 6);\n\t\t\t\tj -= 6;\n\t\t\t\tendIndex -= 6;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (i = 1; i <= resolution; i++) {\n\t\t\t\tt = inc * i;\n\t\t\t\tinv = 1 - t;\n\t\t\t\txd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n\t\t\t\tyd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n\t\t\t\tl = _sqrt(yd * yd + xd * xd);\n\t\t\t\tif (l < min) {\n\t\t\t\t\tmin = l;\n\t\t\t\t}\n\t\t\t\tlength += l;\n\t\t\t\tsamples[samplesIndex++] = length;\n\t\t\t}\n\t\t}\n\t\tx1 += x4;\n\t\ty1 += y4;\n\t}\n\tif (prevLength) {\n\t\tprevLength -= length;\n\t\tfor (; samplesIndex < samples.length; samplesIndex++) {\n\t\t\tsamples[samplesIndex] += prevLength;\n\t\t}\n\t}\n\tif (samples.length && min) {\n\t\tsegment.totalLength = segLength = samples[samples.length-1] || 0;\n\t\tsegment.minLength = min;\n\t\tl = lengthIndex = 0;\n\t\tfor (i = 0; i < segLength; i += min) {\n\t\t\tlookup[l++] = (samples[lengthIndex] < i) ? ++lengthIndex : lengthIndex;\n\t\t}\n\t} else {\n\t\tsegment.totalLength = samples[0] = 0;\n\t}\n\treturn startIndex ? length - samples[startIndex / 2 - 1] : length;\n}\n\nexport function cacheRawPathMeasurements(rawPath, resolution) {\n\tlet pathLength, points, i;\n\tfor (i = pathLength = points = 0; i < rawPath.length; i++) {\n\t\trawPath[i].resolution = ~~resolution || 12; //steps per Bezier curve (anchor, 2 control points, to anchor)\n\t\tpoints += rawPath[i].length;\n\t\tpathLength += measureSegment(rawPath[i]);\n\t}\n\trawPath.totalPoints = points;\n\trawPath.totalLength = pathLength;\n\treturn rawPath;\n}\n\n//divide segment[i] at position t (value between 0 and 1, progress along that particular cubic bezier segment that starts at segment[i]). Returns how many elements were spliced into the segment array (either 0 or 6)\nexport function subdivideSegment(segment, i, t) {\n\tif (t <= 0 || t >= 1) {\n\t\treturn 0;\n\t}\n\tlet ax = segment[i],\n\t\tay = segment[i+1],\n\t\tcp1x = segment[i+2],\n\t\tcp1y = segment[i+3],\n\t\tcp2x = segment[i+4],\n\t\tcp2y = segment[i+5],\n\t\tbx = segment[i+6],\n\t\tby = segment[i+7],\n\t\tx1a = ax + (cp1x - ax) * t,\n\t\tx2 = cp1x + (cp2x - cp1x) * t,\n\t\ty1a = ay + (cp1y - ay) * t,\n\t\ty2 = cp1y + (cp2y - cp1y) * t,\n\t\tx1 = x1a + (x2 - x1a) * t,\n\t\ty1 = y1a + (y2 - y1a) * t,\n\t\tx2a = cp2x + (bx - cp2x) * t,\n\t\ty2a = cp2y + (by - cp2y) * t;\n\tx2 += (x2a - x2) * t;\n\ty2 += (y2a - y2) * t;\n\tsegment.splice(i + 2, 4,\n\t\t_round(x1a),                  //first control point\n\t\t_round(y1a),\n\t\t_round(x1),                   //second control point\n\t\t_round(y1),\n\t\t_round(x1 + (x2 - x1) * t),   //new fabricated anchor on line\n\t\t_round(y1 + (y2 - y1) * t),\n\t\t_round(x2),                   //third control point\n\t\t_round(y2),\n\t\t_round(x2a),                  //fourth control point\n\t\t_round(y2a)\n\t);\n\tif (segment.samples) {\n\t\tsegment.samples.splice(((i / 6) * segment.resolution) | 0, 0, 0, 0, 0, 0, 0, 0);\n\t}\n\treturn 6;\n}\n\n// returns an object {path, segment, segIndex, i, t}\nfunction getProgressData(rawPath, progress, decoratee, pushToNextIfAtEnd) {\n\tdecoratee = decoratee || {};\n\tif (!rawPath.totalLength) {\n\t\tcacheRawPathMeasurements(rawPath);\n\t}\n\tif (progress < 0 || progress > 1) {\n\t\tprogress = _wrapProgress(progress);\n\t}\n\tlet segIndex = 0,\n\t\tsegment = rawPath[0],\n\t\tsamples, resolution, length, min, max, i, t;\n\tif (rawPath.length > 1) { //speed optimization: most of the time, there's only one segment so skip the recursion.\n\t\tlength = rawPath.totalLength * progress;\n\t\tmax = i = 0;\n\t\twhile ((max += rawPath[i++].totalLength) < length) {\n\t\t\tsegIndex = i;\n\t\t}\n\t\tsegment = rawPath[segIndex];\n\t\tmin = max - segment.totalLength;\n\t\tprogress = ((length - min) / (max - min)) || 0;\n\t}\n\tsamples = segment.samples;\n\tresolution = segment.resolution; //how many samples per cubic bezier chunk\n\tlength = segment.totalLength * progress;\n\ti = segment.lookup[~~(length / segment.minLength)] || 0;\n\tmin = i ? samples[i-1] : 0;\n\tmax = samples[i];\n\tif (max < length) {\n\t\tmin = max;\n\t\tmax = samples[++i];\n\t}\n\tt = (1 / resolution) * (((length - min) / (max - min)) + ((i % resolution)));\n\ti = ~~(i / resolution) * 6;\n\tif (pushToNextIfAtEnd && t === 1) {\n\t\tif (i + 6 < segment.length) {\n\t\t\ti += 6;\n\t\t\tt = 0;\n\t\t} else if (segIndex + 1 < rawPath.length) {\n\t\t\ti = t = 0;\n\t\t\tsegment = rawPath[++segIndex];\n\t\t}\n\t}\n\tdecoratee.t = t;\n\tdecoratee.i = i;\n\tdecoratee.path = rawPath;\n\tdecoratee.segment = segment;\n\tdecoratee.segIndex = segIndex;\n\treturn decoratee;\n}\n\nexport function getPositionOnPath(rawPath, progress, includeAngle, point) {\n\tlet segment = rawPath[0],\n\t\tresult = point || {},\n\t\tsamples, resolution, length, min, max, i, t, a, inv;\n\tif (progress < 0 || progress > 1) {\n\t\tprogress = _wrapProgress(progress);\n\t}\n\tif (rawPath.length > 1) { //speed optimization: most of the time, there's only one segment so skip the recursion.\n\t\tlength = rawPath.totalLength * progress;\n\t\tmax = i = 0;\n\t\twhile ((max += rawPath[i++].totalLength) < length) {\n\t\t\tsegment = rawPath[i];\n\t\t}\n\t\tmin = max - segment.totalLength;\n\t\tprogress = ((length - min) / (max - min)) || 0;\n\t}\n\tsamples = segment.samples;\n\tresolution = segment.resolution;\n\tlength = segment.totalLength * progress;\n\ti = segment.lookup[~~(length / segment.minLength)] || 0;\n\tmin = i ? samples[i-1] : 0;\n\tmax = samples[i];\n\tif (max < length) {\n\t\tmin = max;\n\t\tmax = samples[++i];\n\t}\n\tt = ((1 / resolution) * (((length - min) / (max - min)) + ((i % resolution)))) || 0;\n\tinv = 1 - t;\n\ti = ~~(i / resolution) * 6;\n\ta = segment[i];\n\tresult.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n\tresult.y = _round((t * t * (segment[i + 7] - (a = segment[i+1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n\tif (includeAngle) {\n\t\tresult.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n\t}\n\treturn result;\n}\n\n\n\n//applies a matrix transform to RawPath (or a segment in a RawPath) and returns whatever was passed in (it transforms the values in the array(s), not a copy).\nexport function transformRawPath(rawPath, a, b, c, d, tx, ty) {\n\tlet j = rawPath.length,\n\t\tsegment, l, i, x, y;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tl = segment.length;\n\t\tfor (i = 0; i < l; i += 2) {\n\t\t\tx = segment[i];\n\t\t\ty = segment[i+1];\n\t\t\tsegment[i] = x * a + y * c + tx;\n\t\t\tsegment[i+1] = x * b + y * d + ty;\n\t\t}\n\t}\n\trawPath._dirty = 1;\n\treturn rawPath;\n}\n\n\n\n// translates SVG arc data into a segment (cubic beziers). Angle is in degrees.\nfunction arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n\tif (lastX === x && lastY === y) {\n\t\treturn;\n\t}\n\trx = _abs(rx);\n\try = _abs(ry);\n\tlet angleRad = (angle % 360) * _DEG2RAD,\n\t\tcosAngle = _cos(angleRad),\n\t\tsinAngle = _sin(angleRad),\n\t\tPI = Math.PI,\n\t\tTWOPI = PI * 2,\n\t\tdx2 = (lastX - x) / 2,\n\t\tdy2 = (lastY - y) / 2,\n\t\tx1 = (cosAngle * dx2 + sinAngle * dy2),\n\t\ty1 = (-sinAngle * dx2 + cosAngle * dy2),\n\t\tx1_sq = x1 * x1,\n\t\ty1_sq = y1 * y1,\n\t\tradiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\tif (radiiCheck > 1) {\n\t\trx = _sqrt(radiiCheck) * rx;\n\t\try = _sqrt(radiiCheck) * ry;\n\t}\n\tlet rx_sq = rx * rx,\n\t\try_sq = ry * ry,\n\t\tsq = ((rx_sq * ry_sq) - (rx_sq * y1_sq) - (ry_sq * x1_sq)) / ((rx_sq * y1_sq) + (ry_sq * x1_sq));\n\tif (sq < 0) {\n\t\tsq = 0;\n\t}\n\tlet coef = ((largeArcFlag === sweepFlag) ? -1 : 1) * _sqrt(sq),\n\t\tcx1 = coef * ((rx * y1) / ry),\n\t\tcy1 = coef * -((ry * x1) / rx),\n\t\tsx2 = (lastX + x) / 2,\n\t\tsy2 = (lastY + y) / 2,\n\t\tcx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n\t\tcy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n\t\tux = (x1 - cx1) / rx,\n\t\tuy = (y1 - cy1) / ry,\n\t\tvx = (-x1 - cx1) / rx,\n\t\tvy = (-y1 - cy1) / ry,\n\t\ttemp = ux * ux + uy * uy,\n\t\tangleStart = ((uy < 0) ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n\t\tangleExtent = ((ux * vy - uy * vx < 0) ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\tif (isNaN(angleExtent)) { //rare edge case. Math.cos(-1) is NaN.\n\t\tangleExtent = PI;\n\t}\n\tif (!sweepFlag && angleExtent > 0) {\n\t\tangleExtent -= TWOPI;\n\t} else if (sweepFlag && angleExtent < 0) {\n\t\tangleExtent += TWOPI;\n\t}\n\tangleStart %= TWOPI;\n\tangleExtent %= TWOPI;\n\tlet segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)),\n\t\trawPath = [],\n\t\tangleIncrement = angleExtent / segments,\n\t\tcontrolLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n\t\tma = cosAngle * rx,\n\t\tmb = sinAngle * rx,\n\t\tmc = sinAngle * -ry,\n\t\tmd = cosAngle * ry,\n\t\ti;\n\tfor (i = 0; i < segments; i++) {\n\t\tangle = angleStart + i * angleIncrement;\n\t\tx1 = _cos(angle);\n\t\ty1 = _sin(angle);\n\t\tux = _cos(angle += angleIncrement);\n\t\tuy = _sin(angle);\n\t\trawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n\t}\n\t//now transform according to the actual size of the ellipse/arc (the beziers were noramlized, between 0 and 1 on a circle).\n\tfor (i = 0; i < rawPath.length; i+=2) {\n\t\tx1 = rawPath[i];\n\t\ty1 = rawPath[i+1];\n\t\trawPath[i] = x1 * ma + y1 * mc + cx;\n\t\trawPath[i+1] = x1 * mb + y1 * md + cy;\n\t}\n\trawPath[i-2] = x; //always set the end to exactly where it's supposed to be\n\trawPath[i-1] = y;\n\treturn rawPath;\n}\n\n//Spits back a RawPath with absolute coordinates. Each segment starts with a \"moveTo\" command (x coordinate, then y) and then 2 control points (x, y, x, y), then anchor. The goal is to minimize memory and maximize speed.\nexport function stringToRawPath(d) {\n\tlet a = (d + \"\").replace(_scientific, m => { let n = +m; return (n < 0.0001 && n > -0.0001) ? 0 : n; }).match(_svgPathExp) || [], //some authoring programs spit out very small numbers in scientific notation like \"1e-5\", so make sure we round that down to 0 first.\n\t\tpath = [],\n\t\trelativeX = 0,\n\t\trelativeY = 0,\n\t\ttwoThirds = 2 / 3,\n\t\telements = a.length,\n\t\tpoints = 0,\n\t\terrorMessage = \"ERROR: malformed path: \" + d,\n\t\ti, j, x, y, command, isRelative, segment, startX, startY, difX, difY, beziers, prevCommand, flag1, flag2,\n\t\tline = function(sx, sy, ex, ey) {\n\t\t\tdifX = (ex - sx) / 3;\n\t\t\tdifY = (ey - sy) / 3;\n\t\t\tsegment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n\t\t};\n\tif (!d || !isNaN(a[0]) || isNaN(a[1])) {\n\t\tconsole.log(errorMessage);\n\t\treturn path;\n\t}\n\tfor (i = 0; i < elements; i++) {\n\t\tprevCommand = command;\n\t\tif (isNaN(a[i])) {\n\t\t\tcommand = a[i].toUpperCase();\n\t\t\tisRelative = (command !== a[i]); //lower case means relative\n\t\t} else { //commands like \"C\" can be strung together without any new command characters between.\n\t\t\ti--;\n\t\t}\n\t\tx = +a[i + 1];\n\t\ty = +a[i + 2];\n\t\tif (isRelative) {\n\t\t\tx += relativeX;\n\t\t\ty += relativeY;\n\t\t}\n\t\tif (!i) {\n\t\t\tstartX = x;\n\t\t\tstartY = y;\n\t\t}\n\n\t\t// \"M\" (move)\n\t\tif (command === \"M\") {\n\t\t\tif (segment) {\n\t\t\t\tif (segment.length < 8) { //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n\t\t\t\t\tpath.length -= 1;\n\t\t\t\t} else {\n\t\t\t\t\tpoints += segment.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = startX = x;\n\t\t\trelativeY = startY = y;\n\t\t\tsegment = [x, y];\n\t\t\tpath.push(segment);\n\t\t\ti += 2;\n\t\t\tcommand = \"L\"; //an \"M\" with more than 2 values gets interpreted as \"lineTo\" commands (\"L\").\n\n\t\t// \"C\" (cubic bezier)\n\t\t} else if (command === \"C\") {\n\t\t\tif (!segment) {\n\t\t\t\tsegment = [0, 0];\n\t\t\t}\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\t//note: \"*1\" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n\t\t\tsegment.push(x,\ty, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, (relativeX += a[i + 5] * 1),\t(relativeY += a[i + 6] * 1));\n\t\t\ti += 6;\n\n\t\t// \"S\" (continuation of cubic bezier)\n\t\t} else if (command === \"S\") {\n\t\t\tdifX = relativeX;\n\t\t\tdifY = relativeY;\n\t\t\tif (prevCommand === \"C\" || prevCommand === \"S\") {\n\t\t\t\tdifX += relativeX - segment[segment.length - 4];\n\t\t\t\tdifY += relativeY - segment[segment.length - 3];\n\t\t\t}\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\tsegment.push(difX, difY, x,\ty, (relativeX += a[i + 3] * 1), (relativeY += a[i + 4] * 1));\n\t\t\ti += 4;\n\n\t\t// \"Q\" (quadratic bezier)\n\t\t} else if (command === \"Q\") {\n\t\t\tdifX = relativeX + (x - relativeX) * twoThirds;\n\t\t\tdifY = relativeY + (y - relativeY) * twoThirds;\n\t\t\tif (!isRelative) {\n\t\t\t\trelativeX = relativeY = 0;\n\t\t\t}\n\t\t\trelativeX += a[i + 3] * 1;\n\t\t\trelativeY += a[i + 4] * 1;\n\t\t\tsegment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n\t\t\ti += 4;\n\n\t\t// \"T\" (continuation of quadratic bezier)\n\t\t} else if (command === \"T\") {\n\t\t\tdifX = relativeX - segment[segment.length - 4];\n\t\t\tdifY = relativeY - segment[segment.length - 3];\n\t\t\tsegment.push(relativeX + difX, relativeY + difY, x + ((relativeX + difX * 1.5) - x) * twoThirds, y + ((relativeY + difY * 1.5) - y) * twoThirds, (relativeX = x), (relativeY = y));\n\t\t\ti += 2;\n\n\t\t// \"H\" (horizontal line)\n\t\t} else if (command === \"H\") {\n\t\t\tline(relativeX, relativeY, (relativeX = x), relativeY);\n\t\t\ti += 1;\n\n\t\t// \"V\" (vertical line)\n\t\t} else if (command === \"V\") {\n\t\t\t//adjust values because the first (and only one) isn't x in this case, it's y.\n\t\t\tline(relativeX, relativeY, relativeX, (relativeY = x + (isRelative ? relativeY - relativeX : 0)));\n\t\t\ti += 1;\n\n\t\t// \"L\" (line) or \"Z\" (close)\n\t\t} else if (command === \"L\" || command === \"Z\") {\n\t\t\tif (command === \"Z\") {\n\t\t\t\tx = startX;\n\t\t\t\ty = startY;\n\t\t\t\tsegment.closed = true;\n\t\t\t}\n\t\t\tif (command === \"L\" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n\t\t\t\tline(relativeX, relativeY, x, y);\n\t\t\t\tif (command === \"L\") {\n\t\t\t\t\ti += 2;\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = x;\n\t\t\trelativeY = y;\n\n\t\t// \"A\" (arc)\n\t\t} else if (command === \"A\") {\n\t\t\tflag1 = a[i+4];\n\t\t\tflag2 = a[i+5];\n\t\t\tdifX = a[i+6];\n\t\t\tdifY = a[i+7];\n\t\t\tj = 7;\n\t\t\tif (flag1.length > 1) { // for cases when the flags are merged, like \"a8 8 0 018 8\" (the 0 and 1 flags are WITH the x value of 8, but it could also be \"a8 8 0 01-8 8\" so it may include x or not)\n\t\t\t\tif (flag1.length < 3) {\n\t\t\t\t\tdifY = difX;\n\t\t\t\t\tdifX = flag2;\n\t\t\t\t\tj--;\n\t\t\t\t} else {\n\t\t\t\t\tdifY = flag2;\n\t\t\t\t\tdifX = flag1.substr(2);\n\t\t\t\t\tj-=2;\n\t\t\t\t}\n\t\t\t\tflag2 = flag1.charAt(1);\n\t\t\t\tflag1 = flag1.charAt(0);\n\t\t\t}\n\t\t\tbeziers = arcToSegment(relativeX, relativeY, +a[i+1], +a[i+2], +a[i+3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX*1, (isRelative ? relativeY : 0) + difY*1);\n\t\t\ti += j;\n\t\t\tif (beziers) {\n\t\t\t\tfor (j = 0; j < beziers.length; j++) {\n\t\t\t\t\tsegment.push(beziers[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\trelativeX = segment[segment.length-2];\n\t\t\trelativeY = segment[segment.length-1];\n\n\t\t} else {\n\t\t\tconsole.log(errorMessage);\n\t\t}\n\t}\n\ti = segment.length;\n\tif (i < 6) { //in case there's odd SVG like a M0,0 command at the very end.\n\t\tpath.pop();\n\t\ti = 0;\n\t} else if (segment[0] === segment[i-2] && segment[1] === segment[i-1]) {\n\t\tsegment.closed = true;\n\t}\n\tpath.totalPoints = points + i;\n\treturn path;\n}\n\n//populates the points array in alternating x/y values (like [x, y, x, y...] instead of individual point objects [{x, y}, {x, y}...] to conserve memory and stay in line with how we're handling segment arrays\nexport function bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n\tlet x12 = (x1 + x2) / 2,\n\t\ty12 = (y1 + y2) / 2,\n\t\tx23 = (x2 + x3) / 2,\n\t\ty23 = (y2 + y3) / 2,\n\t\tx34 = (x3 + x4) / 2,\n\t\ty34 = (y3 + y4) / 2,\n\t\tx123 = (x12 + x23) / 2,\n\t\ty123 = (y12 + y23) / 2,\n\t\tx234 = (x23 + x34) / 2,\n\t\ty234 = (y23 + y34) / 2,\n\t\tx1234 = (x123 + x234) / 2,\n\t\ty1234 = (y123 + y234) / 2,\n\t\tdx = x4 - x1,\n\t\tdy = y4 - y1,\n\t\td2 = _abs((x2 - x4) * dy - (y2 - y4) * dx),\n\t\td3 = _abs((x3 - x4) * dy - (y3 - y4) * dx),\n\t\tlength;\n\tif (!points) {\n\t\tpoints = [x1, y1, x4, y4];\n\t\tindex = 2;\n\t}\n\tpoints.splice(index || points.length - 2, 0, x1234, y1234);\n\tif ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n\t\tlength = points.length;\n\t\tbezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);\n\t\tbezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 2 + (points.length - length));\n\t}\n\treturn points;\n}\n\n/*\nfunction getAngleBetweenPoints(x0, y0, x1, y1, x2, y2) { //angle between 3 points in radians\n\tvar dx1 = x1 - x0,\n\t\tdy1 = y1 - y0,\n\t\tdx2 = x2 - x1,\n\t\tdy2 = y2 - y1,\n\t\tdx3 = x2 - x0,\n\t\tdy3 = y2 - y0,\n\t\ta = dx1 * dx1 + dy1 * dy1,\n\t\tb = dx2 * dx2 + dy2 * dy2,\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\treturn Math.acos( (a + b - c) / _sqrt(4 * a * b) );\n},\n*/\n\n//pointsToSegment() doesn't handle flat coordinates (where y is always 0) the way we need (the resulting control points are always right on top of the anchors), so this function basically makes the control points go directly up and down, varying in length based on the curviness (more curvy, further control points)\nexport function flatPointsToSegment(points, curviness=1) {\n\tlet x = points[0],\n\t\ty = 0,\n\t\tsegment = [x, y],\n\t\ti = 2;\n\tfor (; i < points.length; i+=2) {\n\t\tsegment.push(\n\t\t\tx,\n\t\t\ty,\n\t\t\tpoints[i],\n\t\t\t(y = (points[i] - x) * curviness / 2),\n\t\t\t(x = points[i]),\n\t\t\t-y\n\t\t);\n\t}\n\treturn segment;\n}\n\n//points is an array of x/y points, like [x, y, x, y, x, y]\nexport function pointsToSegment(points, curviness, cornerThreshold) {\n\t//points = simplifyPoints(points, tolerance);\n\tlet l = points.length-2,\n\t\tx = +points[0],\n\t\ty = +points[1],\n\t\tnextX = +points[2],\n\t\tnextY = +points[3],\n\t\tsegment = [x, y, x, y],\n\t\tdx2 = nextX - x,\n\t\tdy2 = nextY - y,\n\t\tprevX, prevY, angle, slope, i, dx1, dx3, dy1, dy3, d1, d2, a, b, c;\n\tif (isNaN(cornerThreshold)) {\n\t\tcornerThreshold = Math.PI / 10;\n\t}\n\tcurviness = (curviness || curviness === 0) ? +curviness : 1;\n\tfor (i = 2; i < l; i+=2) {\n\t\tprevX = x;\n\t\tprevY = y;\n\t\tx = nextX;\n\t\ty = nextY;\n\t\tnextX = +points[i+2];\n\t\tnextY = +points[i+3];\n\t\tdx1 = dx2;\n\t\tdy1 = dy2;\n\t\tdx2 = nextX - x;\n\t\tdy2 = nextY - y;\n\t\tdx3 = nextX - prevX;\n\t\tdy3 = nextY - prevY;\n\t\ta = dx1 * dx1 + dy1 * dy1;\n\t\tb = dx2 * dx2 + dy2 * dy2;\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\t\tangle = Math.acos( (a + b - c) / _sqrt(4 * a * b) ); //angle between the 3 points\n\t\td2 = (angle / Math.PI) * curviness; //temporary precalculation for speed (reusing d2 variable)\n\t\td1 = _sqrt(a) * d2; //the tighter the angle, the shorter we make the handles in proportion.\n\t\td2 *= _sqrt(b);\n\t\tif (x !== prevX || y !== prevY) {\n\t\t\tif (angle > cornerThreshold) {\n\t\t\t\tslope = _atan2(dy3, dx3);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x - _cos(slope) * d1),   //first control point\n\t\t\t\t\t_round(y - _sin(slope) * d1),\n\t\t\t\t\t_round(x),                      //anchor\n\t\t\t\t\t_round(y),\n\t\t\t\t\t_round(x + _cos(slope) * d2),   //second control point\n\t\t\t\t\t_round(y + _sin(slope) * d2)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tslope = _atan2(dy1, dx1);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x - _cos(slope) * d1),   //first control point\n\t\t\t\t\t_round(y - _sin(slope) * d1));\n\t\t\t\tslope = _atan2(dy2, dx2);\n\t\t\t\tsegment.push(\n\t\t\t\t\t_round(x),                      //anchor\n\t\t\t\t\t_round(y),\n\t\t\t\t\t_round(x + _cos(slope) * d2),   //second control point\n\t\t\t\t\t_round(y + _sin(slope) * d2)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\tsegment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY));\n\treturn segment;\n}\n\n//returns the squared distance between an x/y coordinate and a segment between x1/y1 and x2/y2\nfunction pointToSegDist(x, y, x1, y1, x2, y2) {\n\tlet dx = x2 - x1,\n\t\tdy = y2 - y1,\n\t\tt;\n\tif (dx || dy) {\n\t\tt = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n\t\tif (t > 1) {\n\t\t\tx1 = x2;\n\t\t\ty1 = y2;\n\t\t} else if (t > 0) {\n\t\t\tx1 += dx * t;\n\t\t\ty1 += dy * t;\n\t\t}\n\t}\n\treturn (x - x1) ** 2 + (y - y1) ** 2;\n}\n\nfunction simplifyStep(points, first, last, tolerance, simplified) {\n\tlet maxSqDist = tolerance,\n\t\tfirstX = points[first],\n\t\tfirstY = points[first+1],\n\t\tlastX = points[last],\n\t\tlastY = points[last+1],\n\t\tindex, i, d;\n\tfor (i = first + 2; i < last; i += 2) {\n\t\td = pointToSegDist(points[i], points[i+1], firstX, firstY, lastX, lastY);\n\t\tif (d > maxSqDist) {\n\t\t\tindex = i;\n\t\t\tmaxSqDist = d;\n\t\t}\n\t}\n\tif (maxSqDist > tolerance) {\n\t\tif (index - first > 2) {\n\t\t\tsimplifyStep(points, first, index, tolerance, simplified);\n\t\t}\n\t\tsimplified.push(points[index], points[index+1]);\n\t\tif (last - index > 2) {\n\t\t\tsimplifyStep(points, index, last, tolerance, simplified);\n\t\t}\n\t}\n}\n\n//points is an array of x/y values like [x, y, x, y, x, y]\nexport function simplifyPoints(points, tolerance) {\n\tlet prevX = parseFloat(points[0]),\n\t\tprevY = parseFloat(points[1]),\n\t\ttemp = [prevX, prevY],\n\t\tl = points.length - 2,\n\t\ti, x, y, dx, dy, result, last;\n\ttolerance = (tolerance || 1) ** 2;\n\tfor (i = 2; i < l; i += 2) {\n\t\tx = parseFloat(points[i]);\n\t\ty = parseFloat(points[i+1]);\n\t\tdx = prevX - x;\n\t\tdy = prevY - y;\n\t\tif (dx * dx + dy * dy > tolerance) {\n\t\t\ttemp.push(x, y);\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t}\n\ttemp.push(parseFloat(points[l]), parseFloat(points[l+1]));\n\tlast = temp.length - 2;\n\tresult = [temp[0], temp[1]];\n\tsimplifyStep(temp, 0, last, tolerance, result);\n\tresult.push(temp[last], temp[last+1]);\n\treturn result;\n}\n\nfunction getClosestProgressOnBezier(iterations, px, py, start, end, slices, x0, y0, x1, y1, x2, y2, x3, y3) {\n\tlet inc = (end - start) / slices,\n\t\tbest = 0,\n\t\tt = start,\n\t\tx, y, d, dx, dy, inv;\n\t_bestDistance = _largeNum;\n\twhile (t <= end) {\n\t\tinv = 1 - t;\n\t\tx = inv * inv * inv * x0 + 3 * inv * inv * t * x1 + 3 * inv * t * t * x2 + t * t * t * x3;\n\t\ty = inv * inv * inv * y0 + 3 * inv * inv * t * y1 + 3 * inv * t * t * y2 + t * t * t * y3;\n\t\tdx = x - px;\n\t\tdy = y - py;\n\t\td = dx * dx + dy * dy;\n\t\tif (d < _bestDistance) {\n\t\t\t_bestDistance = d;\n\t\t\tbest = t;\n\t\t}\n\t\tt += inc;\n\t}\n\treturn (iterations > 1) ? getClosestProgressOnBezier(iterations - 1, px, py, Math.max(best - inc, 0), Math.min(best + inc, 1), slices, x0, y0, x1, y1, x2, y2, x3, y3) : best;\n}\n\nexport function getClosestData(rawPath, x, y, slices) { //returns an object with the closest j, i, and t (j is the segment index, i is the index of the point in that segment, and t is the time/progress along that bezier)\n\tlet closest = {j:0, i:0, t:0},\n\t\tbestDistance = _largeNum,\n\t\ti, j, t, segment;\n\tfor (j = 0; j < rawPath.length; j++) {\n\t\tsegment = rawPath[j];\n\t\tfor (i = 0; i < segment.length; i+=6) {\n\t\t\tt = getClosestProgressOnBezier(1, x, y, 0, 1, slices || 20, segment[i], segment[i+1], segment[i+2], segment[i+3], segment[i+4], segment[i+5], segment[i+6], segment[i+7]);\n\t\t\tif (bestDistance > _bestDistance) {\n\t\t\t\tbestDistance = _bestDistance;\n\t\t\t\tclosest.j = j;\n\t\t\t\tclosest.i = i;\n\t\t\t\tclosest.t = t;\n\t\t\t}\n\t\t}\n\t}\n\treturn closest;\n}\n\n//subdivide a Segment closest to a specific x,y coordinate\nexport function subdivideSegmentNear(x, y, segment, slices, iterations) {\n\tlet l = segment.length,\n\t\tbestDistance = _largeNum,\n\t\tbestT = 0,\n\t\tbestSegmentIndex = 0,\n\t\tt, i;\n\tslices = slices || 20;\n\titerations = iterations || 3;\n\tfor (i = 0; i < l; i += 6) {\n\t\tt = getClosestProgressOnBezier(1, x, y, 0, 1, slices, segment[i], segment[i+1], segment[i+2], segment[i+3], segment[i+4], segment[i+5], segment[i+6], segment[i+7]);\n\t\tif (bestDistance > _bestDistance) {\n\t\t\tbestDistance = _bestDistance;\n\t\t\tbestT = t;\n\t\t\tbestSegmentIndex = i;\n\t\t}\n\t}\n\tt = getClosestProgressOnBezier(iterations, x, y, bestT - 0.05, bestT + 0.05, slices, segment[bestSegmentIndex], segment[bestSegmentIndex+1], segment[bestSegmentIndex+2], segment[bestSegmentIndex+3], segment[bestSegmentIndex+4], segment[bestSegmentIndex+5], segment[bestSegmentIndex+6], segment[bestSegmentIndex+7]);\n\tsubdivideSegment(segment, bestSegmentIndex, t);\n\treturn bestSegmentIndex + 6;\n}\n\n/*\nTakes any of the following and converts it to an all Cubic Bezier SVG data string:\n- A <path> data string like \"M0,0 L2,4 v20,15 H100\"\n- A RawPath, like [[x, y, x, y, x, y, x, y][[x, y, x, y, x, y, x, y]]\n- A Segment, like [x, y, x, y, x, y, x, y]\n\nNote: all numbers are rounded down to the closest 0.001 to minimize memory, maximize speed, and avoid odd numbers like 1e-13\n*/\nexport function rawPathToString(rawPath) {\n\tif (_isNumber(rawPath[0])) { //in case a segment is passed in instead\n\t\trawPath = [rawPath];\n\t}\n\tlet result = \"\",\n\t\tl = rawPath.length,\n\t\tsl, s, i, segment;\n\tfor (s = 0; s < l; s++) {\n\t\tsegment = rawPath[s];\n\t\tresult += \"M\" + _round(segment[0]) + \",\" + _round(segment[1]) + \" C\";\n\t\tsl = segment.length;\n\t\tfor (i = 2; i < sl; i++) {\n\t\t\tresult += _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i]) + \" \";\n\t\t}\n\t\tif (segment.closed) {\n\t\t\tresult += \"z\";\n\t\t}\n\t}\n\treturn result;\n}\n\n/*\n// takes a segment with coordinates [x, y, x, y, ...] and converts the control points into angles and lengths [x, y, angle, length, angle, length, x, y, angle, length, ...] so that it animates more cleanly and avoids odd breaks/kinks. For example, if you animate from 1 o'clock to 6 o'clock, it'd just go directly/linearly rather than around. So the length would be very short in the middle of the tween.\nexport function cpCoordsToAngles(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tx, y, i;\n\tfor (i = 0; i < segment.length; i+=6) {\n\t\tx = segment[i+2] - segment[i];\n\t\ty = segment[i+3] - segment[i+1];\n\t\tresult[i+2] = Math.atan2(y, x);\n\t\tresult[i+3] = Math.sqrt(x * x + y * y);\n\t\tx = segment[i+6] - segment[i+4];\n\t\ty = segment[i+7] - segment[i+5];\n\t\tresult[i+4] = Math.atan2(y, x);\n\t\tresult[i+5] = Math.sqrt(x * x + y * y);\n\t}\n\treturn result;\n}\n\n// takes a segment that was converted with cpCoordsToAngles() to have angles and lengths instead of coordinates for the control points, and converts it BACK into coordinates.\nexport function cpAnglesToCoords(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tlength = segment.length,\n\t\trnd = 1000,\n\t\tangle, l, i, j;\n\tfor (i = 0; i < length; i+=6) {\n\t\tangle = segment[i+2];\n\t\tl = segment[i+3]; //length\n\t\tresult[i+2] = (((segment[i] + Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+3] = (((segment[i+1] + Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t\tangle = segment[i+4];\n\t\tl = segment[i+5]; //length\n\t\tresult[i+4] = (((segment[i+6] - Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+5] = (((segment[i+7] - Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t}\n\treturn result;\n}\n\n//adds an \"isSmooth\" array to each segment and populates it with a boolean value indicating whether or not it's smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.\nexport function populateSmoothData(rawPath) {\n\tlet j = rawPath.length,\n\t\tsmooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tisSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];\n\t\tsmoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];\n\t\tisSmooth.length = 4;\n\t\tl = segment.length - 2;\n\t\tfor (i = 6; i < l; i += 6) {\n\t\t\tx = segment[i] - segment[i - 2];\n\t\t\ty = segment[i + 1] - segment[i - 1];\n\t\t\tx2 = segment[i + 2] - segment[i];\n\t\t\ty2 = segment[i + 3] - segment[i + 1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tsmooth = (Math.abs(a - a2) < 0.09);\n\t\t\tif (smooth) {\n\t\t\t\tsmoothData[i - 2] = a;\n\t\t\t\tsmoothData[i + 2] = a2;\n\t\t\t\tsmoothData[i - 1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[i + 3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t}\n\t\t\tisSmooth.push(smooth, smooth, 0, 0, smooth, smooth);\n\t\t}\n\t\t//if the first and last points are identical, check to see if there's a smooth transition. We must handle this a bit differently due to their positions in the array.\n\t\tif (segment[l] === segment[0] && segment[l+1] === segment[1]) {\n\t\t\tx = segment[0] - segment[l-2];\n\t\t\ty = segment[1] - segment[l-1];\n\t\t\tx2 = segment[2] - segment[0];\n\t\t\ty2 = segment[3] - segment[1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tif (Math.abs(a - a2) < 0.09) {\n\t\t\t\tsmoothData[l-2] = a;\n\t\t\t\tsmoothData[2] = a2;\n\t\t\t\tsmoothData[l-1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t\tisSmooth[l-2] = isSmooth[l-1] = true; //don't change indexes 2 and 3 because we'll trigger everything from the END, and this will optimize file size a bit.\n\t\t\t}\n\t\t}\n\t}\n\treturn rawPath;\n}\nexport function pointToScreen(svgElement, point) {\n\tif (arguments.length < 2) { //by default, take the first set of coordinates in the path as the point\n\t\tlet rawPath = getRawPath(svgElement);\n\t\tpoint = svgElement.ownerSVGElement.createSVGPoint();\n\t\tpoint.x = rawPath[0][0];\n\t\tpoint.y = rawPath[0][1];\n\t}\n\treturn point.matrixTransform(svgElement.getScreenCTM());\n}\n\n*/","/*!\n * matrix 3.2.6\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nlet _doc, _win, _docElement, _body,\t_divContainer, _svgContainer, _identityMatrix,\n\t_transformProp = \"transform\",\n\t_transformOriginProp = _transformProp + \"Origin\",\n\t_hasOffsetBug,\n\t_setDoc = element => {\n\t\tlet doc = element.ownerDocument || element;\n\t\tif (!(_transformProp in element.style) && \"msTransform\" in element.style) { //to improve compatibility with old Microsoft browsers\n\t\t\t_transformProp = \"msTransform\";\n\t\t\t_transformOriginProp = _transformProp + \"Origin\";\n\t\t}\n\t\twhile (doc.parentNode && (doc = doc.parentNode)) {\t}\n\t\t_win = window;\n\t\t_identityMatrix = new Matrix2D();\n\t\tif (doc) {\n\t\t\t_doc = doc;\n\t\t\t_docElement = doc.documentElement;\n\t\t\t_body = doc.body;\n\t\t\t// now test for the offset reporting bug. Use feature detection instead of browser sniffing to make things more bulletproof and future-proof. Hopefully Safari will fix their bug soon but it's 2020 and it's still not fixed.\n\t\t\tlet d1 = doc.createElement(\"div\"),\n\t\t\t\td2 = doc.createElement(\"div\");\n\t\t\t_body.appendChild(d1);\n\t\t\td1.appendChild(d2);\n\t\t\td1.style.position = \"static\";\n\t\t\td1.style[_transformProp] = \"translate3d(0,0,1px)\";\n\t\t\t_hasOffsetBug = (d2.offsetParent !== d1);\n\t\t\t_body.removeChild(d1);\n\t\t}\n\t\treturn doc;\n\t},\n\t_svgTemps = [], //we create 3 elements for SVG, and 3 for other DOM elements and cache them for performance reasons. They get nested in _divContainer and _svgContainer so that just one element is added to the DOM on each successive attempt. Again, performance is key.\n\t_divTemps = [],\n\t_getDocScrollTop = () => _win.pageYOffset  || _doc.scrollTop || _docElement.scrollTop || _body.scrollTop || 0,\n\t_getDocScrollLeft = () => _win.pageXOffset || _doc.scrollLeft || _docElement.scrollLeft || _body.scrollLeft || 0,\n\t_svgOwner = element => element.ownerSVGElement || ((element.tagName + \"\").toLowerCase() === \"svg\" ? element : null),\n\t_isFixed = element => {\n\t\tif (_win.getComputedStyle(element).position === \"fixed\") {\n\t\t\treturn true;\n\t\t}\n\t\telement = element.parentNode;\n\t\tif (element && element.nodeType === 1) { // avoid document fragments which will throw an error.\n\t\t\treturn _isFixed(element);\n\t\t}\n\t},\n\t_createSibling = (element, i) => {\n\t\tif (element.parentNode && (_doc || _setDoc(element))) {\n\t\t\tlet svg = _svgOwner(element),\n\t\t\t\tns = svg ? (svg.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\") : \"http://www.w3.org/1999/xhtml\",\n\t\t\t\ttype = svg ? (i ? \"rect\" : \"g\") : \"div\",\n\t\t\t\tx = i !== 2 ? 0 : 100,\n\t\t\t\ty = i === 3 ? 100 : 0,\n\t\t\t\tcss = \"position:absolute;display:block;pointer-events:none;\",\n\t\t\t\te = _doc.createElementNS ? _doc.createElementNS(ns.replace(/^https/, \"http\"), type) : _doc.createElement(type);\n\t\t\tif (i) {\n\t\t\t\tif (!svg) {\n\t\t\t\t\tif (!_divContainer) {\n\t\t\t\t\t\t_divContainer = _createSibling(element);\n\t\t\t\t\t\t_divContainer.style.cssText = css;\n\t\t\t\t\t}\n\t\t\t\t\te.style.cssText = css + \"width:0.1px;height:0.1px;top:\" + y + \"px;left:\" + x + \"px\";\n\t\t\t\t\t_divContainer.appendChild(e);\n\n\t\t\t\t} else {\n\t\t\t\t\tif (!_svgContainer) {\n\t\t\t\t\t\t_svgContainer = _createSibling(element);\n\t\t\t\t\t}\n\t\t\t\t\te.setAttribute(\"width\", 0.01);\n\t\t\t\t\te.setAttribute(\"height\", 0.01);\n\t\t\t\t\te.setAttribute(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n\t\t\t\t\t_svgContainer.appendChild(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn e;\n\t\t}\n\t\tthrow \"Need document and parent.\";\n\t},\n\t_consolidate = m => { // replaces SVGTransformList.consolidate() because a bug in Firefox causes it to break pointer events. See https://greensock.com/forums/topic/23248-touch-is-not-working-on-draggable-in-firefox-windows-v324/?tab=comments#comment-109800\n\t\tlet c = new Matrix2D(),\n\t\t\ti = 0;\n\t\tfor (; i < m.numberOfItems; i++) {\n\t\t\tc.multiply(m.getItem(i).matrix);\n\t\t}\n\t\treturn c;\n\t},\n\t_placeSiblings = (element, adjustGOffset) => {\n\t\tlet svg = _svgOwner(element),\n\t\t\tisRootSVG = element === svg,\n\t\t\tsiblings = svg ? _svgTemps : _divTemps,\n\t\t\tcontainer, m, b, x, y;\n\t\tif (element === _win) {\n\t\t\treturn element;\n\t\t}\n\t\tif (!siblings.length) {\n\t\t\tsiblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));\n\t\t}\n\t\tcontainer = svg ? _svgContainer : _divContainer;\n\t\tif (svg) {\n\t\t\tb = isRootSVG ? {x:0, y:0} : element.getBBox();\n\t\t\tm = element.transform ? element.transform.baseVal : {}; // IE11 doesn't follow the spec.\n\t\t\tif (m.numberOfItems) {\n\t\t\t\tm = m.numberOfItems > 1 ? _consolidate(m) : m.getItem(0).matrix; // don't call m.consolidate().matrix because a bug in Firefox makes pointer events not work when consolidate() is called on the same tick as getBoundingClientRect()! See https://greensock.com/forums/topic/23248-touch-is-not-working-on-draggable-in-firefox-windows-v324/?tab=comments#comment-109800\n\t\t\t\tx = m.a * b.x + m.c * b.y;\n\t\t\t\ty = m.b * b.x + m.d * b.y;\n\t\t\t} else {\n\t\t\t\tm = _identityMatrix;\n\t\t\t\tx = b.x;\n\t\t\t\ty = b.y;\n\t\t\t}\n\t\t\tif (adjustGOffset && element.tagName.toLowerCase() === \"g\") {\n\t\t\t\tx = y = 0;\n\t\t\t}\n\t\t\tcontainer.setAttribute(\"transform\", \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + (m.e + x) + \",\" + (m.f + y) + \")\");\n\t\t\t(isRootSVG ? svg : element.parentNode).appendChild(container);\n\t\t} else {\n\t\t\tx = y = 0;\n\t\t\tif (_hasOffsetBug) { // some browsers (like Safari) have a bug that causes them to misreport offset values. When an ancestor element has a transform applied, it's supposed to treat it as if it's position: relative (new context). Safari botches this, so we need to find the closest ancestor (between the element and its offsetParent) that has a transform applied and if one is found, grab its offsetTop/Left and subtract them to compensate.\n\t\t\t\tm = element.offsetParent;\n\t\t\t\tb = element;\n\t\t\t\twhile (b && (b = b.parentNode) && b !== m && b.parentNode) {\n\t\t\t\t\tif ((_win.getComputedStyle(b)[_transformProp] + \"\").length > 4) {\n\t\t\t\t\t\tx = b.offsetLeft;\n\t\t\t\t\t\ty = b.offsetTop;\n\t\t\t\t\t\tb = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tb = container.style;\n\t\t\tb.top = (element.offsetTop - y) + \"px\";\n\t\t\tb.left = (element.offsetLeft - x) + \"px\";\n\t\t\tm = _win.getComputedStyle(element);\n\t\t\tb[_transformProp] = m[_transformProp];\n\t\t\tb[_transformOriginProp] = m[_transformOriginProp];\n\t\t\tb.border = m.border;\n\t\t\tb.borderLeftStyle = m.borderLeftStyle;\n\t\t\tb.borderTopStyle = m.borderTopStyle;\n\t\t\tb.borderLeftWidth = m.borderLeftWidth;\n\t\t\tb.borderTopWidth = m.borderTopWidth;\n\t\t\tb.position = m.position === \"fixed\" ? \"fixed\" : \"absolute\";\n\t\t\telement.parentNode.appendChild(container);\n\t\t}\n\t\treturn container;\n\t},\n\t_setMatrix = (m, a, b, c, d, e, f) => {\n\t\tm.a = a;\n\t\tm.b = b;\n\t\tm.c = c;\n\t\tm.d = d;\n\t\tm.e = e;\n\t\tm.f = f;\n\t\treturn m;\n\t};\n\nexport class Matrix2D {\n\tconstructor(a=1, b=0, c=0, d=1, e=0, f=0) {\n\t\t_setMatrix(this, a, b, c, d, e, f);\n\t}\n\n\tinverse() {\n\t\tlet {a, b, c, d, e, f} = this,\n\t\t\tdeterminant = (a * d - b * c);\n\t\treturn _setMatrix(\n\t\t\tthis,\n\t\t\td / determinant,\n\t\t\t-b / determinant,\n\t\t\t-c / determinant,\n\t\t\ta / determinant,\n\t\t\t(c * f - d * e) / determinant,\n\t\t\t-(a * f - b * e) / determinant\n\t\t);\n\t}\n\n\tmultiply(matrix) {\n\t\tlet {a, b, c, d, e, f} = this,\n\t\t\ta2 = matrix.a,\n\t\t\tb2 = matrix.c,\n\t\t\tc2 = matrix.b,\n\t\t\td2 = matrix.d,\n\t\t\te2 = matrix.e,\n\t\t\tf2 = matrix.f;\n\t\treturn _setMatrix(this,\n\t\t\ta2 * a + c2 * c,\n\t\t\ta2 * b + c2 * d,\n\t\t\tb2 * a + d2 * c,\n\t\t\tb2 * b + d2 * d,\n\t\t\te + e2 * a + f2 * c,\n\t\t\tf + e2 * b + f2 * d);\n\t}\n\n\tclone() {\n\t\treturn new Matrix2D(this.a, this.b, this.c, this.d, this.e, this.f);\n\t}\n\n\tequals(matrix) {\n\t\tlet {a, b, c, d, e, f} = this;\n\t\treturn (a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e === matrix.e && f === matrix.f);\n\t}\n\n\tapply(point, decoratee={}) {\n\t\tlet {x, y} = point,\n\t\t\t{a, b, c, d, e, f} = this;\n\t\tdecoratee.x = (x * a + y * c + e) || 0;\n\t\tdecoratee.y = (x * b + y * d + f) || 0;\n\t\treturn decoratee;\n\t}\n\n}\n\n//feed in an element and it'll return a 2D matrix (optionally inverted) so that you can translate between coordinate spaces.\n// Inverting lets you translate a global point into a local coordinate space. No inverting lets you go the other way.\n// We needed this to work around various browser bugs, like Firefox doesn't accurately report getScreenCTM() when there\n// are transforms applied to ancestor elements.\n// The matrix math to convert any x/y coordinate is as follows, which is wrapped in a convenient apply() method of Matrix2D above:\n//     tx = m.a * x + m.c * y + m.e\n//     ty = m.b * x + m.d * y + m.f\nexport function getGlobalMatrix(element, inverse, adjustGOffset) { // adjustGOffset is typically used only when grabbing an element's PARENT's global matrix, and it ignores the x/y offset of any SVG <g> elements because they behave in a special way.\n\tif (!element || !element.parentNode || (_doc || _setDoc(element)).documentElement === element) {\n\t\treturn new Matrix2D();\n\t}\n\tlet svg = _svgOwner(element),\n\t\ttemps = svg ? _svgTemps : _divTemps,\n\t\tcontainer = _placeSiblings(element, adjustGOffset),\n\t\tb1 = temps[0].getBoundingClientRect(),\n\t\tb2 = temps[1].getBoundingClientRect(),\n\t\tb3 = temps[2].getBoundingClientRect(),\n\t\tparent = container.parentNode,\n\t\tisFixed = _isFixed(element),\n\t\tm = new Matrix2D(\n\t\t\t(b2.left - b1.left) / 100,\n\t\t\t(b2.top - b1.top) / 100,\n\t\t\t(b3.left - b1.left) / 100,\n\t\t\t(b3.top - b1.top) / 100,\n\t\t\tb1.left + (isFixed ? 0 : _getDocScrollLeft()),\n\t\t\tb1.top + (isFixed ? 0 : _getDocScrollTop())\n\t\t);\n\tparent.removeChild(container);\n\treturn inverse ? m.inverse() : m;\n}\n\n// export function getMatrix(element) {\n// \t_doc || _setDoc(element);\n// \tlet m = (_win.getComputedStyle(element)[_transformProp] + \"\").substr(7).match(/[-.]*\\d+[.e\\-+]*\\d*[e\\-\\+]*\\d*/g),\n// \t\tis2D = m && m.length === 6;\n// \treturn !m || m.length < 6 ? new Matrix2D() : new Matrix2D(+m[0], +m[1], +m[is2D ? 2 : 4], +m[is2D ? 3 : 5], +m[is2D ? 4 : 12], +m[is2D ? 5 : 13]);\n// }","/*!\n * PathEditor 3.2.6\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport { stringToRawPath, rawPathToString, bezierToPoints, simplifyPoints, pointsToSegment, subdivideSegment, getClosestData, copyRawPath, transformRawPath } from \"./paths.js\";\nimport { getGlobalMatrix, Matrix2D } from \"./matrix.js\";\n\nlet _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t_doc, _supportsPointer, _win, _body,\n\t_selectionColor = \"#4e7fff\",\n\t_minimumMovement = 1,\n\t_DEG2RAD = Math.PI / 180,\n\t_getTime = Date.now || (() => new Date().getTime()),\n\t_lastInteraction = 0,\n\t_isPressed = 0,\n\t_emptyFunc = () => false,\n\t_interacted = () => _lastInteraction = _getTime(),\n\t_CTRL, _ALT, _SHIFT, _CMD,\n\t_recentlyAddedAnchor,\n\t_editingAxis = {}, //stores the x/y of the most recently-selected anchor point's x and y axis. We tap into this for snapping horizontally and vertically.\n\t_history = [],\n\t_point = {}, //reuse to minimize memory and maximize performance (mostly for snapping)\n\t_temp = [], //reuse this in places like getNormalizedSVG() to conserve memory\n\t_comma = \",\",\n\t_selectedPaths = [],\n\t_preventDefault = event => {\n\t\tif (event.preventDefault) {\n\t\t\tevent.preventDefault();\n\t\t\tif (event.preventManipulation) {\n\t\t\t\tevent.preventManipulation();  //for some Microsoft browsers\n\t\t\t}\n\t\t}\n\t},\n\t_createElement = type => _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type),\n\t_createSVG = (type, container, attributes) => {\n\t\tlet element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type),\n\t\t\treg = /([a-z])([A-Z])/g,\n\t\t\tp;\n\t\tattributes = attributes || {};\n\t\tattributes.class = attributes.class || \"path-editor\";\n\t\tfor (p in attributes) {\n\t\t\tif (element.style[p] !== undefined) {\n\t\t\t\telement.style[p] = attributes[p];\n\t\t\t} else {\n\t\t\t\telement.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n\t\t\t}\n\t\t}\n\t\tcontainer.appendChild(element);\n\t\treturn element;\n\t},\n\t_identityMatrixObject = {matrix:new Matrix2D()},\n\t_getConsolidatedMatrix = target => ((target.transform && target.transform.baseVal.consolidate()) || _identityMatrixObject).matrix,\n\t_getConcatenatedTransforms = target => {\n\t\tlet m = _getConsolidatedMatrix(target),\n\t\t\towner = target.ownerSVGElement;\n\t\twhile ((target = target.parentNode) && target.ownerSVGElement === owner) {\n\t\t\tm.multiply(_getConsolidatedMatrix(target));\n\t\t}\n\t\treturn \"matrix(\" + m.a + \",\" + m.b + \",\" + m.c + \",\" + m.d + \",\" + m.e + \",\" + m.f + \")\";\n\t},\n\t_addHistory = pathEditor => {\n\t\tlet selectedIndexes = [],\n\t\t\ta = pathEditor._selectedAnchors,\n\t\t\ti;\n\t\tfor (i = 0; i < a.length; i++) {\n\t\t\tselectedIndexes[i] = a[i].i;\n\t\t}\n\t\t_history.unshift({path:pathEditor, d:pathEditor.path.getAttribute(\"d\"), transform:pathEditor.path.getAttribute(\"transform\") || \"\", selectedIndexes:selectedIndexes});\n\t\tif (_history.length > 30) {\n\t\t\t_history.length = 30;\n\t\t}\n\t},\n\t_round = value =>  ~~(value * 1000 + (value < 0 ? -.5 : .5)) / 1000,\n\t_getSquarePathData = size => {\n\t\tsize = _round(size);\n\t\treturn [\"M-\" + size, -size, size, -size, size, size, -size, size + \"z\"].join(_comma);\n\t},\n\t_getCirclePathData = size => {\n\t\tlet circ = 0.552284749831,\n\t\t\trcirc = _round(size * circ);\n\t\tsize = _round(size);\n\t\treturn \"M\" + size + \",0C\" + [size, rcirc, rcirc, size, 0, size,  -rcirc, size, -size, rcirc, -size, 0, -size, -rcirc, -rcirc, -size, 0, -size, rcirc, -size, size, -rcirc, size, 0].join(_comma) + \"z\";\n\t},\n\t_checkDeselect = function(e) {\n\t\tif (!e.target._gsSelection && !_isPressed && _getTime() - _lastInteraction > 100) {\n\t\t\tlet i = _selectedPaths.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\t_selectedPaths[i].deselect();\n\t\t\t}\n\t\t\t_selectedPaths.length = 0;\n\t\t}\n\t},\n\t_tempDiv, _touchEventLookup,\n\t_isMultiTouching = 0,\n\t_addListener = (element, type, func, capture) => {\n\t\tif (element.addEventListener) {\n\t\t\tlet touchType = _touchEventLookup[type];\n\t\t\tcapture = capture || {passive:false};\n\t\t\telement.addEventListener(touchType || type, func, capture);\n\t\t\tif (touchType && type !== touchType && touchType.substr(0, 7) !== \"pointer\") { //some browsers actually support both, so must we. But pointer events cover all.\n\t\t\t\telement.addEventListener(type, func, capture);\n\t\t\t}\n\t\t} else if (element.attachEvent) {\n\t\t\telement.attachEvent(\"on\" + type, func);\n\t\t}\n\t},\n\t_removeListener = (element, type, func) => {\n\t\tif (element.removeEventListener) {\n\t\t\tlet touchType = _touchEventLookup[type];\n\t\t\telement.removeEventListener(touchType || type, func);\n\t\t\tif (touchType && type !== touchType && touchType.substr(0, 7) !== \"pointer\") {\n\t\t\t\telement.removeEventListener(type, func);\n\t\t\t}\n\t\t} else if (element.detachEvent) {\n\t\t\telement.detachEvent(\"on\" + type, func);\n\t\t}\n\t},\n\t_hasTouchID = (list, ID) => {\n\t\tlet i = list.length;\n\t\twhile (--i > -1) {\n\t\t\tif (list[i].identifier === ID) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\t_onMultiTouchDocumentEnd = e => {\n\t\t_isMultiTouching = (e.touches && _dragCount < e.touches.length);\n\t\t_removeListener(e.target, \"touchend\", _onMultiTouchDocumentEnd);\n\t},\n\t_onMultiTouchDocument = e => {\n\t\t_isMultiTouching = (e.touches && _dragCount < e.touches.length);\n\t\t_addListener(e.target, \"touchend\", _onMultiTouchDocumentEnd);\n\t},\n\t_bind = (func, scope) => e => func.call(scope, e),\n\t_callback = (type, self, param) => {\n\t\tlet callback = self.vars[type];\n\t\tif (callback) {\n\t\t\tcallback.call(self.vars.callbackScope || self, param || self);\n\t\t}\n\t\treturn self;\n\t},\n\t_copyElement,\n\t_resetSelection = () => {\n\t\t_copyElement.style.display = \"block\";\n\t\t_copyElement.select();\n\t\t_copyElement.style.display = \"none\";\n\t},\n\t_coreInitted,\n\t_initCore = () => {\n\t\t_doc = document;\n\t\t_win = window;\n\t\t_body = _doc.body;\n\t\t_tempDiv = _createElement(\"div\");\n\t\t_copyElement = _createElement(\"textarea\");\n\t\t_copyElement.style.display = \"none\";\n\t\t_body && _body.appendChild(_copyElement);\n\t\t_touchEventLookup = (function(types) { //we create an object that makes it easy to translate touch event types into their \"pointer\" counterparts if we're in a browser that uses those instead. Like IE10 uses \"MSPointerDown\" instead of \"touchstart\", for example.\n\t\t\tlet standard = types.split(\",\"),\n\t\t\t\tconverted = ((_tempDiv.onpointerdown !== undefined) ? \"pointerdown,pointermove,pointerup,pointercancel\" : (_tempDiv.onmspointerdown !== undefined) ? \"MSPointerDown,MSPointerMove,MSPointerUp,MSPointerCancel\" : types).split(\",\"),\n\t\t\t\tobj = {},\n\t\t\t\ti = 4;\n\t\t\twhile (--i > -1) {\n\t\t\t\tobj[standard[i]] = converted[i];\n\t\t\t\tobj[converted[i]] = standard[i];\n\t\t\t}\n\t\t\treturn obj;\n\t\t}(\"touchstart,touchmove,touchend,touchcancel\"));\n\t\tSVGElement.prototype.getTransformToElement = SVGElement.prototype.getTransformToElement || function(e) { //adds Chrome support\n\t\t\treturn e.getScreenCTM().inverse().multiply(this.getScreenCTM());\n\t\t};\n\t\t_doc.addEventListener(\"keydown\", function(e) {\n\t\t\tlet key = e.keyCode || e.which,\n\t\t\t\tkeyString = e.key || key,\n\t\t\t\ti, state, a, path;\n\t\t\tif (keyString === \"Shift\" || key === 16) {\n\t\t\t\t_SHIFT = true;\n\t\t\t} else if (keyString === \"Control\" || key === 17) {\n\t\t\t\t_CTRL = true;\n\t\t\t} else if (keyString === \"Meta\" || key === 91) {\n\t\t\t\t_CMD = true;\n\t\t\t} else if (keyString === \"Alt\" || key === 18) {\n\t\t\t\t_ALT = true;\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._onPressAlt();\n\t\t\t\t}\n\t\t\t} else if ((keyString === \"z\" || key === 90) && (_CTRL || _CMD) && _history.length > 1) { //UNDO\n\t\t\t\t_history.shift();\n\t\t\t\tstate = _history[0];\n\t\t\t\tif (state) {\n\t\t\t\t\tpath = state.path;\n\t\t\t\t\tpath.path.setAttribute(\"d\", state.d);\n\t\t\t\t\tpath.path.setAttribute(\"transform\", state.transform);\n\t\t\t\t\tpath.init();\n\t\t\t\t\ta = path._anchors;\n\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\tif (state.selectedIndexes.indexOf(a[i].i) !== -1) {\n\t\t\t\t\t\t\tpath._selectedAnchors.push(a[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpath._updateAnchors();\n\t\t\t\t\tpath.update();\n\t\t\t\t\tif (path.vars.onUndo) {\n\t\t\t\t\t\tpath.vars.onUndo.call(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (keyString === \"Delete\" || keyString === \"Backspace\" || key === 8 || key === 46 || key === 63272 || (key === \"d\" && (_CTRL || _CMD))) { //DELETE\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._deleteSelectedAnchors();\n\t\t\t\t}\n\t\t\t} else if ((keyString === \"a\" || key === 65) && (_CMD || _CTRL)) { //SELECT ALL\n\t\t\t\ti = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i].select(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}, true);\n\t\t_doc.addEventListener(\"keyup\", function(e) {\n\t\t\tlet key = e.key || e.keyCode || e.which;\n\t\t\tif (key === \"Shift\" || key === 16) {\n\t\t\t\t_SHIFT = false;\n\t\t\t} else if (key === \"Control\" || key === 17) {\n\t\t\t\t_CTRL = false;\n\t\t\t} else if (key === \"Meta\" || key === 91) {\n\t\t\t\t_CMD = false;\n\t\t\t} else if (key === \"Alt\" || key === 18) {\n\t\t\t\t_ALT = false;\n\t\t\t\tlet i = _selectedPaths.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_selectedPaths[i]._onReleaseAlt();\n\t\t\t\t}\n\t\t\t}\n\t\t}, true);\n\t\t_supportsPointer = !!_win.PointerEvent;\n\t\t_addListener(_doc, \"mouseup\", _checkDeselect);\n\t\t_addListener(_doc, \"touchend\", _checkDeselect);\n\t\t_addListener(_doc, \"touchcancel\", _emptyFunc); //some older Android devices intermittently stop dispatching \"touchmove\" events if we don't listen for \"touchcancel\" on the document. Very strange indeed.\n\t\t_addListener(_win, \"touchmove\", _emptyFunc); //works around Safari bugs that still allow the page to scroll even when we preventDefault() on the touchmove event.\n\t\t_body && _body.addEventListener(\"touchstart\", _emptyFunc); //works around Safari bug: https://greensock.com/forums/topic/21450-draggable-in-iframe-on-mobile-is-buggy/\n\t\t_coreInitted = 1;\n\t},\n\t_onPress = function(e) {\n\t\tlet self = this,\n\t\t\tctm = getGlobalMatrix(self.target.parentNode, true), //previously used self.target.parentNode.getScreenCTM().inverse() but there's a major bug in Firefox that prevents it from working properly when there's an ancestor with a transform applied, so we bootstrapped our own solution that seems ot work great across all browsers.\n\t\t\ttouchEventTarget, temp;\n\t\tthis._matrix = this.target.transform.baseVal.getItem(0).matrix;\n\t\tthis._ctm = ctm;\n\t\tif (_touchEventLookup[e.type]) { //note: on iOS, BOTH touchmove and mousemove are dispatched, but the mousemove has pageY and pageX of 0 which would mess up the calculations and needlessly hurt performance.\n\t\t\ttouchEventTarget = (e.type.indexOf(\"touch\") !== -1) ? (e.currentTarget || e.target) : _doc; //pointer-based touches (for Microsoft browsers) don't remain locked to the original target like other browsers, so we must use the document instead. The event type would be \"MSPointerDown\" or \"pointerdown\".\n\t\t\t_addListener(touchEventTarget, \"touchend\", self._onRelease);\n\t\t\t_addListener(touchEventTarget, \"touchmove\", self._onMove);\n\t\t\t_addListener(touchEventTarget, \"touchcancel\", self._onRelease);\n\t\t\t_addListener(_doc, \"touchstart\", _onMultiTouchDocument);\n\t\t\t_addListener(_win, \"touchforcechange\", _preventDefault); //otherwise iOS will scroll when dragging.\n\t\t} else {\n\t\t\ttouchEventTarget = null;\n\t\t\t_addListener(_doc, \"mousemove\", self._onMove); //attach these to the document instead of the box itself so that if the user's mouse moves too quickly (and off of the box), things still work.\n\t\t}\n\t\tif (!_supportsPointer) {\n\t\t\t_addListener(_doc, \"mouseup\", self._onRelease);\n\t\t}\n\t\t_preventDefault(e);\n\t\t_resetSelection(); // when a PathEditor is in an iframe in an environment like codepen, this helps avoid situations where the DELETE key won't actually work because the parent frame is intercepting the event.\n\t\tif (e.changedTouches) { //touch events store the data slightly differently\n\t\t\te = self.touch = e.changedTouches[0];\n\t\t\tself.touchID = e.identifier;\n\t\t} else if (e.pointerId) {\n\t\t\tself.touchID = e.pointerId; //for some Microsoft browsers\n\t\t} else {\n\t\t\tself.touch = self.touchID = null;\n\t\t}\n\t\tself._startPointerY = self.pointerY = e.pageY; //record the starting x and y so that we can calculate the movement from the original in _onMouseMove\n\t\tself._startPointerX = self.pointerX = e.pageX;\n\t\tself._startElementX = self._matrix.e;\n\t\tself._startElementY = self._matrix.f;\n\n\t\tif (this._ctm.a === 1 && this._ctm.b === 0 && this._ctm.c === 0 && this._ctm.d === 1) {\n\t\t\tthis._ctm = null;\n\t\t} else {\n\t\t\ttemp = self._startPointerX * this._ctm.a + self._startPointerY * this._ctm.c + this._ctm.e;\n\t\t\tself._startPointerY = self._startPointerX * this._ctm.b + self._startPointerY * this._ctm.d + this._ctm.f;\n\t\t\tself._startPointerX = temp;\n\t\t}\n\n\t\tself.isPressed = _isPressed = true;\n\t\tself.touchEventTarget = touchEventTarget;\n\t\tif (self.vars.onPress) {\n\t\t\tself.vars.onPress.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t},\n\t_onMove = function(e) {\n\t\tlet self = this,\n\t\t\toriginalEvent = e,\n\t\t\ttouches, i;\n\t\tif (!self._enabled || _isMultiTouching || !self.isPressed || !e) {\n\t\t\treturn;\n\t\t}\n\t\tself.pointerEvent = e;\n\t\ttouches = e.changedTouches;\n\t\tif (touches) { //touch events store the data slightly differently\n\t\t\te = touches[0];\n\t\t\tif (e !== self.touch && e.identifier !== self.touchID) { //Usually changedTouches[0] will be what we're looking for, but in case it's not, look through the rest of the array...(and Android browsers don't reuse the event like iOS)\n\t\t\t\ti = touches.length;\n\t\t\t\twhile (--i > -1 && (e = touches[i]).identifier !== self.touchID) {}\n\t\t\t\tif (i < 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (e.pointerId && self.touchID && e.pointerId !== self.touchID) { //for some Microsoft browsers, we must attach the listener to the doc rather than the trigger so that when the finger moves outside the bounds of the trigger, things still work. So if the event we're receiving has a pointerId that doesn't match the touchID, ignore it (for multi-touch)\n\t\t\treturn;\n\t\t}\n\t\t_preventDefault(originalEvent);\n\t\tself.setPointerPosition(e.pageX, e.pageY);\n\t\tif (self.vars.onDrag) {\n\t\t\tself.vars.onDrag.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t},\n\t_onRelease = function(e, force) {\n\t\tlet self = this;\n\t\tif (!self._enabled || !self.isPressed || (e && self.touchID != null && !force && ((e.pointerId && e.pointerId !== self.touchID) || (e.changedTouches && !_hasTouchID(e.changedTouches, self.touchID))))) {  //for some Microsoft browsers, we must attach the listener to the doc rather than the trigger so that when the finger moves outside the bounds of the trigger, things still work. So if the event we're receiving has a pointerId that doesn't match the touchID, ignore it (for multi-touch)\n\t\t\treturn;\n\t\t}\n\t\t_interacted();\n\t\tself.isPressed = _isPressed = false; //TODO: if we want to accommodate multi-touch, we'd need to introduce a counter to track how many touches there are and only toggle this when they're all off.\n\t\tlet originalEvent = e,\n\t\t\twasDragging = self.isDragging,\n\t\t\ttouchEventTarget = self.touchEventTarget,\n\t\t\ttouches, i;\n\t\tif (touchEventTarget) {\n\t\t\t_removeListener(touchEventTarget, \"touchend\", self._onRelease);\n\t\t\t_removeListener(touchEventTarget, \"touchmove\", self._onMove);\n\t\t\t_removeListener(touchEventTarget, \"touchcancel\", self._onRelease);\n\t\t\t_removeListener(_doc, \"touchstart\", _onMultiTouchDocument);\n\t\t} else {\n\t\t\t_removeListener(_doc, \"mousemove\", self._onMove);\n\t\t}\n\t\tif (!_supportsPointer) {\n\t\t\t_removeListener(_doc, \"mouseup\", self._onRelease);\n\t\t\tif (e && e.target) {\n\t\t\t\t_removeListener(e.target, \"mouseup\", self._onRelease);\n\t\t\t}\n\t\t}\n\t\tif (wasDragging) {\n\t\t\tself.isDragging = false;\n\t\t} else if (self.vars.onClick) {\n\t\t\tself.vars.onClick.call(self.vars.callbackScope || self, originalEvent);\n\t\t}\n\t\tif (e) {\n\t\t\ttouches = e.changedTouches;\n\t\t\tif (touches) { //touch events store the data slightly differently\n\t\t\t\te = touches[0];\n\t\t\t\tif (e !== self.touch && e.identifier !== self.touchID) { //Usually changedTouches[0] will be what we're looking for, but in case it's not, look through the rest of the array...(and Android browsers don't reuse the event like iOS)\n\t\t\t\t\ti = touches.length;\n\t\t\t\t\twhile (--i > -1 && (e = touches[i]).identifier !== self.touchID) {}\n\t\t\t\t\tif (i < 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tself.pointerEvent = originalEvent;\n\t\t\tself.pointerX = e.pageX;\n\t\t\tself.pointerY = e.pageY;\n\t\t}\n\t\tif (originalEvent && !wasDragging && self.vars.onDragRelease) {\n\t\t\tself.vars.onDragRelease.call(self, self.pointerEvent);\n\n\t\t} else {\n\t\t\tif (originalEvent) {\n\t\t\t\t_preventDefault(originalEvent);\n\t\t\t}\n\t\t\tif (self.vars.onRelease) {\n\t\t\t\tself.vars.onRelease.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t\t}\n\t\t}\n\t\tif (wasDragging && self.vars.onDragEnd) {\n\t\t\tself.vars.onDragEnd.call(self.vars.callbackScope || self, self.pointerEvent);\n\t\t}\n\t\treturn true;\n\t},\n\t_createSegmentAnchors = (rawPath, j, editor, vars) => {\n\t\tlet segment = rawPath[j],\n\t\t\tl = segment.length,\n\t\t\ta = [],\n\t\t\ti;\n\t\tfor (i = 0; i < l; i+=6) {\n\t\t\ta.push(new Anchor(editor, rawPath, j, i, vars));\n\t\t}\n\t\treturn a;\n\t},\n\t_getLength = (segment, i, i2) => { //i is the starting index, and it'll return the length to the next x/y pair. So if you're looking for the length to handle1, you'd feed in the index of the handle control point x whereas if you're looking for the length to handle2, i would be the x of the anchor.\n\t\tlet x = segment[i2] - segment[i],\n\t\t\ty = segment[i2+1] - segment[i+1];\n\t\treturn Math.sqrt(x * x + y * y);\n\t};\n\n\nclass DraggableSVG {\n\n\tconstructor(target, vars) {\n\t\tthis.target = (typeof(target) === \"string\") ? _doc.querySelectorAll(target)[0] : target;\n\t\tthis.vars = vars || {};\n\t\tthis._onPress = _bind(_onPress, this);\n\t\tthis._onMove = _bind(_onMove, this);\n\t\tthis._onRelease = _bind(_onRelease, this);\n\t\tthis.target.setAttribute(\"transform\", (this.target.getAttribute(\"transform\") || \"\") + \" translate(0,0)\");\n\t\tthis._matrix = _getConsolidatedMatrix(this.target);\n\t\tthis.x = this._matrix.e;\n\t\tthis.y = this._matrix.f;\n\t\tthis.snap = vars.snap;\n\t\tif (!isNaN(vars.maxX) || !isNaN(vars.minX)) {\n\t\t\tthis._bounds = 1;\n\t\t\tthis.maxX = +vars.maxX;\n\t\t\tthis.minX = +vars.minX;\n\t\t} else {\n\t\t\tthis._bounds = 0;\n\t\t}\n\t\tthis.enabled(true);\n\t}\n\n\tsetPointerPosition(pointerX, pointerY) {\n\t\tlet rnd = 1000,\n\t\t\txChange, yChange, x, y, temp;\n\t\tthis.pointerX = pointerX;\n\t\tthis.pointerY = pointerY;\n\t\tif (this._ctm) {\n\t\t\ttemp = pointerX * this._ctm.a + pointerY * this._ctm.c + this._ctm.e;\n\t\t\tpointerY = pointerX * this._ctm.b + pointerY * this._ctm.d + this._ctm.f;\n\t\t\tpointerX = temp;\n\t\t}\n\t\tyChange = (pointerY - this._startPointerY);\n\t\txChange = (pointerX - this._startPointerX);\n\t\tif (yChange < _minimumMovement && yChange > -_minimumMovement) {\n\t\t\tyChange = 0;\n\t\t}\n\t\tif (xChange < _minimumMovement && xChange > -_minimumMovement) {\n\t\t\txChange = 0;\n\t\t}\n\t\tx = (((this._startElementX + xChange) * rnd) | 0) / rnd;\n\t\ty = (((this._startElementY + yChange) * rnd) | 0) / rnd;\n\t\tif (this.snap && !_SHIFT) {\n\t\t\t_point.x = x;\n\t\t\t_point.y = y;\n\t\t\tthis.snap.call(this, _point);\n\t\t\tx = _point.x;\n\t\t\ty = _point.y;\n\t\t}\n\t\tif (this.x !== x || this.y !== y) {\n\t\t\tthis._matrix.f = this.y = y;\n\t\t\tthis._matrix.e = this.x = x;\n\t\t\tif (!this.isDragging && this.isPressed) {\n\t\t\t\tthis.isDragging = true;\n\t\t\t\t_callback(\"onDragStart\", this, this.pointerEvent);\n\t\t\t}\n\t\t}\n\t}\n\n\tenabled(enabled) {\n\t\tif (!arguments.length) {\n\t\t\treturn this._enabled;\n\t\t}\n\t\tlet dragging;\n\t\tthis._enabled = enabled;\n\t\tif (enabled) {\n\t\t\tif (!_supportsPointer) {\n\t\t\t\t_addListener(this.target, \"mousedown\", this._onPress);\n\t\t\t}\n\t\t\t_addListener(this.target, \"touchstart\", this._onPress);\n\t\t\t_addListener(this.target, \"click\", this._onClick, true); //note: used to pass true for capture but it prevented click-to-play-video functionality in Firefox.\n\t\t} else {\n\t\t\tdragging = this.isDragging;\n\t\t\t_removeListener(this.target, \"mousedown\", this._onPress);\n\t\t\t_removeListener(this.target, \"touchstart\", this._onPress);\n\t\t\t_removeListener(_win, \"touchforcechange\", _preventDefault);\n\t\t\t_removeListener(this.target, \"click\", this._onClick);\n\t\t\tif (this.touchEventTarget) {\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchcancel\", this._onRelease);\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchend\", this._onRelease);\n\t\t\t\t_removeListener(this.touchEventTarget, \"touchmove\", this._onMove);\n\t\t\t}\n\t\t\t_removeListener(_doc, \"mouseup\", this._onRelease);\n\t\t\t_removeListener(_doc, \"mousemove\", this._onMove);\n\t\t\tthis.isDragging = this.isPressed = false;\n\t\t\tif (dragging) {\n\t\t\t\t_callback(\"onDragEnd\", this, this.pointerEvent);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tendDrag(e) {\n\t\tthis._onRelease(e);\n\t}\n\n}\n\n\n\n\n\nclass Anchor {\n\n\tconstructor(editor, rawPath, j, i, vars) {\n\t\tthis.editor = editor;\n\t\tthis.element = _createSVG(\"path\", editor._selection, {fill:_selectionColor, stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis.update(rawPath, j, i);\n\t\tthis.element._gsSelection = true;\n\t\tthis.vars = vars || {};\n\t\tthis._draggable = new DraggableSVG(this.element, {callbackScope:this, onDrag:this.onDrag, snap:this.vars.snap, onPress:this.onPress, onRelease:this.onRelease, onClick:this.onClick, onDragEnd:this.onDragEnd});\n\t}\n\n\tonPress() {\n\t\t_callback(\"onPress\", this);\n\t}\n\n\tonClick() {\n\t\t_callback(\"onClick\", this);\n\t}\n\n\tonDrag() {\n\t\tlet s = this.segment;\n\t\tthis.vars.onDrag.call(this.vars.callbackScope || this, this, this._draggable.x - s[this.i], this._draggable.y - s[this.i+1]);\n\t}\n\n\tonDragEnd() {\n\t\t_callback(\"onDragEnd\", this);\n\t}\n\n\tonRelease() {\n\t\t_callback(\"onRelease\", this);\n\t}\n\n\tupdate(rawPath, j, i) {\n\t\tif (rawPath) {\n\t\t\tthis.rawPath = rawPath;\n\t\t}\n\t\tif (arguments.length <= 1) {\n\t\t\tj = this.j;\n\t\t\ti = this.i;\n\t\t} else {\n\t\t\tthis.j = j;\n\t\t\tthis.i = i;\n\t\t}\n\t\tlet prevSmooth = this.smooth,\n\t\t\tsegment = this.rawPath[j];\n\t\tthis.segment = segment;\n\t\tthis.smooth = (i && i < segment.length - 2 && Math.abs(Math.atan2(segment[i+1] - segment[i-1], segment[i] - segment[i-2]) - Math.atan2(segment[i+3] - segment[i+1], segment[i+2] - segment[i])) < 0.09) ? 2 : 0; //0: corner, 1: smooth but not mirrored, 2: smooth and mirrored.\n\t\tif (this.smooth !== prevSmooth) {\n\t\t\tthis.element.setAttribute(\"d\", this.smooth ? this.editor._circleHandle : this.editor._squareHandle);\n\t\t}\n\t\tthis.element.setAttribute(\"transform\", \"translate(\" + segment[i] + \",\" + segment[i+1] + \")\");\n\t}\n}\n\n\n\n\nexport class PathEditor {\n\n\tconstructor(target, vars) {\n\t\tvars = vars || {};\n\t\tif (!_coreInitted) {\n\t\t\t_initCore();\n\t\t}\n\t\tthis.vars = vars;\n\t\tthis.path = (typeof(target) === \"string\") ? _doc.querySelectorAll(target)[0] : target;\n\t\tthis._g = _createSVG(\"g\", this.path.ownerSVGElement, {class:\"path-editor-g path-editor\"});\n\t\tthis._selectionHittest = _createSVG(\"path\", this._g, {stroke:\"transparent\", strokeWidth:16, fill:\"none\", vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._selection = vars._selection || _createSVG(\"g\", this._g, {class:\"path-editor-selection path-editor\"});\n\t\tthis._selectionPath = _createSVG(\"path\", this._selection, {stroke:_selectionColor, strokeWidth:2, fill:\"none\", vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._selectedAnchors = [];\n\t\tthis._line1 = _createSVG(\"polyline\", this._selection, {stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._line2 = _createSVG(\"polyline\", this._selection, {stroke:_selectionColor, strokeWidth:2, vectorEffect:\"non-scaling-stroke\"});\n\t\tthis._line1.style.pointerEvents = this._line2.style.pointerEvents = this._selectionPath.style.pointerEvents = \"none\";\n\t\tthis._enabled = true;\n\t\tlet ctm = this.path.parentNode.getScreenCTM().inverse(),\n\t\t\tsize = (ctm.a + ctm.d) / 2 * (vars.handleSize || 5);\n\t\tthis._squareHandle = _getSquarePathData(size);\n\t\tthis._circleHandle = _getCirclePathData(size * 1.15);\n\t\tthis._handle1 = _createSVG(\"path\", this._selection, {d:this._squareHandle, fill:_selectionColor, stroke:\"transparent\", strokeWidth:6});\n\t\tthis._handle2 = _createSVG(\"path\", this._selection, {d:this._squareHandle, fill:_selectionColor, stroke:\"transparent\", strokeWidth:6});\n\t\tthis._handle1._draggable = new DraggableSVG(this._handle1, {onDrag:this._onDragHandle1, callbackScope:this, onPress:this._onPressHandle1, onRelease:this._onReleaseHandle, onClick:this._onClickHandle1, snap:vars.handleSnap});\n\t\tthis._handle2._draggable = new DraggableSVG(this._handle2, {onDrag:this._onDragHandle2, callbackScope:this, onPress:this._onPressHandle2, onRelease:this._onReleaseHandle, onClick:this._onClickHandle2, snap:vars.handleSnap});\n\t\tthis._handle1.style.visibility = this._handle2.style.visibility = \"hidden\";\n\t\tlet selectionItems = [this._handle1, this._handle2, this._line1, this._line2, this._selection, this._selectionPath, this._selectionHittest],\n\t\t\ti = selectionItems.length;\n\t\twhile (--i > -1) {\n\t\t\tselectionItems[i]._gsSelection = true; //just a flag we can check in the _checkDeselect() method to detect clicks on things that are selection-related.\n\t\t}\n\t\tif (vars.draggable !== false) {\n\t\t\tthis._draggable = new DraggableSVG(this._selectionHittest, {callbackScope:this, onPress:this.select, onRelease:this._onRelease, onDrag:this._onDragPath, onDragEnd:this._saveState, maxX:this.vars.maxX, minX:this.vars.minX});\n\t\t}\n\t\tthis.init();\n\t\tthis._selection.style.visibility = (vars.selected === false) ? \"hidden\" : \"visible\";\n\t\tif (vars.selected !== false) {\n\t\t\tthis.path._gsSelection = true;\n\t\t\t_selectedPaths.push(this);\n\t\t}\n\t\tthis._saveState();\n\t\tif (!_supportsPointer) {\n\t\t\t_addListener(this._selectionHittest, \"mousedown\", _bind(this._onClickSelectionPath, this));\n\t\t\t_addListener(this._selectionHittest, \"mouseup\", _bind(this._onRelease, this));\n\t\t}\n\t\t_addListener(this._selectionHittest, \"touchstart\", _bind(this._onClickSelectionPath, this));\n\t\t_addListener(this._selectionHittest, \"touchend\", _bind(this._onRelease, this));\n\t}\n\n\t_onRelease(e) {\n\t\tlet anchor = this._editingAnchor;\n\t\tif (anchor) {\n\t\t\t_editingAxis.x = anchor.segment[anchor.i];\n\t\t\t_editingAxis.y = anchor.segment[anchor.i+1];\n\t\t}\n\t\t_removeListener(_win, \"touchforcechange\", _preventDefault); //otherwise iOS will scroll when dragging.\n\t\t_callback(\"onRelease\", this, e);\n\t}\n\n\tinit() {\n\t\tlet pathData = this.path.getAttribute(\"d\"),\n\t\t\trawPath = stringToRawPath(pathData),\n\t\t\ttransform = this.path.getAttribute(\"transform\") || \"translate(0,0)\",\n\t\t\tcreateAnchors = (!this._rawPath || rawPath.totalPoints !== this._rawPath.totalPoints || rawPath.length !== this._rawPath.length),\n\t\t\tanchorVars = {callbackScope:this, snap:this.vars.anchorSnap, onDrag:this._onDragAnchor, onPress:this._onPressAnchor, onRelease:this._onRelease, onClick:this._onClickAnchor, onDragEnd:this._onDragEndAnchor, maxX:this.vars.maxX, minX:this.vars.minX},\n\t\t\tl, i;\n\n\t\tif (createAnchors && this._anchors && this._anchors.length) {\n\t\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\t\tthis._anchors[i].element.parentNode.removeChild(this._anchors[i].element);\n\t\t\t\tthis._anchors[i]._draggable.enabled(false);\n\t\t\t}\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t}\n\t\tthis._rawPath = rawPath;\n\t\tif (createAnchors) {\n\t\t\tthis._anchors = _createSegmentAnchors(rawPath, 0, this, anchorVars);\n\t\t\tl = rawPath.length;\n\t\t\tif (l > 1) {\n\t\t\t\tfor (i = 1; i < l; i++) {\n\t\t\t\t\tthis._anchors = this._anchors.concat(_createSegmentAnchors(rawPath, i, this, anchorVars));\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ti = this._anchors.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tthis._anchors[i].update(rawPath);\n\t\t\t}\n\t\t}\n\n\t\tthis._selection.appendChild(this._handle1); //for stacking order (handles should always be on top)\n\t\tthis._selection.appendChild(this._handle2);\n\t\t//\t\tthis._selectedAnchors.length = 0;\n\t\tthis._selectionPath.setAttribute(\"d\", pathData);\n\t\tthis._selectionHittest.setAttribute(\"d\", pathData);\n\t\tthis._g.setAttribute(\"transform\", _getConcatenatedTransforms(this.path.parentNode) || \"translate(0,0)\");\n\t\tthis._selection.setAttribute(\"transform\", transform);\n\t\tthis._selectionHittest.setAttribute(\"transform\", transform);\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\t_saveState() {\n\t\t_addHistory(this);\n\t}\n\n\t_onClickSelectionPath(e) {\n\t\tif (this._selection.style.visibility === \"hidden\") {\n\t\t\tthis.select();\n\t\t} else if (_ALT || (e && e.altKey)) {\n\t\t\tlet anchorVars = {callbackScope:this, snap:this.vars.anchorSnap, onDrag:this._onDragAnchor, onPress:this._onPressAnchor, onRelease:this._onRelease, onClick:this._onClickAnchor, onDragEnd:this._onDragEndAnchor, maxX:this.vars.maxX, minX:this.vars.minX},\n\t\t\t\tctm = this._selection.getScreenCTM().inverse(),\n\t\t\t\tnewIndex, i, anchor, x, y, closestData;\n\t\t\tif (this._draggable) {\n\t\t\t\tthis._draggable._onRelease(e); //otherwise, ALT-click/dragging on a path would create a new anchor AND drag the entire path.\n\t\t\t}\n\t\t\tif (ctm) {\n\t\t\t\tx = e.clientX * ctm.a + e.clientY * ctm.c + ctm.e;\n\t\t\t\ty = e.clientX * ctm.b + e.clientY * ctm.d + ctm.f;\n\t\t\t}\n\t\t\t//DEBUG: _createSVG(\"circle\", this._selection, {fill:\"red\", r:5, cx:x, cy:y});\n\t\t\tclosestData = getClosestData(this._rawPath, x, y);\n\t\t\tsubdivideSegment(this._rawPath[closestData.j], closestData.i, closestData.t);\n\t\t\tnewIndex = closestData.i + 6;\n\t\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\t\tif (this._anchors[i].i >= newIndex) {\n\t\t\t\t\tthis._anchors[i].i += 6;\n\t\t\t\t}\n\t\t\t}\n\t\t\tanchor = new Anchor(this, this._rawPath, closestData.j, newIndex, anchorVars);\n\t\t\tthis._selection.appendChild(this._handle1); //for stacking order (handles should always be on top)\n\t\t\tthis._selection.appendChild(this._handle2);\n\t\t\tanchor._draggable._onPress(e);\n\t\t\t_recentlyAddedAnchor = anchor;\n\t\t\tthis._anchors.push(anchor);\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t\tthis._updateAnchors();\n\t\t\tthis.update();\n\t\t\tthis._saveState();\n\t\t}\n\t\t_resetSelection();\n\t\t_addListener(_win, \"touchforcechange\", _preventDefault); //otherwise iOS will scroll when dragging.\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onClickHandle1() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ti = anchor.i,\n\t\t\ts = anchor.segment;\n\t\tif (_ALT && Math.abs(s[i] - s[i-2]) < 5 && Math.abs(s[i+1] - s[i-1]) < 5) {\n\t\t\tthis._onClickAnchor(anchor);\n\t\t}\n\t}\n\n\t_onClickHandle2() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ti = anchor.i,\n\t\t\ts = anchor.segment;\n\t\tif (_ALT && Math.abs(s[i] - s[i+2]) < 5 && Math.abs(s[i+1] - s[i+3]) < 5) {\n\t\t\tthis._onClickAnchor(anchor);\n\t\t}\n\t}\n\n\t_onDragEndAnchor(e) {\n\t\t_recentlyAddedAnchor = null;\n\t\tthis._saveState();\n\t}\n\n\tisSelected() {\n\t\treturn (this._selectedAnchors.length > 0);\n\t}\n\n\tselect(allAnchors) {\n\t\tthis._selection.style.visibility = \"visible\";\n\t\tthis._editingAnchor = null;\n\t\tthis.path._gsSelection = true;\n\t\tif (allAnchors === true) {\n\t\t\tlet i = this._anchors.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tthis._selectedAnchors[i] = this._anchors[i];\n\t\t\t}\n\t\t}\n\t\tif (_selectedPaths.indexOf(this) === -1) {\n\t\t\t_selectedPaths.push(this);\n\t\t}\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\tdeselect() {\n\t\tthis._selection.style.visibility = \"hidden\";\n\t\tthis._selectedAnchors.length = 0;\n\t\tthis._editingAnchor = null;\n\t\tthis.path._gsSelection = false;\n\t\t_selectedPaths.splice(_selectedPaths.indexOf(this), 1);\n\t\tthis._updateAnchors();\n\t\treturn this;\n\t}\n\n\t_onDragPath(e) {\n\t\tlet transform = this._selectionHittest.getAttribute(\"transform\") || \"translate(0,0)\";\n\t\tthis._selection.setAttribute(\"transform\", transform);\n\t\tthis.path.setAttribute(\"transform\", transform);\n\t}\n\n\t_onPressAnchor(anchor) {\n\t\tif (this._selectedAnchors.indexOf(anchor) === -1) { //if it isn't already selected...\n\t\t\tif (!_SHIFT) {\n\t\t\t\tthis._selectedAnchors.length = 0;\n\t\t\t}\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t} else if (_SHIFT) {\n\t\t\tthis._selectedAnchors.splice(this._selectedAnchors.indexOf(anchor), 1);\n\t\t\tanchor._draggable.endDrag();\n\t\t}\n\t\t_editingAxis.x = anchor.segment[anchor.i];\n\t\t_editingAxis.y = anchor.segment[anchor.i+1];\n\t\tthis._updateAnchors();\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_deleteSelectedAnchors() {\n\t\tlet anchors = this._selectedAnchors,\n\t\t\ti = anchors.length,\n\t\t\tanchor, index, j;\n\t\twhile (--i > -1) {\n\t\t\tanchor = anchors[i];\n\t\t\tanchor.element.parentNode.removeChild(anchor.element);\n\t\t\tanchor._draggable.enabled(false);\n\t\t\tindex = anchor.i;\n\t\t\tif (!index) { //first\n\t\t\t\tanchor.segment.splice(index, 6);\n\t\t\t} else if (index < anchor.segment.length - 2) {\n\t\t\t\tanchor.segment.splice(index-2, 6);\n\t\t\t} else { //last\n\t\t\t\tanchor.segment.splice(index-4, 6);\n\t\t\t}\n\t\t\tanchors.splice(i, 1);\n\t\t\tthis._anchors.splice(this._anchors.indexOf(anchor), 1);\n\t\t\tfor (j = 0; j < this._anchors.length; j++) {\n\t\t\t\tif (this._anchors[j].i >= index) {\n\t\t\t\t\tthis._anchors[j].i -= 6;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._updateAnchors();\n\t\tthis.update();\n\t\tthis._saveState();\n\t\tif (this.vars.onDeleteAnchor) {\n\t\t\tthis.vars.onDeleteAnchor.call(this.vars.callbackScope || this);\n\t\t}\n\t}\n\n\t_onClickAnchor(anchor) {\n\t\tlet i = anchor.i,\n\t\t\tsegment = anchor.segment,\n\t\t\trnd = 1000,\n\t\t\tisEnd = (!i || i >= segment.length - 2),\n\t\t\tangle1, angle2, length1, length2, sin, cos;\n\t\tif (_ALT && _recentlyAddedAnchor !== anchor && this._editingAnchor) {\n\t\t\tanchor.smooth = !anchor.smooth;\n\t\t\tif (isEnd) { //the very ends can't be \"smooth\"\n\t\t\t\tanchor.smooth = false;\n\t\t\t}\n\t\t\tanchor.element.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t\tif (anchor.smooth && !isEnd) {\n\t\t\t\tangle1 = Math.atan2(segment[i+1] - segment[i-1], segment[i] - segment[i-2]);\n\t\t\t\tangle2 = Math.atan2(segment[i+3] - segment[i+1], segment[i+2] - segment[i]);\n\t\t\t\tangle1 = (angle1 + angle2) / 2;\n\t\t\t\tlength1 = _getLength(segment, i-2, i);\n\t\t\t\tlength2 = _getLength(segment, i, i+2);\n\t\t\t\tif (length1 < 0.2) {\n\t\t\t\t\tlength1 = (_getLength(segment, i, i-6) / 4);\n\t\t\t\t\tangle1 = angle2 || Math.atan2(segment[i+7] - segment[i-5], segment[i+6] - segment[i-6]);\n\t\t\t\t}\n\t\t\t\tif (length2 < 0.2) {\n\t\t\t\t\tlength2 = (_getLength(segment, i, i+6) / 4);\n\t\t\t\t\tangle2 = angle1 || Math.atan2(segment[i+7] - segment[i-5], segment[i+6] - segment[i-6]);\n\t\t\t\t}\n\t\t\t\tsin = Math.sin(angle1);\n\t\t\t\tcos = Math.cos(angle1);\n\t\t\t\tif (Math.abs(angle2 - angle1) < Math.PI / 2) {\n\t\t\t\t\tsin = -sin;\n\t\t\t\t\tcos = -cos;\n\t\t\t\t}\n\t\t\t\tsegment[i-2] = (((segment[i] + cos * length1) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i-1] = (((segment[i+1] + sin * length1) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i+2] = (((segment[i] - cos * length2) * rnd) | 0) / rnd;\n\t\t\t\tsegment[i+3] = (((segment[i+1] - sin * length2) * rnd) | 0) / rnd;\n\t\t\t\tthis._updateAnchors();\n\t\t\t\tthis.update();\n\t\t\t\tthis._saveState();\n\t\t\t} else if (!anchor.smooth && !isEnd) {\n\t\t\t\tif (i) {\n\t\t\t\t\tsegment[i-2] = segment[i];\n\t\t\t\t\tsegment[i-1] = segment[i+1];\n\t\t\t\t}\n\t\t\t\tif (i < segment.length - 2) {\n\t\t\t\t\tsegment[i+2] = segment[i];\n\t\t\t\t\tsegment[i+3] = segment[i+1];\n\t\t\t\t}\n\t\t\t\tthis._updateAnchors();\n\t\t\t\tthis.update();\n\t\t\t\tthis._saveState();\n\t\t\t}\n\t\t} else if (!_SHIFT) {\n\t\t\tthis._selectedAnchors.length = 0;\n\t\t\tthis._selectedAnchors.push(anchor);\n\t\t}\n\t\t_recentlyAddedAnchor = null;\n\t\tthis._updateAnchors();\n\t}\n\n\t_updateAnchors() {\n\t\tlet anchor = (this._selectedAnchors.length === 1) ? this._selectedAnchors[0] : null,\n\t\t\tsegment = anchor ? anchor.segment : null,\n\t\t\ti, x, y;\n\t\tthis._editingAnchor = anchor;\n\t\tfor (i = 0; i < this._anchors.length; i++) {\n\t\t\tthis._anchors[i].element.style.fill = (this._selectedAnchors.indexOf(this._anchors[i]) !== -1) ? _selectionColor : \"white\";\n\t\t\t//this._anchors[i].element.setAttribute(\"fill\", (this._selectedAnchors.indexOf(this._anchors[i]) !== -1) ? _selectionColor : \"white\");\n\t\t}\n\t\tif (anchor) {\n\t\t\tthis._handle1.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t\tthis._handle2.setAttribute(\"d\", anchor.smooth ? this._circleHandle : this._squareHandle);\n\t\t}\n\t\ti = anchor ? anchor.i : 0;\n\t\tif (anchor && i) {\n\t\t\tx = segment[i-2];\n\t\t\ty = segment[i-1]; //TODO: if they equal the anchor coordinates, just hide it.\n\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = (!_ALT && x === segment[i] && y === segment[i+1]) ? \"hidden\" : \"visible\";\n\t\t\tthis._handle1.setAttribute(\"transform\", \"translate(\" + x + _comma + y + \")\");\n\t\t\tthis._line1.setAttribute(\"points\",  x + _comma + y + _comma + segment[i] + _comma + segment[i+1]);\n\t\t} else {\n\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"hidden\";\n\t\t}\n\t\tif (anchor && i < segment.length - 2) {\n\t\t\tx = segment[i+2];\n\t\t\ty = segment[i+3];\n\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = (!_ALT && x === segment[i] && y === segment[i+1]) ? \"hidden\" : \"visible\";\n\t\t\tthis._handle2.setAttribute(\"transform\", \"translate(\" + x + _comma + y + \")\");\n\t\t\tthis._line2.setAttribute(\"points\",  segment[i] + _comma + segment[i+1] + _comma + x + _comma + y);\n\n\t\t} else {\n\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"hidden\";\n\t\t}\n\t}\n\n\t_onPressAlt() {\n\t\tlet anchor = this._editingAnchor;\n\t\tif (anchor) {\n\t\t\tif (anchor.i) {\n\t\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"visible\";\n\t\t\t}\n\t\t\tif (anchor.i < anchor.segment.length - 2) {\n\t\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"visible\";\n\t\t\t}\n\t\t}\n\t}\n\n\t_onReleaseAlt() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts, i;\n\t\tif (anchor) {\n\t\t\ts = anchor.segment;\n\t\t\ti = anchor.i;\n\t\t\tif (s[i] === s[i-2] && s[i+1] === s[i-1]) {\n\t\t\t\tthis._handle1.style.visibility = this._line1.style.visibility = \"hidden\";\n\t\t\t}\n\t\t\tif (s[i] === s[i+2] && s[i+1] === s[i+3]) {\n\t\t\t\tthis._handle2.style.visibility = this._line2.style.visibility = \"hidden\";\n\t\t\t}\n\t\t}\n\t}\n\n\t_onPressHandle1() {\n\t\tif (this._editingAnchor.smooth) {\n\t\t\tthis._oppositeHandleLength = _getLength(this._editingAnchor.segment, this._editingAnchor.i, this._editingAnchor.i+2);\n\t\t}\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onPressHandle2() {\n\t\tif (this._editingAnchor.smooth) {\n\t\t\tthis._oppositeHandleLength = _getLength(this._editingAnchor.segment, this._editingAnchor.i-2, this._editingAnchor.i);\n\t\t}\n\t\t_callback(\"onPress\", this);\n\t}\n\n\t_onReleaseHandle(e) {\n\t\tthis._onRelease(e);\n\t\tthis._saveState();\n\t}\n\n\t_onDragHandle1() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts = anchor.segment,\n\t\t\ti = anchor.i,\n\t\t\trnd = 1000,\n\t\t\tx = this._handle1._draggable.x,\n\t\t\ty = this._handle1._draggable.y,\n\t\t\tangle;\n\t\ts[i-2] = x = ((x * rnd) | 0) / rnd;\n\t\ts[i-1] = y = ((y * rnd) | 0) / rnd;\n\t\tif (anchor.smooth) {\n\t\t\tif (_ALT) {\n\t\t\t\tanchor.smooth = false;\n\t\t\t\tanchor.element.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle1.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle2.setAttribute(\"d\", this._squareHandle);\n\t\t\t} else {\n\t\t\t\tangle = Math.atan2(s[i+1] - y, s[i] - x);\n\t\t\t\tx = this._oppositeHandleLength * Math.cos(angle);\n\t\t\t\ty = this._oppositeHandleLength * Math.sin(angle);\n\t\t\t\ts[i+2] = (((s[i] + x) * rnd) | 0) / rnd;\n\t\t\t\ts[i+3] = (((s[i+1] + y) * rnd) | 0) / rnd;\n\t\t\t}\n\n\t\t}\n\t\tthis.update();\n\t}\n\n\t_onDragHandle2() {\n\t\tlet anchor = this._editingAnchor,\n\t\t\ts = anchor.segment,\n\t\t\ti = anchor.i,\n\t\t\trnd = 1000,\n\t\t\tx = this._handle2._draggable.x,\n\t\t\ty = this._handle2._draggable.y,\n\t\t\tangle;\n\t\ts[i+2] = x = ((x * rnd) | 0) / rnd;\n\t\ts[i+3] = y = ((y * rnd) | 0) / rnd;\n\t\tif (anchor.smooth) {\n\t\t\tif (_ALT) {\n\t\t\t\tanchor.smooth = false;\n\t\t\t\tanchor.element.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle1.setAttribute(\"d\", this._squareHandle);\n\t\t\t\tthis._handle2.setAttribute(\"d\", this._squareHandle);\n\t\t\t} else {\n\t\t\t\tangle = Math.atan2(s[i+1] - y, s[i] - x);\n\t\t\t\tx = this._oppositeHandleLength * Math.cos(angle);\n\t\t\t\ty = this._oppositeHandleLength * Math.sin(angle);\n\t\t\t\ts[i-2] = (((s[i] + x) * rnd) | 0) / rnd;\n\t\t\t\ts[i-1] = (((s[i+1] + y) * rnd) | 0) / rnd;\n\t\t\t}\n\n\t\t}\n\t\tthis.update();\n\t}\n\n\t_onDragAnchor(anchor, changeX, changeY) {\n\t\tlet anchors = this._selectedAnchors,\n\t\t\tl = anchors.length,\n\t\t\trnd = 1000,\n\t\t\ti, j, s, a;\n\t\tfor (j = 0; j < l; j++) {\n\t\t\ta = anchors[j];\n\t\t\ti = a.i;\n\t\t\ts = a.segment;\n\t\t\tif (i) {\n\t\t\t\ts[i-2] = (((s[i-2] + changeX) * rnd) | 0) / rnd;\n\t\t\t\ts[i-1] = (((s[i-1] + changeY) * rnd) | 0) / rnd;\n\t\t\t}\n\t\t\ts[i] = (((s[i] + changeX) * rnd) | 0) / rnd;\n\t\t\ts[i+1] = (((s[i+1] + changeY) * rnd) | 0) / rnd;\n\t\t\tif (i < s.length - 2) {\n\t\t\t\ts[i+2] = (((s[i+2] + changeX) * rnd) | 0) / rnd;\n\t\t\t\ts[i+3] = (((s[i+3] + changeY) * rnd) | 0) / rnd;\n\t\t\t}\n\t\t\tif (a !== anchor) {\n\t\t\t\ta.element.setAttribute(\"transform\", \"translate(\" + (s[i]) + _comma + (s[i+1]) + \")\");\n\t\t\t}\n\t\t}\n\t\tthis.update();\n\t}\n\n\tenabled(enabled) {\n\t\tif (!arguments.length) {\n\t\t\treturn this._enabled;\n\t\t}\n\t\tlet i = this._anchors.length;\n\t\twhile (--i > -1) {\n\t\t\tthis._anchors[i]._draggable.enabled(enabled);\n\t\t}\n\t\tthis._enabled = enabled;\n\t\tthis._handle1._draggable.enabled(enabled);\n\t\tthis._handle2._draggable.enabled(enabled);\n\t\tif (this._draggable) {\n\t\t\tthis._draggable.enabled(enabled);\n\t\t}\n\t\tif (!enabled) {\n\t\t\tthis.deselect();\n\t\t\tthis.path.ownerSVGElement.removeChild(this._selectionHittest);\n\t\t\tthis.path.ownerSVGElement.removeChild(this._selection);\n\t\t} else if (!this._selection.parentNode) {\n\t\t\tthis.path.ownerSVGElement.appendChild(this._selectionHittest);\n\t\t\tthis.path.ownerSVGElement.appendChild(this._selection);\n\t\t\tthis.init();\n\t\t\tthis._saveState();\n\t\t}\n\t\tthis._updateAnchors();\n\t\treturn this.update();\n\t}\n\n\tupdate(readPath) {\n\t\tlet d = \"\",\n\t\t\tanchor = this._editingAnchor,\n\t\t\ti, s, x, y;\n\t\tif (readPath) {\n\t\t\tthis.init();\n\t\t}\n\t\tif (anchor) {\n\t\t\ti = anchor.i;\n\t\t\ts = anchor.segment;\n\t\t\tif (i) {\n\t\t\t\tx = s[i-2];\n\t\t\t\ty = s[i-1];\n\t\t\t\tthis._handle1.setAttribute(\"transform\", \"translate(\" + (x) + _comma + (y) + \")\");\n\t\t\t\tthis._line1.setAttribute(\"points\", x + _comma + y + _comma + s[i] + _comma + s[i+1]);\n\t\t\t}\n\t\t\tif (i < s.length - 2) {\n\t\t\t\tx = s[i+2];\n\t\t\t\ty = s[i+3];\n\t\t\t\tthis._handle2.setAttribute(\"transform\", \"translate(\" + (x) + _comma + (y) + \")\");\n\t\t\t\tthis._line2.setAttribute(\"points\", s[i] + _comma + s[i+1] + _comma + x + _comma + y);\n\t\t\t}\n\t\t}\n\n\t\tif (readPath) {\n\t\t\td = this.path.getAttribute(\"d\");\n\t\t} else {\n\t\t\tfor (i = 0; i < this._rawPath.length; i++) {\n\t\t\t\ts = this._rawPath[i];\n\t\t\t\tif (s.length > 7) {\n\t\t\t\t\td += \"M\" + s[0] + _comma + s[1] + \"C\" + s.slice(2).join(_comma);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.path.setAttribute(\"d\", d);\n\t\t\tthis._selectionPath.setAttribute(\"d\", d);\n\t\t\tthis._selectionHittest.setAttribute(\"d\", d);\n\t\t}\n\n\t\tif (this.vars.onUpdate && this._enabled) {\n\t\t\t_callback(\"onUpdate\", this, d);\n\t\t}\n\t\treturn this;\n\t}\n\n\tgetRawPath(applyTransforms, offsetX, offsetY) {\n\t\tif (applyTransforms) {\n\t\t\tlet m = _getConsolidatedMatrix(this.path);\n\t\t\treturn transformRawPath(copyRawPath(this._rawPath), 1, 0, 0, 1, m.e + (offsetX || 0), m.f + (offsetY || 0));\n\t\t}\n\t\treturn this._rawPath;\n\t}\n\n\tgetString(applyTransforms, offsetX, offsetY) {\n\t\tif (applyTransforms) {\n\t\t\tlet m = _getConsolidatedMatrix(this.path);\n\t\t\treturn rawPathToString(transformRawPath(copyRawPath(this._rawPath), 1, 0, 0, 1, m.e + (offsetX || 0), m.f + (offsetY || 0)));\n\t\t}\n\t\treturn this.path.getAttribute(\"d\");\n\t}\n\n\tgetNormalizedSVG(height, originY, shorten, onEaseError) {\n\t\tlet s = this._rawPath[0],\n\t\t\ttx = s[0] * -1,\n\t\t\tty = (originY === 0) ? 0 : -(originY || s[1]),\n\t\t\tl = s.length,\n\t\t\tsx = 1 / (s[l-2] + tx),\n\t\t\tsy = -height || (s[l-1] + ty),\n\t\t\trnd = 1000,\n\t\t\tpoints, i, x1, y1, x2, y2;\n\t\t_temp.length = 0;\n\t\tif (sy) { //typically y ends at 1 (so that the end values are reached)\n\t\t\tsy = 1 / sy;\n\t\t} else { //in case the ease returns to its beginning value, scale everything proportionally\n\t\t\tsy = -sx;\n\t\t}\n\t\tsx *= rnd;\n\t\tsy *= rnd;\n\t\tfor (i = 0; i < l; i += 2) {\n\t\t\t_temp[i] = (((s[i] + tx) * sx) | 0) / rnd;\n\t\t\t_temp[i+1] = (((s[i+1] + ty) * sy) | 0) / rnd;\n\t\t}\n\n\t\tif (onEaseError) {\n\t\t\tpoints = [];\n\t\t\tl = _temp.length;\n\t\t\tfor (i = 2; i < l; i+=6) {\n\t\t\t\tx1 = _temp[i-2];\n\t\t\t\ty1 = _temp[i-1];\n\t\t\t\tx2 = _temp[i+4];\n\t\t\t\ty2 = _temp[i+5];\n\t\t\t\tpoints.push(x1, y1, x2, y2);\n\t\t\t\tbezierToPoints(x1, y1, _temp[i], _temp[i+1], _temp[i+2], _temp[i+3], x2, y2, 0.001, points, points.length - 2);\n\t\t\t}\n\t\t\tx1 = points[0];\n\t\t\tl = points.length;\n\t\t\tfor (i = 2; i < l; i+=2) {\n\t\t\t\tx2 = points[i];\n\t\t\t\tif (x2 < x1 || x2 > 1 || x2 < 0) {\n\t\t\t\t\tonEaseError();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tx1 = x2;\n\t\t\t}\n\t\t}\n\n\t\tif (shorten && l === 8 && _temp[0] === 0 && _temp[1] === 0 && _temp[l-2] === 1 && _temp[l-1] === 1) {\n\t\t\treturn _temp.slice(2, 6).join(\",\");\n\t\t}\n\t\t_temp[2] = \"C\" + _temp[2];\n\t\treturn \"M\" + _temp.join(\",\");\n\t}\n\n}\n\n\n\n\n\nPathEditor.simplifyPoints = simplifyPoints;\nPathEditor.pointsToSegment = pointsToSegment;\nPathEditor.simplifySVG = (data, vars) => {  //takes a <path> element or data string and simplifies it according to whatever tolerance you set (default:1, the bigger the number the more variance there can be). vars: {tolerance:1, cornerThreshold:degrees, curved:true}\n\tlet element, points, i, x1, x2, y1, y2, bezier, precision, tolerance, l, cornerThreshold;\n\tvars = vars || {};\n\ttolerance = vars.tolerance || 1;\n\tprecision = vars.precision || (1 / tolerance);\n\tcornerThreshold = (vars.cornerThreshold === undefined ? 18 : +vars.cornerThreshold) * _DEG2RAD;\n\tif (typeof(data) !== \"string\") { //element\n\t\telement = data;\n\t\tdata = element.getAttribute(\"d\");\n\t}\n\tif (data.charAt(0) === \"#\" || data.charAt(0) === \".\") { //selector text\n\t\telement = _doc.querySelector(data);\n\t\tif (element) {\n\t\t\tdata = element.getAttribute(\"d\");\n\t\t}\n\t}\n\tpoints = (vars.curved === false && !/[achqstvz]/ig.test(data)) ? data.match(_numbersExp) : stringToRawPath(data)[0];\n\tif (vars.curved !== false) {\n\t\tbezier = points;\n\t\tpoints = [];\n\t\tl = bezier.length;\n\t\tfor (i = 2; i < l; i+=6) {\n\t\t\tx1 = +bezier[i-2];\n\t\t\ty1 = +bezier[i-1];\n\t\t\tx2 = +bezier[i+4];\n\t\t\ty2 = +bezier[i+5];\n\t\t\tpoints.push(_round(x1), _round(y1), _round(x2), _round(y2));\n\t\t\tbezierToPoints(x1, y1, +bezier[i], +bezier[i+1], +bezier[i+2], +bezier[i+3], x2, y2, 1 / (precision * 200000), points, points.length - 2);\n\t\t}\n\t\tpoints = pointsToSegment(simplifyPoints(points, tolerance), vars.curviness, cornerThreshold);\n\t\tpoints[2] = \"C\" + points[2];\n\t} else {\n\t\tpoints = simplifyPoints(points, tolerance);\n\t}\n\tdata = \"M\" + points.join(\",\");\n\tif (element) {\n\t\telement.setAttribute(\"d\", data);\n\t}\n\treturn data;\n};\n\nPathEditor.create = (target, vars) => new PathEditor(target, vars);\n\nPathEditor.editingAxis = _editingAxis;\n\nPathEditor.getSnapFunction = (vars) => { //{gridSize, radius, x, y, width, height}\n\tlet r = vars.radius || 2,\n\t\tbig = 1e20,\n\t\tminX = (vars.x || vars.x === 0) ? vars.x : vars.width ? 0 : -big,\n\t\tminY = (vars.y || vars.y === 0) ? vars.y : vars.height ? 0 : -big,\n\t\tmaxX = minX + (vars.width || big*big),\n\t\tmaxY = minY + (vars.height || big*big),\n\t\tcontainX = (vars.containX !== false),\n\t\tcontainY = (vars.containY !== false),\n\t\taxis = vars.axis,\n\t\tgrid = vars.gridSize;\n\tr *= r;\n\treturn p => {\n\t\tlet x = p.x,\n\t\t\ty = p.y,\n\t\t\tgridX, gridY, dx, dy;\n\t\tif ((containX && x < minX) || (dx = x - minX) * dx < r) {\n\t\t\tx = minX;\n\t\t} else if ((containX && x > maxX) || (dx = maxX - x) * dx < r) {\n\t\t\tx = maxX;\n\t\t}\n\t\tif ((containY && y < minY) || (dy = y - minY) * dy < r) {\n\t\t\ty = minY;\n\t\t} else if ((containY && y > maxY) || (dy = maxY - y) * dy < r) {\n\t\t\ty = maxY;\n\t\t}\n\t\tif (axis) {\n\t\t\tdx = x - axis.x;\n\t\t\tdy = y - axis.y;\n\t\t\tif (dx * dx < r) {\n\t\t\t\tx = axis.x;\n\t\t\t}\n\t\t\tif (dy * dy < r) {\n\t\t\t\ty = axis.y;\n\t\t\t}\n\t\t}\n\t\tif (grid) {\n\t\t\tgridX = minX + Math.round((x - minX) / grid) * grid; //closest grid slot on x-axis\n\t\t\tdx = gridX - x;\n\t\t\tgridY = minY + Math.round((y - minY) / grid) * grid; //closest grid slot on y-axis\n\t\t\tdy = gridY - y;\n\t\t\tif (dx * dx + dy * dy < r) {\n\t\t\t\tx = gridX;\n\t\t\t\ty = gridY;\n\t\t\t}\n\t\t}\n\t\tp.x = x;\n\t\tp.y = y;\n\t};\n};\n\nPathEditor.version = \"3.2.6\";\n\nexport { PathEditor as default };","/*!\n * MotionPathHelper 3.2.6\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n/* eslint-disable */\n\nimport PathEditor from \"./utils/PathEditor.js\";\n\nlet gsap, _win, _doc, _docEl, _body, MotionPathPlugin,  _arrayToRawPath, _rawPathToString,\n\t_bonusValidated = 1, //<name>MotionPathHelper</name>\n\t_selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n\t_isString = value => typeof(value) === \"string\",\n\t_createElement = (type, ns) => {\n\t\tlet e = _doc.createElementNS ? _doc.createElementNS((ns || \"http://www.w3.org/1999/xhtml\").replace(/^https/, \"http\"), type) : _doc.createElement(type); //some servers swap in https for http in the namespace which can break things, making \"style\" inaccessible.\n\t\treturn e.style ? e : _doc.createElement(type); //some environments won't allow access to the element's style when created with a namespace in which case we default to the standard createElement() to work around the issue. Also note that when GSAP is embedded directly inside an SVG file, createElement() won't allow access to the style object in Firefox (see https://greensock.com/forums/topic/20215-problem-using-tweenmax-in-standalone-self-containing-svg-file-err-cannot-set-property-csstext-of-undefined/).\n\t},\n\t_getPositionOnPage = target => {\n\t\tlet bounds = target.getBoundingClientRect(),\n\t\t\twindowOffsetY = _docEl.clientTop - (_win.pageYOffset || _docEl.scrollTop || _body.scrollTop || 0),\n\t\t\twindowOffsetX = _docEl.clientLeft - (_win.pageXOffset || _docEl.scrollLeft || _body.scrollLeft || 0);\n\t\treturn {left:bounds.left + windowOffsetX, top:bounds.top + windowOffsetY, right: bounds.right + windowOffsetX, bottom: bounds.bottom + windowOffsetY};\n\t},\n\t_getInitialPath = (x, y) => {\n\t\tlet coordinates = [0,31,8,58,24,75,40,90,69,100,100,100],\n\t\t\ti;\n\t\tfor (i = 0; i < coordinates.length; i+=2) {\n\t\t\tcoordinates[i] += x;\n\t\t\tcoordinates[i+1] += y;\n\t\t}\n\t\treturn \"M\" + x + \",\" + y + \"C\" + coordinates.join(\",\");\n\t},\n\t_getGlobalTime = animation => {\n\t\tlet time = animation.totalTime();\n\t\twhile (animation) {\n\t\t\ttime = animation.startTime() + time / (animation.timeScale() || 1);\n\t\t\tanimation = animation.parent;\n\t\t}\n\t\treturn time;\n\t},\n\t_copyElement,\n\t_initCopyToClipboard = () => {\n\t\t_copyElement = _createElement(\"textarea\");\n\t\t_copyElement.style.display = \"none\";\n\t\t_body.appendChild(_copyElement);\n\t},\n\t_parsePath = (path, target, vars) => (_isString(path) && _selectorExp.test(path)) ? _doc.querySelector(path) : Array.isArray(path) ? _rawPathToString(_arrayToRawPath([{x:gsap.getProperty(target, \"x\"), y:gsap.getProperty(target, \"y\")}, ...path], vars)) : (_isString(path) || path && (path.tagName + \"\").toLowerCase() === \"path\") ? path : 0,\n\t_addCopyToClipboard = (target, getter, onComplete) => {\n\t\ttarget.addEventListener('click', e => {\n\t\t\tif (e.target._gsHelper) {\n\t\t\t\tlet c = getter(e.target);\n\t\t\t\t_copyElement.value = c;\n\t\t\t\tif (c && _copyElement.select) {\n\t\t\t\t\tconsole.log(c);\n\t\t\t\t\t_copyElement.style.display = \"block\";\n\t\t\t\t\t_copyElement.select();\n\t\t\t\t\ttry {\n\t\t\t\t\t\t_doc.execCommand('copy');\n\t\t\t\t\t\t_copyElement.blur();\n\t\t\t\t\t\tif (onComplete) {\n\t\t\t\t\t\t\tonComplete(target);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.warn(\"Copy didn't work; this browser doesn't permit that.\");\n\t\t\t\t\t}\n\t\t\t\t\t_copyElement.style.display = \"none\";\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\t_identityMatrixObject = {matrix:{a:1, b:0, c:0, d:1, e:0, f:0}},\n\t_getConsolidatedMatrix = target => (target.transform.baseVal.consolidate() || _identityMatrixObject).matrix,\n\t_findMotionPathTween = target => {\n\t\tlet tweens = gsap.getTweensOf(target),\n\t\t\ti = 0;\n\t\tfor (; i < tweens.length; i++) {\n\t\t\tif (tweens[i].vars.motionPath) {\n\t\t\t\treturn tweens[i];\n\t\t\t} else if (tweens[i].timeline) {\n\t\t\t\ttweens.push(...tweens[i].timeline.getChildren());\n\t\t\t}\n\t\t}\n\t},\n\t_initCore = (core, required) => {\n\t\tlet message = \"Please gsap.registerPlugin(MotionPathPlugin)\";\n\t\t_win = window;\n\t\tgsap = gsap || core || _win.gsap || console.warn(message);\n\t\t_doc = document;\n\t\t_body = _doc.body;\n\t\t_docEl = _doc.documentElement;\n\t\tMotionPathPlugin = gsap && gsap.plugins.motionPath;\n\t\tif (!MotionPathPlugin) {\n\t\t\t(required === true) && console.warn(message);\n\t\t} else {\n\t\t\t_initCopyToClipboard();\n\t\t\t_arrayToRawPath = MotionPathPlugin.arrayToRawPath;\n\t\t\t_rawPathToString = MotionPathPlugin.rawPathToString;\n\t\t}\n\t};\n\nexport class MotionPathHelper {\n\n\tconstructor(targetOrTween, vars = {}) {\n\t\tif (!MotionPathPlugin) {\n\t\t\t_initCore(vars.gsap, 1);\n\t\t}\n\t\tlet copyButton = _createElement(\"div\"),\n\t\t\tself = this,\n\t\t\toffset = {x:0, y:0},\n\t\t\ttarget, path, isSVG, startX, startY, position, svg, animation, svgNamespace, temp, matrix, refreshPath, animationToScrub;\n\t\tif (targetOrTween instanceof gsap.core.Tween) {\n\t\t\tanimation = targetOrTween;\n\t\t\ttarget = animation.targets()[0];\n\t\t} else {\n\t\t\ttarget = gsap.utils.toArray(targetOrTween)[0];\n\t\t\tanimation = _findMotionPathTween(target);\n\t\t}\n\t\tpath = _parsePath(vars.path, target, vars);\n\t\tthis.offset = offset;\n\t\tposition = _getPositionOnPage(target);\n\t\tstartX = parseFloat(gsap.getProperty(target, \"x\", \"px\"));\n\t\tstartY = parseFloat(gsap.getProperty(target, \"y\", \"px\"));\n\t\tisSVG = (target.getCTM && target.tagName.toLowerCase() !== \"svg\");\n\t\tif (animation && !path) {\n\t\t\tpath = _parsePath(animation.vars.motionPath.path || animation.vars.motionPath, target, animation.vars.motionPath);\n\t\t}\n\t\tcopyButton.setAttribute(\"class\", \"copy-motion-path\");\n\t\tcopyButton.style.cssText = \"border-radius:8px; background-color:rgba(85, 85, 85, 0.7); color:#fff; cursor:pointer; padding:6px 12px; font-family:Signika Negative, Arial, sans-serif; position:fixed; left:50%; transform:translate(-50%, 0); font-size:19px; bottom:10px\";\n\t\tcopyButton.innerText = \"COPY MOTION PATH\";\n\t\tcopyButton._gsHelper = self;\n\t\t(gsap.utils.toArray(vars.container)[0] || _body).appendChild(copyButton);\n\t\t_addCopyToClipboard(copyButton, () => self.getString(), () => gsap.fromTo(copyButton, {backgroundColor:\"white\"}, {duration:0.5, backgroundColor:\"rgba(85, 85, 85, 0.6)\"}));\n\t\tsvg = path && path.ownerSVGElement;\n\t\tif (!svg) {\n\t\t\tsvgNamespace = (isSVG && target.ownerSVGElement && target.ownerSVGElement.getAttribute(\"xmlns\")) || \"http://www.w3.org/2000/svg\";\n\t\t\tif (isSVG) {\n\t\t\t\tsvg = target.ownerSVGElement;\n\t\t\t\ttemp = target.getBBox();\n\t\t\t\tmatrix = _getConsolidatedMatrix(target);\n\t\t\t\tstartX = matrix.e;\n\t\t\t\tstartY = matrix.f;\n\t\t\t\toffset.x = temp.x;\n\t\t\t\toffset.y = temp.y;\n\t\t\t} else {\n\t\t\t\tsvg = _createElement(\"svg\", svgNamespace);\n\t\t\t\t_body.appendChild(svg);\n\t\t\t\tsvg.setAttribute(\"viewBox\", \"0 0 100 100\");\n\t\t\t\tsvg.style.cssText = \"overflow:visible; background-color: transparent; position:absolute; width:100px; height:100px; top:\" + position.top + \"px; left:\" + position.left + \"px;\";\n\t\t\t}\n\t\t\ttemp = _isString(path) && !_selectorExp.test(path) ? path : _getInitialPath(startX, startY);\n\t\t\tpath = _createElement(\"path\", svgNamespace);\n\t\t\tpath.setAttribute(\"d\", temp);\n\t\t\tpath.setAttribute(\"vector-effect\", \"non-scaling-stroke\");\n\t\t\tpath.style.cssText = \"fill:transparent; stroke-width:\" + (vars.pathWidth || 3) + \"; stroke:\" + (vars.pathColor || \"#555\") + \"; opacity:\" + (vars.pathOpacity || 0.6);\n\t\t\tsvg.appendChild(path);\n\t\t\tif (offset.x || offset.y) {\n\t\t\t\tgsap.set(path, {x:offset.x, y:offset.y});\n\t\t\t}\n\t\t}\n\n\t\tif (!(\"selected\" in vars)) {\n\t\t\tvars.selected = true;\n\t\t}\n\t\tif (!(\"anchorSnap\" in vars)) {\n\t\t\tvars.anchorSnap = p => {\n\t\t\t\tif (p.x * p.x + p.y * p.y < 16) {\n\t\t\t\t\tp.x = p.y = 0;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tanimationToScrub = animation && animation.parent.data === \"nested\" ? animation.parent.parent : animation;\n\n\t\tvars.onPress = () => {\n\t\t\tanimationToScrub.pause(0);\n\t\t};\n\n\t\trefreshPath = () => {\n\t\t\t//let m = _getConsolidatedMatrix(path);\n\t\t\t//animation.vars.motionPath.offsetX = m.e - offset.x;\n\t\t\t//animation.vars.motionPath.offsetY = m.f - offset.y;\n\t\t\tanimation.invalidate();\n\t\t\tanimationToScrub.restart();\n\t\t};\n\t\tvars.onRelease = vars.onDeleteAnchor = refreshPath;\n\n\t\tthis.editor = PathEditor.create(path, vars);\n\t\tif (vars.center) {\n\t\t\tgsap.set(target, {transformOrigin:\"50% 50%\", xPercent:-50, yPercent:-50});\n\t\t}\n\t\tif (animation) {\n\t\t\tif (animation.vars.motionPath.path) {\n\t\t\t\tanimation.vars.motionPath.path = path;\n\t\t\t} else {\n\t\t\t\tanimation.vars.motionPath = {path:path};\n\t\t\t}\n\t\t\tif (animationToScrub.parent !== gsap.globalTimeline) {\n\t\t\t\tgsap.globalTimeline.add(animationToScrub, _getGlobalTime(animationToScrub) - animationToScrub.delay());\n\t\t\t}\n\t\t\tanimationToScrub.repeat(-1).repeatDelay(1);\n\n\t\t} else {\n\t\t\tanimation = animationToScrub = gsap.to(target, {\n\t\t\t\tmotionPath: {\n\t\t\t\t\tpath: path,\n\t\t\t\t\tstart: vars.start || 0,\n\t\t\t\t\tend: (\"end\" in vars) ? vars.end : 1,\n\t\t\t\t\tautoRotate: (\"autoRotate\" in vars) ? vars.autoRotate : false,\n\t\t\t\t\talign: path,\n\t\t\t\t\talignOrigin: vars.alignOrigin\n\t\t\t\t},\n\t\t\t\tduration: vars.duration || 5,\n\t\t\t\tease: vars.ease || \"power1.inOut\",\n\t\t\t\trepeat:-1,\n\t\t\t\trepeatDelay:1,\n\t\t\t\tpaused:!vars.path\n\t\t\t});\n\t\t}\n\t\tthis.animation = animation;\n\t}\n\n\tgetString() {\n\t\treturn this.editor.getString(true, -this.offset.x, -this.offset.y);\n\t}\n\n}\n\nMotionPathHelper.register = _initCore;\nMotionPathHelper.create = (target, vars) => new MotionPathHelper(target, vars);\nMotionPathHelper.version = \"3.2.6\";\n\nexport { MotionPathHelper as default };"],"names":["_wrapProgress","value","Math","round","_copyMetaData","source","copy","totalLength","samples","slice","lookup","minLength","resolution","totalPoints","_bestDistance","_svgPathExp","_numbersExp","_DEG2RAD","PI","_RAD2DEG","sin","_cos","cos","_abs","abs","_sqrt","sqrt","_atan2","atan2","_largeNum","copyRawPath","rawPath","a","i","length","transformRawPath","b","c","d","tx","ty","segment","l","x","y","j","_dirty","arcToSegment","lastX","lastY","rx","ry","angle","largeArcFlag","sweepFlag","angleRad","cosAngle","sinAngle","_sin","TWOPI","dx2","dy2","x1","y1","x1_sq","y1_sq","radiiCheck","rx_sq","ry_sq","sq","coef","cx1","cy1","cx","cy","ux","uy","vx","vy","temp","angleStart","acos","angleExtent","isNaN","segments","ceil","angleIncrement","controlLength","ma","mb","mc","md","push","stringToRawPath","line","sx","sy","ex","ey","difX","difY","command","isRelative","startX","startY","beziers","prevCommand","flag1","flag2","replace","_scientific","m","n","match","path","relativeX","relativeY","elements","points","errorMessage","console","log","toUpperCase","closed","substr","charAt","pop","bezierToPoints","x2","y2","x3","y3","x4","y4","threshold","index","x12","y12","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","dx","dy","d2","d3","splice","pointsToSegment","curviness","cornerThreshold","prevX","prevY","slope","dx1","dx3","dy1","dy3","d1","nextX","nextY","_round","simplifyPoints","tolerance","result","last","parseFloat","simplifyStep","first","simplified","t","maxSqDist","firstX","firstY","getClosestProgressOnBezier","iterations","px","py","start","end","slices","x0","y0","inv","inc","best","max","min","_setDoc","element","doc","ownerDocument","_transformProp","style","_transformOriginProp","parentNode","_win","window","_identityMatrix","Matrix2D","_docElement","_doc","documentElement","_body","body","createElement","appendChild","position","_hasOffsetBug","offsetParent","removeChild","_svgOwner","ownerSVGElement","tagName","toLowerCase","_createSibling","svg","ns","getAttribute","type","css","e","createElementNS","_svgContainer","setAttribute","_divContainer","cssText","_placeSiblings","adjustGOffset","container","isRootSVG","siblings","_svgTemps","_divTemps","getBBox","transform","baseVal","numberOfItems","_consolidate","multiply","getItem","matrix","f","getComputedStyle","offsetLeft","offsetTop","top","left","border","borderLeftStyle","borderTopStyle","borderLeftWidth","borderTopWidth","_setMatrix","inverse","this","determinant","a2","b2","c2","e2","f2","clone","equals","apply","point","decoratee","getGlobalMatrix","temps","b1","getBoundingClientRect","b3","parent","isFixed","_isFixed","nodeType","_getDocScrollLeft","pageXOffset","scrollLeft","_getDocScrollTop","pageYOffset","scrollTop","_emptyFunc","_preventDefault","event","preventDefault","preventManipulation","_createElement","_createSVG","attributes","p","reg","undefined","setAttributeNS","_getConsolidatedMatrix","target","consolidate","_identityMatrixObject","_checkDeselect","_gsSelection","_isPressed","_getTime","_lastInteraction","_selectedPaths","deselect","_addListener","func","capture","addEventListener","touchType","_touchEventLookup","passive","attachEvent","_removeListener","removeEventListener","detachEvent","_onMultiTouchDocumentEnd","_isMultiTouching","touches","_dragCount","_onMultiTouchDocument","_bind","scope","call","_callback","self","param","callback","vars","callbackScope","_resetSelection","_copyElement","display","select","_onPress","touchEventTarget","ctm","_matrix","_ctm","indexOf","currentTarget","_onRelease","_onMove","_supportsPointer","changedTouches","touch","touchID","identifier","pointerId","_startPointerY","pointerY","pageY","_startPointerX","pointerX","pageX","_startElementX","_startElementY","isPressed","onPress","pointerEvent","originalEvent","_enabled","setPointerPosition","onDrag","force","_hasTouchID","list","ID","_interacted","wasDragging","isDragging","onClick","onDragRelease","onRelease","onDragEnd","_createSegmentAnchors","editor","Anchor","_getLength","i2","_CTRL","_ALT","_SHIFT","_CMD","_recentlyAddedAnchor","_tempDiv","_coreInitted","_selectionColor","Date","now","getTime","_editingAxis","_history","_point","_temp","_comma","DraggableSVG","xChange","yChange","snap","enabled","arguments","_onClick","dragging","endDrag","querySelectorAll","maxX","minX","_bounds","s","_draggable","update","prevSmooth","smooth","_circleHandle","_squareHandle","_selection","fill","stroke","strokeWidth","vectorEffect","PathEditor","anchor","_editingAnchor","init","pathData","createAnchors","_rawPath","anchorVars","anchorSnap","_onDragAnchor","_onPressAnchor","_onClickAnchor","_onDragEndAnchor","_anchors","_selectedAnchors","concat","_handle1","_handle2","_selectionPath","_selectionHittest","_g","_getConcatenatedTransforms","owner","_updateAnchors","_saveState","_addHistory","pathEditor","selectedIndexes","unshift","_onClickSelectionPath","visibility","altKey","newIndex","closestData","getScreenCTM","clientX","clientY","getClosestData","closest","bestDistance","subdivideSegment","ax","ay","cp1x","cp1y","cp2x","cp2y","x1a","y1a","x2a","y2a","_onClickHandle1","_onClickHandle2","isSelected","allAnchors","_onDragPath","_deleteSelectedAnchors","anchors","onDeleteAnchor","angle1","angle2","length1","length2","rnd","isEnd","_line1","_line2","_onPressAlt","_onReleaseAlt","_onPressHandle1","_oppositeHandleLength","_onPressHandle2","_onReleaseHandle","_onDragHandle1","_onDragHandle2","changeX","changeY","readPath","join","onUpdate","getRawPath","applyTransforms","offsetX","offsetY","getString","rawPathToString","_isNumber","sl","getNormalizedSVG","height","originY","shorten","onEaseError","_initCore","document","types","standard","split","converted","onpointerdown","onmspointerdown","obj","SVGElement","prototype","getTransformToElement","state","key","keyCode","which","keyString","shift","onUndo","PointerEvent","pointerEvents","size","handleSize","_getSquarePathData","_getCirclePathData","rcirc","handleSnap","selectionItems","draggable","selected","simplifySVG","data","bezier","precision","querySelector","curved","test","create","editingAxis","getSnapFunction","r","radius","big","width","minY","maxY","containX","containY","axis","grid","gridSize","gridX","gridY","version","_isString","_parsePath","_selectorExp","Array","isArray","_rawPathToString","_arrayToRawPath","gsap","getProperty","core","required","message","warn","_docEl","MotionPathPlugin","plugins","motionPath","_initCopyToClipboard","arrayToRawPath","_bonusValidated","MotionPathHelper","offset","targetOrTween","isSVG","animation","svgNamespace","refreshPath","animationToScrub","copyButton","Tween","targets","utils","toArray","_findMotionPathTween","tweens","getTweensOf","timeline","getChildren","_getPositionOnPage","bounds","windowOffsetY","clientTop","windowOffsetX","clientLeft","right","bottom","getCTM","innerText","_gsHelper","_addCopyToClipboard","getter","onComplete","execCommand","blur","err","fromTo","backgroundColor","duration","_getInitialPath","coordinates","pathWidth","pathColor","pathOpacity","set","pause","invalidate","restart","center","transformOrigin","xPercent","yPercent","globalTimeline","add","_getGlobalTime","time","totalTime","startTime","timeScale","delay","repeat","repeatDelay","to","autoRotate","align","alignOrigin","ease","paused","register"],"mappings":";;;;;;;;;6MA8BU,SADTA,EACSC,UAAUC,KAAKC,MAFT,IAEeF,GAFf,KAEwD,EAqBvD,SAAhBG,EAAiBC,EAAQC,UACxBA,EAAKC,YAAcF,EAAOE,YACtBF,EAAOG,SACVF,EAAKE,QAAUH,EAAOG,QAAQC,MAAM,GACpCH,EAAKI,OAASL,EAAOK,OAAOD,MAAM,GAClCH,EAAKK,UAAYN,EAAOM,UACxBL,EAAKM,WAAaP,EAAOO,YAEzBN,EAAKO,YAAcR,EAAOQ,YAEpBP,MAaRQ,EA/DGC,EAAc,mDACjBC,EACc,gCAEdC,EAAWf,KAAKgB,GAAK,IACrBC,EACOjB,KAAKkB,IACZC,EAAOnB,KAAKoB,IACZC,EAAOrB,KAAKsB,IACZC,EAAQvB,KAAKwB,KACbC,EAASzB,KAAK0B,MACdC,EAAY,IA8EN,SAASC,YAAYC,WACvBC,EAAI,GACPC,EAAI,EACEA,EAAIF,EAAQG,OAAQD,IAC1BD,EAAEC,GAAK7B,EAAc2B,EAAQE,GAAIF,EAAQE,GAAGxB,MAAM,WAE5CL,EAAc2B,EAASC,GAudxB,SAASG,iBAAiBJ,EAASC,EAAGI,EAAGC,EAAGC,EAAGC,EAAIC,WAExDC,EAASC,EAAGT,EAAGU,EAAGC,EADfC,EAAId,EAAQG,QAEF,IAALW,OAERH,GADAD,EAAUV,EAAQc,IACNX,OACPD,EAAI,EAAGA,EAAIS,EAAGT,GAAK,EACvBU,EAAIF,EAAQR,GACZW,EAAIH,EAAQR,EAAE,GACdQ,EAAQR,GAAKU,EAAIX,EAAIY,EAAIP,EAAIE,EAC7BE,EAAQR,EAAE,GAAKU,EAAIP,EAAIQ,EAAIN,EAAIE,SAGjCT,EAAQe,OAAS,EACVf,EAMR,SAASgB,aAAaC,EAAOC,EAAOC,EAAIC,EAAIC,EAAOC,EAAcC,EAAWX,EAAGC,MAC1EI,IAAUL,GAAKM,IAAUL,GAG7BM,EAAK3B,EAAK2B,GACVC,EAAK5B,EAAK4B,OACNI,EAAYH,EAAQ,IAAOnC,EAC9BuC,EAAWnC,EAAKkC,GAChBE,EAAWC,EAAKH,GAChBrC,EAAKhB,KAAKgB,GACVyC,EAAa,EAALzC,EACR0C,GAAOZ,EAAQL,GAAK,EACpBkB,GAAOZ,EAAQL,GAAK,EACpBkB,EAAMN,EAAWI,EAAMH,EAAWI,EAClCE,GAAON,EAAWG,EAAMJ,EAAWK,EACnCG,EAAQF,EAAKA,EACbG,EAAQF,EAAKA,EACbG,EAAaF,GAASd,EAAKA,GAAMe,GAASd,EAAKA,GAC/B,EAAbe,IACHhB,EAAKzB,EAAMyC,GAAchB,EACzBC,EAAK1B,EAAMyC,GAAcf,OAEtBgB,EAAQjB,EAAKA,EAChBkB,EAAQjB,EAAKA,EACbkB,GAAOF,EAAQC,EAAUD,EAAQF,EAAUG,EAAQJ,IAAYG,EAAQF,EAAUG,EAAQJ,GACtFK,EAAK,IACRA,EAAK,OAEFC,GAASjB,IAAiBC,GAAc,EAAI,GAAK7B,EAAM4C,GAC1DE,EAAerB,EAAKa,EAAMZ,EAApBmB,EACNE,GAAgBrB,EAAKW,EAAMZ,EAArBoB,EAGNG,EAAYjB,EAAWe,EAAMd,EAAWe,GAFjCxB,EAAQL,GAAK,EAGpB+B,EAAYjB,EAAWc,EAAMf,EAAWgB,GAFjCvB,EAAQL,GAAK,EAGpB+B,GAAMb,EAAKS,GAAOrB,EAClB0B,GAAMb,EAAKS,GAAOrB,EAClB0B,IAAOf,EAAKS,GAAOrB,EACnB4B,IAAOf,EAAKS,GAAOrB,EACnB4B,EAAOJ,EAAKA,EAAKC,EAAKA,EACtBI,GAAeJ,EAAK,GAAM,EAAI,GAAK1E,KAAK+E,KAAKN,EAAKlD,EAAMsD,IACxDG,GAAgBP,EAAKG,EAAKF,EAAKC,EAAK,GAAM,EAAI,GAAK3E,KAAK+E,MAAMN,EAAKE,EAAKD,EAAKE,GAAMrD,EAAMsD,GAAQF,EAAKA,EAAKC,EAAKA,KAC7GK,MAAMD,KACTA,EAAchE,IAEVoC,GAA2B,EAAd4B,EACjBA,GAAevB,EACLL,GAAa4B,EAAc,IACrCA,GAAevB,GAEhBqB,GAAcrB,EACduB,GAAevB,MASd1B,EARGmD,EAAWlF,KAAKmF,KAAK9D,EAAK2D,IAAgBvB,EAAQ,IACrD5B,EAAU,GACVuD,EAAiBJ,EAAcE,EAC/BG,EAAgB,EAAI,EAAI7B,EAAK4B,EAAiB,IAAM,EAAIjE,EAAKiE,EAAiB,IAC9EE,EAAKhC,EAAWN,EAChBuC,EAAKhC,EAAWP,EAChBwC,EAAKjC,GAAYN,EACjBwC,EAAKnC,EAAWL,MAEZlB,EAAI,EAAGA,EAAImD,EAAUnD,IAEzB6B,EAAKzC,EADL+B,EAAQ4B,EAAa/C,EAAIqD,GAEzBvB,EAAKL,EAAKN,GACVuB,EAAKtD,EAAK+B,GAASkC,GACnBV,EAAKlB,EAAKN,GACVrB,EAAQ6D,KAAK9B,EAAKyB,EAAgBxB,EAAIA,EAAKwB,EAAgBzB,EAAIa,EAAKY,EAAgBX,EAAIA,EAAKW,EAAgBZ,EAAIA,EAAIC,OAGjH3C,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,GAAG,EAClC6B,EAAK/B,EAAQE,GACb8B,EAAKhC,EAAQE,EAAE,GACfF,EAAQE,GAAK6B,EAAK0B,EAAKzB,EAAK2B,EAAKjB,EACjC1C,EAAQE,EAAE,GAAK6B,EAAK2B,EAAK1B,EAAK4B,EAAKjB,SAEpC3C,EAAQE,EAAE,GAAKU,EACfZ,EAAQE,EAAE,GAAKW,EACRb,GAID,SAAS8D,gBAAgBvD,GAUvB,SAAPwD,GAAgBC,EAAIC,EAAIC,EAAIC,GAC3BC,GAAQF,EAAKF,GAAM,EACnBK,GAAQF,EAAKF,GAAM,EACnBvD,EAAQmD,KAAKG,EAAKI,EAAMH,EAAKI,EAAMH,EAAKE,EAAMD,EAAKE,EAAMH,EAAIC,OAJ9DjE,EAAGY,EAAGF,EAAGC,EAAGyD,EAASC,EAAY7D,EAAS8D,EAAQC,EAAQL,EAAMC,EAAMK,EAASC,EAAaC,EAAOC,EARhG5E,GAAKM,EAAI,IAAIuE,QAAQC,EAAa,SAAAC,OAAWC,GAAKD,SAAWC,EAAI,OAAe,KAALA,EAAe,EAAIA,IAAMC,MAAMlG,IAAgB,GAC7HmG,EAAO,GACPC,EAAY,EACZC,EAAY,EAEZC,EAAWrF,EAAEE,OACboF,EAAS,EACTC,EAAe,0BAA4BjF,MAOvCA,IAAM6C,MAAMnD,EAAE,KAAOmD,MAAMnD,EAAE,WACjCwF,QAAQC,IAAIF,GACLL,MAEHjF,EAAI,EAAGA,EAAIoF,EAAUpF,OACzByE,EAAcL,EACVlB,MAAMnD,EAAEC,IAEXqE,GADAD,EAAUrE,EAAEC,GAAGyF,iBACW1F,EAAEC,GAE5BA,IAEDU,GAAKX,EAAEC,EAAI,GACXW,GAAKZ,EAAEC,EAAI,GACPqE,IACH3D,GAAKwE,EACLvE,GAAKwE,GAEDnF,IACJsE,EAAS5D,EACT6D,EAAS5D,GAIM,MAAZyD,EACC5D,IACCA,EAAQP,OAAS,IACpBgF,EAAKhF,OAELoF,GAAU7E,EAAQP,QAGpBiF,EAAYZ,EAAS5D,EACrByE,EAAYZ,EAAS5D,EACrBH,EAAU,CAACE,EAAGC,GACdsE,EAAKtB,KAAKnD,GACVR,GAAK,EACLoE,EAAU,SAGJ,GAAgB,MAAZA,EAILC,IACJa,EAAYC,EAAY,IAHxB3E,EADIA,GACM,CAAC,EAAG,IAMPmD,KAAKjD,EAAGC,EAAGuE,EAAuB,EAAXnF,EAAEC,EAAI,GAAQmF,EAAuB,EAAXpF,EAAEC,EAAI,GAASkF,GAAwB,EAAXnF,EAAEC,EAAI,GAAUmF,GAAwB,EAAXpF,EAAEC,EAAI,IACxHA,GAAK,OAGC,GAAgB,MAAZoE,EACVF,EAAOgB,EACPf,EAAOgB,EACa,MAAhBV,GAAuC,MAAhBA,IAC1BP,GAAQgB,EAAY1E,EAAQA,EAAQP,OAAS,GAC7CkE,GAAQgB,EAAY3E,EAAQA,EAAQP,OAAS,IAEzCoE,IACJa,EAAYC,EAAY,GAEzB3E,EAAQmD,KAAKO,EAAMC,EAAMzD,EAAGC,EAAIuE,GAAwB,EAAXnF,EAAEC,EAAI,GAAUmF,GAAwB,EAAXpF,EAAEC,EAAI,IAChFA,GAAK,OAGC,GAAgB,MAAZoE,EACVF,EAAOgB,EA7EI,EAAI,GA6EKxE,EAAIwE,GACxBf,EAAOgB,EA9EI,EAAI,GA8EKxE,EAAIwE,GACnBd,IACJa,EAAYC,EAAY,GAEzBD,GAAwB,EAAXnF,EAAEC,EAAI,GACnBmF,GAAwB,EAAXpF,EAAEC,EAAI,GACnBQ,EAAQmD,KAAKO,EAAMC,EAAMe,EApFd,EAAI,GAoFuBxE,EAAIwE,GAAwBC,EApFvD,EAAI,GAoFgExE,EAAIwE,GAAwBD,EAAWC,GACtHnF,GAAK,OAGC,GAAgB,MAAZoE,EACVF,EAAOgB,EAAY1E,EAAQA,EAAQP,OAAS,GAC5CkE,EAAOgB,EAAY3E,EAAQA,EAAQP,OAAS,GAC5CO,EAAQmD,KAAKuB,EAAYhB,EAAMiB,EAAYhB,EAAMzD,EA3FtC,EAAI,GA2FwCwE,EAAmB,IAAPhB,EAAcxD,GAAgBC,EA3FtF,EAAI,GA2FwFwE,EAAmB,IAAPhB,EAAcxD,GAAiBuE,EAAYxE,EAAKyE,EAAYxE,GAC/KX,GAAK,OAGC,GAAgB,MAAZoE,EACVP,GAAKqB,EAAWC,EAAYD,EAAYxE,EAAIyE,GAC5CnF,GAAK,OAGC,GAAgB,MAAZoE,EAEVP,GAAKqB,EAAWC,EAAWD,EAAYC,EAAYzE,GAAK2D,EAAac,EAAYD,EAAY,IAC7FlF,GAAK,OAGC,GAAgB,MAAZoE,GAA+B,MAAZA,EACb,MAAZA,IACH1D,EAAI4D,EACJ3D,EAAI4D,EACJ/D,EAAQkF,QAAS,IAEF,MAAZtB,GAAyC,GAAtB9E,EAAK4F,EAAYxE,IAAkC,GAAtBpB,EAAK6F,EAAYxE,MACpEkD,GAAKqB,EAAWC,EAAWzE,EAAGC,GACd,MAAZyD,IACHpE,GAAK,IAGPkF,EAAYxE,EACZyE,EAAYxE,OAGN,GAAgB,MAAZyD,EAAiB,IAC3BM,EAAQ3E,EAAEC,EAAE,GACZ2E,EAAQ5E,EAAEC,EAAE,GACZkE,EAAOnE,EAAEC,EAAE,GACXmE,EAAOpE,EAAEC,EAAE,GACXY,EAAI,EACe,EAAf8D,EAAMzE,SACLyE,EAAMzE,OAAS,GAClBkE,EAAOD,EACPA,EAAOS,EACP/D,MAEAuD,EAAOQ,EACPT,EAAOQ,EAAMiB,OAAO,GACpB/E,GAAG,GAEJ+D,EAAQD,EAAMkB,OAAO,GACrBlB,EAAQA,EAAMkB,OAAO,IAEtBpB,EAAU1D,aAAaoE,EAAWC,GAAYpF,EAAEC,EAAE,IAAKD,EAAEC,EAAE,IAAKD,EAAEC,EAAE,IAAK0E,GAAQC,GAAQN,EAAaa,EAAY,GAAU,EAALhB,GAASG,EAAac,EAAY,GAAU,EAALhB,GAC9JnE,GAAKY,EACD4D,MACE5D,EAAI,EAAGA,EAAI4D,EAAQvE,OAAQW,IAC/BJ,EAAQmD,KAAKa,EAAQ5D,IAGvBsE,EAAY1E,EAAQA,EAAQP,OAAO,GACnCkF,EAAY3E,EAAQA,EAAQP,OAAO,QAGnCsF,QAAQC,IAAIF,UAGdtF,EAAIQ,EAAQP,QACJ,GACPgF,EAAKY,MACL7F,EAAI,GACMQ,EAAQ,KAAOA,EAAQR,EAAE,IAAMQ,EAAQ,KAAOA,EAAQR,EAAE,KAClEQ,EAAQkF,QAAS,GAElBT,EAAKrG,YAAcyG,EAASrF,EACrBiF,EAID,SAASa,eAAejE,EAAIC,EAAIiE,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAWhB,EAAQiB,OAiBhFrG,EAhBGsG,GAAO1E,EAAKkE,GAAM,EACrBS,GAAO1E,EAAKkE,GAAM,EAClBS,GAAOV,EAAKE,GAAM,EAClBS,GAAOV,EAAKE,GAAM,EAClBS,GAAOV,EAAKE,GAAM,EAClBS,GAAOV,EAAKE,GAAM,EAClBS,GAAQN,EAAME,GAAO,EACrBK,GAAQN,EAAME,GAAO,EACrBK,GAAQN,EAAME,GAAO,EACrBK,GAAQN,EAAME,GAAO,EACrBK,GAASJ,EAAOE,GAAQ,EACxBG,GAASJ,EAAOE,GAAQ,EACxBG,EAAKhB,EAAKtE,EACVuF,EAAKhB,EAAKtE,EACVuF,EAAK/H,GAAMyG,EAAKI,GAAMiB,GAAMpB,EAAKI,GAAMe,GACvCG,EAAKhI,GAAM2G,EAAKE,GAAMiB,GAAMlB,EAAKE,GAAMe,UAEnC9B,IACJA,EAAS,CAACxD,EAAIC,EAAIqE,EAAIC,GACtBE,EAAQ,GAETjB,EAAOkC,OAAOjB,GAASjB,EAAOpF,OAAS,EAAG,EAAGgH,EAAOC,GACxBb,GAAac,EAAKA,EAAKC,EAAKA,IAAnDC,EAAKC,IAAOD,EAAKC,KACrBrH,EAASoF,EAAOpF,OAChB6F,eAAejE,EAAIC,EAAIyE,EAAKC,EAAKK,EAAMC,EAAMG,EAAOC,EAAOb,EAAWhB,EAAQiB,GAC9ER,eAAemB,EAAOC,EAAOH,EAAMC,EAAML,EAAKC,EAAKT,EAAIC,EAAIC,EAAWhB,EAAQiB,EAAQ,GAAKjB,EAAOpF,OAASA,KAErGoF,EAsCD,SAASmC,gBAAgBnC,EAAQoC,EAAWC,OAUjDC,EAAOC,EAAOzG,EAAO0G,EAAO7H,EAAG8H,EAAKC,EAAKC,EAAKC,EAAKC,EAAIb,EAAItH,EAAGI,EAAGC,EAR9DK,EAAI4E,EAAOpF,OAAO,EACrBS,GAAK2E,EAAO,GACZ1E,GAAK0E,EAAO,GACZ8C,GAAS9C,EAAO,GAChB+C,GAAS/C,EAAO,GAChB7E,EAAU,CAACE,EAAGC,EAAGD,EAAGC,GACpBgB,EAAMwG,EAAQzH,EACdkB,EAAMwG,EAAQzH,MAEXuC,MAAMwE,KACTA,EAAkBzJ,KAAKgB,GAAK,IAE7BwI,EAAaA,GAA2B,IAAdA,GAAoBA,EAAY,EACrDzH,EAAI,EAAGA,EAAIS,EAAGT,GAAG,EACrB2H,EAAQjH,EACRkH,EAAQjH,EACRD,EAAIyH,EACJxH,EAAIyH,EASJrI,GANA+H,EAAMnG,GAMImG,GALVE,EAAMpG,GAKgBoG,EACtB7H,GALAwB,GAJAwG,GAAS9C,EAAOrF,EAAE,IAIJU,GAKJiB,GAJVC,GAJAwG,GAAS/C,EAAOrF,EAAE,IAIJW,GAIQiB,EACtBxB,GAJA2H,EAAMI,EAAQR,GAIJI,GAHVE,EAAMG,EAAQR,GAGQK,EAEtBZ,GADAlG,EAAQlD,KAAK+E,MAAOjD,EAAII,EAAIC,GAAKZ,EAAM,EAAIO,EAAII,KACjClC,KAAKgB,GAAMwI,EACzBS,EAAK1I,EAAMO,GAAKsH,EAChBA,GAAM7H,EAAMW,GACRO,IAAMiH,GAAShH,IAAMiH,IACZF,EAARvG,GACH0G,EAAQnI,EAAOuI,EAAKF,GACpBvH,EAAQmD,KACP0E,EAAO3H,EAAItB,EAAKyI,GAASK,GACzBG,EAAO1H,EAAIc,EAAKoG,GAASK,GACzBG,EAAO3H,GACP2H,EAAO1H,GACP0H,EAAO3H,EAAItB,EAAKyI,GAASR,GACzBgB,EAAO1H,EAAIc,EAAKoG,GAASR,MAG1BQ,EAAQnI,EAAOsI,EAAKF,GACpBtH,EAAQmD,KACP0E,EAAO3H,EAAItB,EAAKyI,GAASK,GACzBG,EAAO1H,EAAIc,EAAKoG,GAASK,IAC1BL,EAAQnI,EAAOkC,EAAKD,GACpBnB,EAAQmD,KACP0E,EAAO3H,GACP2H,EAAO1H,GACP0H,EAAO3H,EAAItB,EAAKyI,GAASR,GACzBgB,EAAO1H,EAAIc,EAAKoG,GAASR,aAK7B7G,EAAQmD,KAAK0E,EAAOF,GAAQE,EAAOD,GAAQC,EAAOF,GAAQE,EAAOD,IAC1D5H,EA+CD,SAAS8H,eAAejD,EAAQkD,OAKrCvI,EAAGU,EAAGC,EAAGwG,EAAIC,EAAIoB,EAAQC,EAJtBd,EAAQe,WAAWrD,EAAO,IAC7BuC,EAAQc,WAAWrD,EAAO,IAC1BvC,EAAO,CAAC6E,EAAOC,GACfnH,EAAI4E,EAAOpF,OAAS,MAErBsI,WAAaA,GAAa,EAAM,GAC3BvI,EAAI,EAAGA,EAAIS,EAAGT,GAAK,EAKCuI,GAFxBpB,EAAKQ,GAFLjH,EAAIgI,WAAWrD,EAAOrF,MAIbmH,GADTC,EAAKQ,GAFLjH,EAAI+H,WAAWrD,EAAOrF,EAAE,MAGLoH,IAClBtE,EAAKa,KAAKjD,EAAGC,GACbgH,EAAQjH,EACRkH,EAAQjH,UAGVmC,EAAKa,KAAK+E,WAAWrD,EAAO5E,IAAKiI,WAAWrD,EAAS,EAAF5E,KA5CpD,SAASkI,aAAatD,EAAQuD,EAAOH,EAAMF,EAAWM,OAMpDvC,EAAOtG,EAAGK,EAvBYK,EAAGC,EAAGkB,EAAIC,EAAIiE,EAAIC,EAGxC8C,EAFG3B,EACHC,EAgBG2B,EAAYR,EACfS,EAAS3D,EAAOuD,GAChBK,EAAS5D,EAAOuD,EAAM,GACtB7H,EAAQsE,EAAOoD,GACfzH,EAAQqE,EAAOoD,EAAK,OAEhBzI,EAAI4I,EAAQ,EAAG5I,EAAIyI,EAAMzI,GAAK,EAxBZU,EAyBH2E,EAAOrF,GAzBDW,EAyBK0E,EAAOrF,EAAE,GAtBvC8I,OAAAA,EADA1B,GAFwCpB,EAyB0BhF,IAzBlCc,EAyBmBmH,KAxBhD9B,GADiCpB,EAyBuBhF,IAzB/Bc,EAyBemH,KArBlC5B,KAED,GADR0B,IAAMpI,EAAImB,GAAMsF,GAAMxG,EAAImB,GAAMsF,IAAOD,EAAKA,EAAKC,EAAKA,KAErDvF,EAAKkE,EACLjE,EAAKkE,GACS,EAAJ8C,IACVjH,GAAMsF,EAAK2B,EACXhH,GAAMsF,EAAK0B,IAeJC,GADR1I,EAXMpC,SAACyC,EAAImB,EAAO,YAAKlB,EAAImB,EAAO,MAajCwE,EAAQtG,EACR+I,EAAY1I,GAGEkI,EAAZQ,IACiB,EAAhBzC,EAAQsC,GACXD,aAAatD,EAAQuD,EAAOtC,EAAOiC,EAAWM,GAE/CA,EAAWlF,KAAK0B,EAAOiB,GAAQjB,EAAOiB,EAAM,IACzB,EAAfmC,EAAOnC,GACVqC,aAAatD,EAAQiB,EAAOmC,EAAMF,EAAWM,IA2B/CF,CAAa7F,EAAM,EAFnB2F,EAAO3F,EAAK7C,OAAS,EAEOsI,EAD5BC,EAAS,CAAC1F,EAAK,GAAIA,EAAK,KAExB0F,EAAO7E,KAAKb,EAAK2F,GAAO3F,EAAU,EAAL2F,IACtBD,EAGR,SAASU,2BAA2BC,EAAYC,EAAIC,EAAIC,EAAOC,EAAKC,EAAQC,EAAIC,EAAI7H,EAAIC,EAAIiE,EAAIC,EAAIC,EAAIC,OAIhG7F,EAAG8G,EAAIC,EAAIuC,EAHdC,GAAOL,EAAMD,GAASE,EACzBK,EAAO,EACPf,EAAIQ,MAELzK,EAAgBe,EACTkJ,GAAKS,IAMXlJ,GAFA8G,GAHAwC,EAAM,EAAIb,GACAa,EAAMA,EAAMF,EAAK,EAAIE,EAAMA,EAAMb,EAAIjH,EAAK,EAAI8H,EAAMb,EAAIA,EAAI/C,EAAK+C,EAAIA,EAAIA,EAAI7C,EAE9EmD,GAEAjC,GADTC,EAFIuC,EAAMA,EAAMA,EAAMD,EAAK,EAAIC,EAAMA,EAAMb,EAAIhH,EAAK,EAAI6H,EAAMb,EAAIA,EAAI9C,EAAK8C,EAAIA,EAAIA,EAAI5C,EAE9EmD,GACUjC,GACXvI,IACPA,EAAgBwB,EAChBwJ,EAAOf,GAERA,GAAKc,SAEe,EAAbT,EAAkBD,2BAA2BC,EAAa,EAAGC,EAAIC,EAAIpL,KAAK6L,IAAID,EAAOD,EAAK,GAAI3L,KAAK8L,IAAIF,EAAOD,EAAK,GAAIJ,EAAQC,EAAIC,EAAI7H,EAAIC,EAAIiE,EAAIC,EAAIC,EAAIC,GAAM2D,EChiC/J,SAAVG,EAAUC,OACLC,EAAMD,EAAQE,eAAiBF,IAC7BG,KAAkBH,EAAQI,QAAU,gBAAiBJ,EAAQI,QAElEC,GADAF,EAAiB,eACuB,eAElCF,EAAIK,aAAeL,EAAMA,EAAIK,iBACpCC,EAAOC,OACPC,EAAkB,IAAIC,EAClBT,EAAK,CAERU,GADAC,EAAOX,GACWY,gBAClBC,EAAQb,EAAIc,SAER9C,EAAKgC,EAAIe,cAAc,OAC1B5D,EAAK6C,EAAIe,cAAc,OACxBF,EAAMG,YAAYhD,GAClBA,EAAGgD,YAAY7D,GACfa,EAAGmC,MAAMc,SAAW,SACpBjD,EAAGmC,MAAMD,GAAkB,uBAC3BgB,EAAiB/D,EAAGgE,eAAiBnD,EACrC6C,EAAMO,YAAYpD,UAEZgC,EAMI,SAAZqB,EAAYtB,UAAWA,EAAQuB,kBAA6D,SAAxCvB,EAAQwB,QAAU,IAAIC,cAA0BzB,EAAU,MAU7F,SAAjB0B,EAAkB1B,EAASjK,MACtBiK,EAAQM,aAAeM,GAAQb,EAAQC,IAAW,KACjD2B,EAAML,EAAUtB,GACnB4B,EAAKD,EAAOA,EAAIE,aAAa,UAAY,6BAAgC,+BACzEC,EAAOH,EAAO5L,EAAI,OAAS,IAAO,MAClCU,EAAU,IAANV,EAAU,EAAI,IAClBW,EAAU,IAANX,EAAU,IAAM,EACpBgM,EAAM,uDACNC,EAAIpB,EAAKqB,gBAAkBrB,EAAKqB,gBAAgBL,EAAGjH,QAAQ,SAAU,QAASmH,GAAQlB,EAAKI,cAAcc,UACtG/L,IACE4L,GAUHO,EADIA,GACYR,EAAe1B,GAEhCgC,EAAEG,aAAa,QAAS,KACxBH,EAAEG,aAAa,SAAU,KACzBH,EAAEG,aAAa,YAAa,aAAe1L,EAAI,IAAMC,EAAI,KACzDwL,EAAcjB,YAAYe,KAdrBI,KACJA,EAAgBV,EAAe1B,IACjBI,MAAMiC,QAAUN,GAE/BC,EAAE5B,MAAMiC,QAAUN,EAAM,gCAAkCrL,EAAI,WAAaD,EAAI,KAC/E2L,EAAcnB,YAAYe,KAYrBA,OAEF,4BAUU,SAAjBM,EAAkBtC,EAASuC,OAIzBC,EAAW3H,EAAG3E,EAAGO,EAAGC,EAHjBiL,EAAML,EAAUtB,GACnByC,EAAYzC,IAAY2B,EACxBe,EAAWf,EAAMgB,EAAYC,KAE1B5C,IAAYO,SACRP,KAEH0C,EAAS1M,QACb0M,EAAShJ,KAAKgI,EAAe1B,EAAS,GAAI0B,EAAe1B,EAAS,GAAI0B,EAAe1B,EAAS,IAE/FwC,EAAYb,EAAMO,EAAgBE,EAC9BT,EACHzL,EAAIuM,EAAY,CAAChM,EAAE,EAAGC,EAAE,GAAKsJ,EAAQ6C,UAKpCnM,GAJDmE,EAAImF,EAAQ8C,UAAY9C,EAAQ8C,UAAUC,QAAU,IAC9CC,eAELvM,GADAoE,EAAsB,EAAlBA,EAAEmI,cAxBM,SAAfC,aAAepI,WACV1E,EAAI,IAAIuK,EACX3K,EAAI,EACEA,EAAI8E,EAAEmI,cAAejN,IAC3BI,EAAE+M,SAASrI,EAAEsI,QAAQpN,GAAGqN,eAElBjN,EAkBqB8M,CAAapI,GAAKA,EAAEsI,QAAQ,GAAGC,QACnDtN,EAAII,EAAEO,EAAIoE,EAAE1E,EAAID,EAAEQ,EACpBmE,EAAE3E,EAAIA,EAAEO,EAAIoE,EAAEzE,EAAIF,EAAEQ,IAExBmE,EAAI4F,EACJhK,EAAIP,EAAEO,EACFP,EAAEQ,GAEH6L,GAAmD,MAAlCvC,EAAQwB,QAAQC,gBACpChL,EAAIC,EAAI,GAET8L,EAAUL,aAAa,YAAa,UAAYtH,EAAE/E,EAAI,IAAM+E,EAAE3E,EAAI,IAAM2E,EAAE1E,EAAI,IAAM0E,EAAEzE,EAAI,KAAOyE,EAAEmH,EAAIvL,GAAK,KAAOoE,EAAEwI,EAAI3M,GAAK,MAC7H+L,EAAYd,EAAM3B,EAAQM,YAAYW,YAAYuB,OAC7C,IACN/L,EAAIC,EAAI,EACJyK,MACHtG,EAAImF,EAAQoB,aACZlL,EAAI8J,GACS9J,EAANA,GAAUA,EAAEoK,aAAepK,IAAM2E,GAAK3E,EAAEoK,YACe,GAAxDC,EAAK+C,iBAAiBpN,GAAGiK,GAAkB,IAAInK,SACnDS,EAAIP,EAAEqN,WACN7M,EAAIR,EAAEsN,UACNtN,EAAI,IAIPA,EAAIsM,EAAUpC,OACZqD,IAAOzD,EAAQwD,UAAY9M,EAAK,KAClCR,EAAEwN,KAAQ1D,EAAQuD,WAAa9M,EAAK,KACpCoE,EAAI0F,EAAK+C,iBAAiBtD,GAC1B9J,EAAEiK,GAAkBtF,EAAEsF,GACtBjK,EAAEmK,GAAwBxF,EAAEwF,GAC5BnK,EAAEyN,OAAS9I,EAAE8I,OACbzN,EAAE0N,gBAAkB/I,EAAE+I,gBACtB1N,EAAE2N,eAAiBhJ,EAAEgJ,eACrB3N,EAAE4N,gBAAkBjJ,EAAEiJ,gBACtB5N,EAAE6N,eAAiBlJ,EAAEkJ,eACrB7N,EAAEgL,SAA0B,UAAfrG,EAAEqG,SAAuB,QAAU,WAChDlB,EAAQM,WAAWW,YAAYuB,UAEzBA,EAEK,SAAbwB,EAAcnJ,EAAG/E,EAAGI,EAAGC,EAAGC,EAAG4L,EAAGqB,UAC/BxI,EAAE/E,EAAIA,EACN+E,EAAE3E,EAAIA,EACN2E,EAAE1E,EAAIA,EACN0E,EAAEzE,EAAIA,EACNyE,EAAEmH,EAAIA,EACNnH,EAAEwI,EAAIA,EACCxI,EApJT,IAAI+F,EAAML,EAAMI,EAAaG,EAAOsB,EAAeF,EAAezB,EAGjEU,IAFAhB,EAAiB,YACjBE,EAAuBF,EAAiB,SA2BxCwC,EAAY,GACZC,EAAY,GAyHAlC,0BAKZuD,QAAA,uBACMnO,EAAoBoO,KAApBpO,EAAGI,EAAiBgO,KAAjBhO,EAAGC,EAAc+N,KAAd/N,EAAGC,EAAW8N,KAAX9N,EAAG4L,EAAQkC,KAARlC,EAAGqB,EAAKa,KAALb,EACnBc,EAAerO,EAAIM,EAAIF,EAAIC,SACrB6N,EACNE,KACA9N,EAAI+N,GACHjO,EAAIiO,GACJhO,EAAIgO,EACLrO,EAAIqO,GACHhO,EAAIkN,EAAIjN,EAAI4L,GAAKmC,IAChBrO,EAAIuN,EAAInN,EAAI8L,GAAKmC,MAIrBjB,SAAA,kBAASE,OACHtN,EAAoBoO,KAApBpO,EAAGI,EAAiBgO,KAAjBhO,EAAGC,EAAc+N,KAAd/N,EAAGC,EAAW8N,KAAX9N,EAAG4L,EAAQkC,KAARlC,EAAGqB,EAAKa,KAALb,EACnBe,EAAKhB,EAAOtN,EACZuO,EAAKjB,EAAOjN,EACZmO,EAAKlB,EAAOlN,EACZkH,EAAKgG,EAAOhN,EACZmO,EAAKnB,EAAOpB,EACZwC,EAAKpB,EAAOC,SACNW,EAAWE,KACjBE,EAAKtO,EAAIwO,EAAKnO,EACdiO,EAAKlO,EAAIoO,EAAKlO,EACdiO,EAAKvO,EAAIsH,EAAKjH,EACdkO,EAAKnO,EAAIkH,EAAKhH,EACd4L,EAAIuC,EAAKzO,EAAI0O,EAAKrO,EAClBkN,EAAIkB,EAAKrO,EAAIsO,EAAKpO,MAGpBqO,MAAA,wBACQ,IAAI/D,SAASwD,KAAKpO,EAAGoO,KAAKhO,EAAGgO,KAAK/N,EAAG+N,KAAK9N,EAAG8N,KAAKlC,EAAGkC,KAAKb,MAGlEqB,OAAA,gBAAOtB,OACDtN,EAAoBoO,KAApBpO,EAAGI,EAAiBgO,KAAjBhO,EAAGC,EAAc+N,KAAd/N,EAAGC,EAAW8N,KAAX9N,EAAG4L,EAAQkC,KAARlC,EAAGqB,EAAKa,KAALb,SACZvN,IAAMsN,EAAOtN,GAAKI,IAAMkN,EAAOlN,GAAKC,IAAMiN,EAAOjN,GAAKC,IAAMgN,EAAOhN,GAAK4L,IAAMoB,EAAOpB,GAAKqB,IAAMD,EAAOC,KAGhHsB,MAAA,eAAMC,EAAOC,YAAAA,IAAAA,EAAU,QACjBpO,EAAQmO,EAARnO,EAAGC,EAAKkO,EAALlO,EACNZ,EAAoBoO,KAApBpO,EAAGI,EAAiBgO,KAAjBhO,EAAGC,EAAc+N,KAAd/N,EAAGC,EAAW8N,KAAX9N,EAAG4L,EAAQkC,KAARlC,EAAGqB,EAAKa,KAALb,SACjBwB,EAAUpO,EAAKA,EAAIX,EAAIY,EAAIP,EAAI6L,GAAM,EACrC6C,EAAUnO,EAAKD,EAAIP,EAAIQ,EAAIN,EAAIiN,GAAM,EAC9BwB,+BAjDI/O,EAAKI,EAAKC,EAAKC,EAAK4L,EAAKqB,YAAzBvN,IAAAA,EAAE,YAAGI,IAAAA,EAAE,YAAGC,IAAAA,EAAE,YAAGC,IAAAA,EAAE,YAAG4L,IAAAA,EAAE,YAAGqB,IAAAA,EAAE,GACtCW,EAAWE,KAAMpO,EAAGI,EAAGC,EAAGC,EAAG4L,EAAGqB,GA4D3B,SAASyB,gBAAgB9E,EAASiE,EAAS1B,OAC5CvC,IAAYA,EAAQM,aAAeM,GAAQb,EAAQC,IAAUa,kBAAoBb,SAC9E,IAAIU,MAGXqE,EADSzD,EAAUtB,GACL2C,EAAYC,EAC1BJ,EAAYF,EAAetC,EAASuC,GACpCyC,EAAKD,EAAM,GAAGE,wBACdZ,EAAKU,EAAM,GAAGE,wBACdC,EAAKH,EAAM,GAAGE,wBACdE,EAAS3C,EAAUlC,WACnB8E,EA9LU,SAAXC,SAAWrF,SACsC,UAA5CO,EAAK+C,iBAAiBtD,GAASkB,YAGnClB,EAAUA,EAAQM,aACkB,IAArBN,EAAQsF,SACfD,SAASrF,WAwLPqF,CAASrF,GACnBnF,EAAI,IAAI6F,GACN2D,EAAGX,KAAOsB,EAAGtB,MAAQ,KACrBW,EAAGZ,IAAMuB,EAAGvB,KAAO,KACnByB,EAAGxB,KAAOsB,EAAGtB,MAAQ,KACrBwB,EAAGzB,IAAMuB,EAAGvB,KAAO,IACpBuB,EAAGtB,MAAQ0B,EAAU,EAtMH,SAApBG,2BAA0BhF,EAAKiF,aAAe5E,EAAK6E,YAAc9E,EAAY8E,YAAc3E,EAAM2E,YAAc,EAsMpFF,IACzBP,EAAGvB,KAAO2B,EAAU,EAxMH,SAAnBM,0BAAyBnF,EAAKoF,aAAgB/E,EAAKgF,WAAajF,EAAYiF,WAAa9E,EAAM8E,WAAa,EAwMlFF,YAE1BP,EAAO9D,YAAYmB,GACZyB,EAAUpJ,EAAEoJ,UAAYpJ,EC/NlB,SAAbgL,WAAmB,EAUD,SAAlBC,GAAkBC,GACbA,EAAMC,iBACTD,EAAMC,iBACFD,EAAME,qBACTF,EAAME,uBAIQ,SAAjBC,GAAiBpE,UAAQlB,EAAKqB,gBAAkBrB,EAAKqB,gBAAgB,+BAAgCH,GAAQlB,EAAKI,cAAcc,GACnH,SAAbqE,GAAcrE,EAAMU,EAAW4D,OAG7BC,EAFGrG,EAAUY,EAAKqB,gBAAgB,6BAA8BH,GAChEwE,EAAM,sBAIFD,KAFLD,EAAaA,GAAc,UACRA,SAAoB,cAC7BA,OACgBG,IAArBvG,EAAQI,MAAMiG,GACjBrG,EAAQI,MAAMiG,GAAKD,EAAWC,GAE9BrG,EAAQwG,eAAe,KAAMH,EAAE1L,QAAQ2L,EAAK,SAAS7E,cAAe2E,EAAWC,WAGjF7D,EAAUvB,YAAYjB,GACfA,EAGiB,SAAzByG,GAAyBC,UAAYA,EAAO5D,WAAa4D,EAAO5D,UAAUC,QAAQ4D,eAAkBC,GAAuBxD,OAqBlH,SAAThF,GAASrK,YAAqB,IAARA,GAAgBA,EAAQ,GAAK,GAAK,KAAO,IAW9C,SAAjB8S,GAA0B7E,OACpBA,EAAE0E,OAAOI,eAAiBC,IAA8C,IAAhCC,IAAaC,GAAwB,SAC7ElR,EAAImR,GAAelR,QACT,IAALD,GACRmR,GAAenR,GAAGoR,WAEnBD,GAAelR,OAAS,GAKX,SAAfoR,GAAgBpH,EAAS8B,EAAMuF,EAAMC,MAChCtH,EAAQuH,iBAAkB,KACzBC,EAAYC,EAAkB3F,GAClCwF,EAAUA,GAAW,CAACI,SAAQ,GAC9B1H,EAAQuH,iBAAiBC,GAAa1F,EAAMuF,EAAMC,GAC9CE,GAAa1F,IAAS0F,GAAwC,YAA3BA,EAAU9L,OAAO,EAAG,IAC1DsE,EAAQuH,iBAAiBzF,EAAMuF,EAAMC,QAE5BtH,EAAQ2H,aAClB3H,EAAQ2H,YAAY,KAAO7F,EAAMuF,GAGjB,SAAlBO,GAAmB5H,EAAS8B,EAAMuF,MAC7BrH,EAAQ6H,oBAAqB,KAC5BL,EAAYC,EAAkB3F,GAClC9B,EAAQ6H,oBAAoBL,GAAa1F,EAAMuF,GAC3CG,GAAa1F,IAAS0F,GAAwC,YAA3BA,EAAU9L,OAAO,EAAG,IAC1DsE,EAAQ6H,oBAAoB/F,EAAMuF,QAEzBrH,EAAQ8H,aAClB9H,EAAQ8H,YAAY,KAAOhG,EAAMuF,GAYR,SAA3BU,GAA2B/F,GAC1BgG,EAAoBhG,EAAEiG,SAAWC,WAAalG,EAAEiG,QAAQjS,OACxD4R,GAAgB5F,EAAE0E,OAAQ,WAAYqB,IAEf,SAAxBI,GAAwBnG,GACvBgG,EAAoBhG,EAAEiG,SAAWC,WAAalG,EAAEiG,QAAQjS,OACxDoR,GAAapF,EAAE0E,OAAQ,WAAYqB,IAE5B,SAARK,GAASf,EAAMgB,UAAU,SAAArG,UAAKqF,EAAKiB,KAAKD,EAAOrG,IACnC,SAAZuG,GAAazG,EAAM0G,EAAMC,OACpBC,EAAWF,EAAKG,KAAK7G,UACrB4G,GACHA,EAASJ,KAAKE,EAAKG,KAAKC,eAAiBJ,EAAMC,GAASD,GAElDA,EAGU,SAAlBK,KACCC,EAAa1I,MAAM2I,QAAU,QAC7BD,EAAaE,SACbF,EAAa1I,MAAM2I,QAAU,OAiGnB,SAAXE,GAAoBjH,OAGlBkH,EAAkBrQ,EAFf2P,EAAOtE,KACViF,EAAMrE,gBAAgB0D,EAAK9B,OAAOpG,YAAY,QAE1C8I,QAAUlF,KAAKwC,OAAO5D,UAAUC,QAAQI,QAAQ,GAAGC,YACnDiG,KAAOF,EACR1B,EAAkBzF,EAAEF,OACvBoH,GAAiD,IAA7BlH,EAAEF,KAAKwH,QAAQ,SAAoBtH,EAAEuH,eAAiBvH,EAAE0E,OAAU9F,EACtFwG,GAAa8B,EAAkB,WAAYV,EAAKgB,YAChDpC,GAAa8B,EAAkB,YAAaV,EAAKiB,SACjDrC,GAAa8B,EAAkB,cAAeV,EAAKgB,YACnDpC,GAAaxG,EAAM,aAAcuH,IACjCf,GAAa7G,EAAM,mBAAoBuF,MAEvCoD,EAAmB,KACnB9B,GAAaxG,EAAM,YAAa4H,EAAKiB,UAEjCC,GACJtC,GAAaxG,EAAM,UAAW4H,EAAKgB,YAEpC1D,GAAgB9D,GAChB6G,KACI7G,EAAE2H,gBACL3H,EAAIwG,EAAKoB,MAAQ5H,EAAE2H,eAAe,GAClCnB,EAAKqB,QAAU7H,EAAE8H,YACP9H,EAAE+H,UACZvB,EAAKqB,QAAU7H,EAAE+H,UAEjBvB,EAAKoB,MAAQpB,EAAKqB,QAAU,KAE7BrB,EAAKwB,eAAiBxB,EAAKyB,SAAWjI,EAAEkI,MACxC1B,EAAK2B,eAAiB3B,EAAK4B,SAAWpI,EAAEqI,MACxC7B,EAAK8B,eAAiB9B,EAAKY,QAAQpH,EACnCwG,EAAK+B,eAAiB/B,EAAKY,QAAQ/F,EAEf,IAAhBa,KAAKmF,KAAKvT,GAA2B,IAAhBoO,KAAKmF,KAAKnT,GAA2B,IAAhBgO,KAAKmF,KAAKlT,GAA2B,IAAhB+N,KAAKmF,KAAKjT,OACvEiT,KAAO,MAEZxQ,EAAO2P,EAAK2B,eAAiBjG,KAAKmF,KAAKvT,EAAI0S,EAAKwB,eAAiB9F,KAAKmF,KAAKlT,EAAI+N,KAAKmF,KAAKrH,EACzFwG,EAAKwB,eAAiBxB,EAAK2B,eAAiBjG,KAAKmF,KAAKnT,EAAIsS,EAAKwB,eAAiB9F,KAAKmF,KAAKjT,EAAI8N,KAAKmF,KAAKhG,EACxGmF,EAAK2B,eAAiBtR,GAGvB2P,EAAKgC,UAAYzD,IAAa,EAC9ByB,EAAKU,iBAAmBA,EACpBV,EAAKG,KAAK8B,SACbjC,EAAKG,KAAK8B,QAAQnC,KAAKE,EAAKG,KAAKC,eAAiBJ,EAAMA,EAAKkC,cAGrD,SAAVjB,GAAmBzH,OAGjBiG,EAASlS,EAFNyS,EAAOtE,KACVyG,EAAgB3I,KAEZwG,EAAKoC,WAAY5C,GAAqBQ,EAAKgC,WAAcxI,MAI9DiG,GADAO,EAAKkC,aAAe1I,GACR2H,oBAEX3H,EAAIiG,EAAQ,MACFO,EAAKoB,OAAS5H,EAAE8H,aAAetB,EAAKqB,QAAS,KACtD9T,EAAIkS,EAAQjS,QACE,IAALD,IAAWiM,EAAIiG,EAAQlS,IAAI+T,aAAetB,EAAKqB,aACpD9T,EAAI,eAIH,GAAIiM,EAAE+H,WAAavB,EAAKqB,SAAW7H,EAAE+H,YAAcvB,EAAKqB,eAG/D/D,GAAgB6E,GAChBnC,EAAKqC,mBAAmB7I,EAAEqI,MAAOrI,EAAEkI,OAC/B1B,EAAKG,KAAKmC,QACbtC,EAAKG,KAAKmC,OAAOxC,KAAKE,EAAKG,KAAKC,eAAiBJ,EAAMA,EAAKkC,eAGjD,SAAblB,GAAsBxH,EAAG+I,OACpBvC,EAAOtE,QACNsE,EAAKoC,UAAapC,EAAKgC,aAAcxI,GAAqB,MAAhBwG,EAAKqB,SAAoBkB,KAAW/I,EAAE+H,WAAa/H,EAAE+H,YAAcvB,EAAKqB,SAAa7H,EAAE2H,iBA5MzH,SAAdqB,YAAeC,EAAMC,WAChBnV,EAAIkV,EAAKjV,QACC,IAALD,MACJkV,EAAKlV,GAAG+T,aAAeoB,SACnB,SAGF,EAqMkJF,CAAYhJ,EAAE2H,eAAgBnB,EAAKqB,aAjT/K,SAAdsB,cAAoBlE,GAAmBD,IAoTtCmE,GACA3C,EAAKgC,UAAYzD,IAAa,MAI7BkB,EAASlS,EAHN4U,EAAgB3I,EACnBoJ,EAAc5C,EAAK6C,WACnBnC,EAAmBV,EAAKU,oBAErBA,GACHtB,GAAgBsB,EAAkB,WAAYV,EAAKgB,YACnD5B,GAAgBsB,EAAkB,YAAaV,EAAKiB,SACpD7B,GAAgBsB,EAAkB,cAAeV,EAAKgB,YACtD5B,GAAgBhH,EAAM,aAAcuH,KAEpCP,GAAgBhH,EAAM,YAAa4H,EAAKiB,SAEpCC,IACJ9B,GAAgBhH,EAAM,UAAW4H,EAAKgB,YAClCxH,GAAKA,EAAE0E,QACVkB,GAAgB5F,EAAE0E,OAAQ,UAAW8B,EAAKgB,aAGxC4B,EACH5C,EAAK6C,YAAa,EACR7C,EAAKG,KAAK2C,SACpB9C,EAAKG,KAAK2C,QAAQhD,KAAKE,EAAKG,KAAKC,eAAiBJ,EAAMmC,GAErD3I,EAAG,KACNiG,EAAUjG,EAAE2H,kBAEX3H,EAAIiG,EAAQ,MACFO,EAAKoB,OAAS5H,EAAE8H,aAAetB,EAAKqB,QAAS,KACtD9T,EAAIkS,EAAQjS,QACE,IAALD,IAAWiM,EAAIiG,EAAQlS,IAAI+T,aAAetB,EAAKqB,aACpD9T,EAAI,SAKVyS,EAAKkC,aAAeC,EACpBnC,EAAK4B,SAAWpI,EAAEqI,MAClB7B,EAAKyB,SAAWjI,EAAEkI,aAEfS,IAAkBS,GAAe5C,EAAKG,KAAK4C,cAC9C/C,EAAKG,KAAK4C,cAAcjD,KAAKE,EAAMA,EAAKkC,eAGpCC,GACH7E,GAAgB6E,GAEbnC,EAAKG,KAAK6C,WACbhD,EAAKG,KAAK6C,UAAUlD,KAAKE,EAAKG,KAAKC,eAAiBJ,EAAMA,EAAKkC,eAG7DU,GAAe5C,EAAKG,KAAK8C,WAC5BjD,EAAKG,KAAK8C,UAAUnD,KAAKE,EAAKG,KAAKC,eAAiBJ,EAAMA,EAAKkC,eAEzD,GAEgB,SAAxBgB,GAAyB7V,EAASc,EAAGgV,EAAQhD,OAI3C5S,EAFAS,EADaX,EAAQc,GACTX,OACZF,EAAI,OAEAC,EAAI,EAAGA,EAAIS,EAAGT,GAAG,EACrBD,EAAE4D,KAAK,IAAIkS,GAAOD,EAAQ9V,EAASc,EAAGZ,EAAG4S,WAEnC7S,EAEK,SAAb+V,GAActV,EAASR,EAAG+V,OACrBrV,EAAIF,EAAQuV,GAAMvV,EAAQR,GAC7BW,EAAIH,EAAQuV,EAAG,GAAKvV,EAAQR,EAAE,UACxB/B,KAAKwB,KAAKiB,EAAIA,EAAIC,EAAIA,OAlY9BkK,EAAM8I,EAAkBnJ,EAAMO,EAS9BiL,EAAOC,EAAMC,EAAQC,EACrBC,EA0EAC,EAAU3E,EAkDVqB,EAMAuD,IA7IGvX,EAAc,0CAEjBwX,EAAkB,UAElBvX,EAAWf,KAAKgB,GAAK,IACrBgS,EAAWuF,KAAKC,KAAQ,kBAAM,IAAID,MAAOE,WACzCxF,GAAmB,EACnBF,GAAa,EAKb2F,EAAe,GACfC,GAAW,GACXC,GAAS,GACTC,GAAQ,GACRC,GAAS,IACT5F,GAAiB,GA0BjBN,EAAwB,CAACxD,OAAO,IAAI1C,GA2CpCsH,EAAmB,EAiTd+E,+BAuBLlC,mBAAA,4BAAmBT,EAAUH,OAE3B+C,EAASC,EAASxW,EAAGC,EAAGmC,OACpBuR,SAAWA,OACXH,SAAWA,EACZ/F,KAAKmF,OACRxQ,EAAOuR,EAAWlG,KAAKmF,KAAKvT,EAAImU,EAAW/F,KAAKmF,KAAKlT,EAAI+N,KAAKmF,KAAKrH,EACnEiI,EAAWG,EAAWlG,KAAKmF,KAAKnT,EAAI+T,EAAW/F,KAAKmF,KAAKjT,EAAI8N,KAAKmF,KAAKhG,EACvE+G,EAAWvR,IAEZoU,EAAWhD,EAAW/F,KAAK8F,gBAraT,IAAA,EAuagBiD,IACjCA,EAAU,IAFXD,EAAW5C,EAAWlG,KAAKiG,gBAtaT,IAAA,EA0agB6C,IACjCA,EAAU,GAEXvW,GAjBU,KAiBHyN,KAAKoG,eAAiB0C,GAAkB,GAjBrC,IAkBVtW,GAlBU,KAkBHwN,KAAKqG,eAAiB0C,GAAkB,GAlBrC,IAmBN/I,KAAKgJ,OAASjB,IACjBW,GAAOnW,EAAIA,EACXmW,GAAOlW,EAAIA,OACNwW,KAAK5E,KAAKpE,KAAM0I,IACrBnW,EAAImW,GAAOnW,EACXC,EAAIkW,GAAOlW,GAERwN,KAAKzN,IAAMA,GAAKyN,KAAKxN,IAAMA,SACzB0S,QAAQ/F,EAAIa,KAAKxN,EAAIA,OACrB0S,QAAQpH,EAAIkC,KAAKzN,EAAIA,GACrByN,KAAKmH,YAAcnH,KAAKsG,iBACvBa,YAAa,EAClB9C,GAAU,cAAerE,KAAMA,KAAKwG,mBAKvCyC,QAAA,iBAAQA,UACFC,UAAUpX,cAIV4U,SAAWuC,IAEVzD,GACJtC,GAAalD,KAAKwC,OAAQ,YAAaxC,KAAK+E,UAE7C7B,GAAalD,KAAKwC,OAAQ,aAAcxC,KAAK+E,UAC7C7B,GAAalD,KAAKwC,OAAQ,QAASxC,KAAKmJ,UAAU,KAElDC,EAAWpJ,KAAKmH,WAChBzD,GAAgB1D,KAAKwC,OAAQ,YAAaxC,KAAK+E,UAC/CrB,GAAgB1D,KAAKwC,OAAQ,aAAcxC,KAAK+E,UAChDrB,GAAgBrH,EAAM,mBAAoBuF,IAC1C8B,GAAgB1D,KAAKwC,OAAQ,QAASxC,KAAKmJ,UACvCnJ,KAAKgF,mBACRtB,GAAgB1D,KAAKgF,iBAAkB,cAAehF,KAAKsF,YAC3D5B,GAAgB1D,KAAKgF,iBAAkB,WAAYhF,KAAKsF,YACxD5B,GAAgB1D,KAAKgF,iBAAkB,YAAahF,KAAKuF,UAE1D7B,GAAgBhH,EAAM,UAAWsD,KAAKsF,YACtC5B,GAAgBhH,EAAM,YAAasD,KAAKuF,cACnC4B,WAAanH,KAAKsG,WAAY,EAC/B8C,GACH/E,GAAU,YAAarE,KAAMA,KAAKwG,eAG7BxG,MA5BCA,KAAK0G,aAET0C,KA6BLC,QAAA,iBAAQvL,QACFwH,WAAWxH,wCA5FL0E,EAAQiC,QACdjC,OAA6B,iBAAZA,EAAwB9F,EAAK4M,iBAAiB9G,GAAQ,GAAKA,OAC5EiC,KAAOA,GAAQ,QACfM,SAAWb,GAAMa,GAAU/E,WAC3BuF,QAAUrB,GAAMqB,GAASvF,WACzBsF,WAAapB,GAAMoB,GAAYtF,WAC/BwC,OAAOvE,aAAa,aAAc+B,KAAKwC,OAAO7E,aAAa,cAAgB,IAAM,wBACjFuH,QAAU3C,GAAuBvC,KAAKwC,aACtCjQ,EAAIyN,KAAKkF,QAAQpH,OACjBtL,EAAIwN,KAAKkF,QAAQ/F,OACjB6J,KAAOvE,EAAKuE,KACZjU,MAAM0P,EAAK8E,OAAUxU,MAAM0P,EAAK+E,WAK/BC,QAAU,QAJVA,QAAU,OACVF,MAAQ9E,EAAK8E,UACbC,MAAQ/E,EAAK+E,WAIdP,SAAQ,UAmFTvB,0BAWLnB,QAAA,mBACClC,GAAU,UAAWrE,UAGtBoH,QAAA,mBACC/C,GAAU,UAAWrE,UAGtB4G,OAAA,sBACK8C,EAAI1J,KAAK3N,aACRoS,KAAKmC,OAAOxC,KAAKpE,KAAKyE,KAAKC,eAAiB1E,KAAMA,KAAMA,KAAK2J,WAAWpX,EAAImX,EAAE1J,KAAKnO,GAAImO,KAAK2J,WAAWnX,EAAIkX,EAAE1J,KAAKnO,EAAE,QAG1H0V,UAAA,qBACClD,GAAU,YAAarE,UAGxBsH,UAAA,qBACCjD,GAAU,YAAarE,UAGxB4J,OAAA,gBAAOjY,EAASc,EAAGZ,GACdF,SACEA,QAAUA,GAEZuX,UAAUpX,QAAU,GACvBW,EAAIuN,KAAKvN,EACTZ,EAAImO,KAAKnO,SAEJY,EAAIA,OACJZ,EAAIA,OAENgY,EAAa7J,KAAK8J,OACrBzX,EAAU2N,KAAKrO,QAAQc,QACnBJ,QAAUA,OACVyX,OAAUjY,GAAKA,EAAIQ,EAAQP,OAAS,GAAKhC,KAAKsB,IAAItB,KAAK0B,MAAMa,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,GAAIQ,EAAQR,GAAKQ,EAAQR,EAAE,IAAM/B,KAAK0B,MAAMa,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAKQ,EAAQR,KAAO,IAAQ,EAAI,EAC1MmO,KAAK8J,SAAWD,QACd/N,QAAQmC,aAAa,IAAK+B,KAAK8J,OAAS9J,KAAKyH,OAAOsC,cAAgB/J,KAAKyH,OAAOuC,oBAEjFlO,QAAQmC,aAAa,YAAa,aAAe5L,EAAQR,GAAK,IAAMQ,EAAQR,EAAE,GAAK,8BAhD7E4V,EAAQ9V,EAASc,EAAGZ,EAAG4S,QAC7BgD,OAASA,OACT3L,QAAUmG,GAAW,OAAQwF,EAAOwC,WAAY,CAACC,KAAK9B,EAAiB+B,OAAO/B,EAAiBgC,YAAY,EAAGC,aAAa,4BAC3HT,OAAOjY,EAASc,EAAGZ,QACnBiK,QAAQ8G,cAAe,OACvB6B,KAAOA,GAAQ,QACfkF,WAAa,IAAId,GAAa7I,KAAKlE,QAAS,CAAC4I,cAAc1E,KAAM4G,OAAO5G,KAAK4G,OAAQoC,KAAKhJ,KAAKyE,KAAKuE,KAAMzC,QAAQvG,KAAKuG,QAASe,UAAUtH,KAAKsH,UAAWF,QAAQpH,KAAKoH,QAASG,UAAUvH,KAAKuH,mBAiDzL+C,8BAkDZhF,WAAA,oBAAWxH,OACNyM,EAASvK,KAAKwK,eACdD,IACH/B,EAAajW,EAAIgY,EAAOlY,QAAQkY,EAAO1Y,GACvC2W,EAAahW,EAAI+X,EAAOlY,QAAQkY,EAAO1Y,EAAE,IAE1C6R,GAAgBrH,EAAM,mBAAoBuF,IAC1CyC,GAAU,YAAarE,KAAMlC,OAG9B2M,KAAA,oBAMEnY,EAAGT,EALA6Y,EAAW1K,KAAKlJ,KAAK6G,aAAa,KACrChM,EAAU8D,gBAAgBiV,GAC1B9L,EAAYoB,KAAKlJ,KAAK6G,aAAa,cAAgB,iBACnDgN,GAAkB3K,KAAK4K,UAAYjZ,EAAQlB,cAAgBuP,KAAK4K,SAASna,aAAekB,EAAQG,SAAWkO,KAAK4K,SAAS9Y,OACzH+Y,EAAa,CAACnG,cAAc1E,KAAMgJ,KAAKhJ,KAAKyE,KAAKqG,WAAYlE,OAAO5G,KAAK+K,cAAexE,QAAQvG,KAAKgL,eAAgB1D,UAAUtH,KAAKsF,WAAY8B,QAAQpH,KAAKiL,eAAgB1D,UAAUvH,KAAKkL,iBAAkB3B,KAAKvJ,KAAKyE,KAAK8E,KAAMC,KAAKxJ,KAAKyE,KAAK+E,SAG/OmB,GAAiB3K,KAAKmL,UAAYnL,KAAKmL,SAASrZ,OAAQ,KACtDD,EAAI,EAAGA,EAAImO,KAAKmL,SAASrZ,OAAQD,SAChCsZ,SAAStZ,GAAGiK,QAAQM,WAAWe,YAAY6C,KAAKmL,SAAStZ,GAAGiK,cAC5DqP,SAAStZ,GAAG8X,WAAWV,SAAQ,QAEhCmC,iBAAiBtZ,OAAS,UAE3B8Y,SAAWjZ,EACZgZ,WACEQ,SAAW3D,GAAsB7V,EAAS,EAAGqO,KAAM6K,GAEhD,GADRvY,EAAIX,EAAQG,YAEND,EAAI,EAAGA,EAAIS,EAAGT,SACbsZ,SAAWnL,KAAKmL,SAASE,OAAO7D,GAAsB7V,EAASE,EAAGmO,KAAM6K,aAI/EhZ,EAAImO,KAAKmL,SAASrZ,QACJ,IAALD,QACHsZ,SAAStZ,GAAG+X,OAAOjY,eAIrBsY,WAAWlN,YAAYiD,KAAKsL,eAC5BrB,WAAWlN,YAAYiD,KAAKuL,eAE5BC,eAAevN,aAAa,IAAKyM,QACjCe,kBAAkBxN,aAAa,IAAKyM,QACpCgB,GAAGzN,aAAa,YA1lBO,SAA7B0N,2BAA6BnJ,WACxB7L,EAAI4L,GAAuBC,GAC9BoJ,EAAQpJ,EAAOnF,iBACRmF,EAASA,EAAOpG,aAAeoG,EAAOnF,kBAAoBuO,GACjEjV,EAAEqI,SAASuD,GAAuBC,UAE5B,UAAY7L,EAAE/E,EAAI,IAAM+E,EAAE3E,EAAI,IAAM2E,EAAE1E,EAAI,IAAM0E,EAAEzE,EAAI,IAAMyE,EAAEmH,EAAI,IAAMnH,EAAEwI,EAAI,IAolBnDwM,CAA2B3L,KAAKlJ,KAAKsF,aAAe,uBACjF6N,WAAWhM,aAAa,YAAaW,QACrC6M,kBAAkBxN,aAAa,YAAaW,QAC5CiN,iBACE7L,SAGR8L,WAAA,uBAzlBc,SAAdC,YAAcC,OAGZna,EAFGoa,EAAkB,GACrBra,EAAIoa,EAAWZ,qBAEXvZ,EAAI,EAAGA,EAAID,EAAEE,OAAQD,IACzBoa,EAAgBpa,GAAKD,EAAEC,GAAGA,EAE3B4W,GAASyD,QAAQ,CAACpV,KAAKkV,EAAY9Z,EAAE8Z,EAAWlV,KAAK6G,aAAa,KAAMiB,UAAUoN,EAAWlV,KAAK6G,aAAa,cAAgB,GAAIsO,gBAAgBA,IAC7H,GAAlBxD,GAAS3W,SACZ2W,GAAS3W,OAAS,IAilBnBia,CAAY/L,UAGbmM,sBAAA,+BAAsBrO,MACoB,WAArCkC,KAAKiK,WAAW/N,MAAMkQ,gBACpBtH,cACC,GAAIgD,GAAShK,GAAKA,EAAEuO,OAAS,KAGlCC,EAAUza,EAAG0Y,EAAQhY,EAAGC,EAAG+Z,EAFxB1B,EAAa,CAACnG,cAAc1E,KAAMgJ,KAAKhJ,KAAKyE,KAAKqG,WAAYlE,OAAO5G,KAAK+K,cAAexE,QAAQvG,KAAKgL,eAAgB1D,UAAUtH,KAAKsF,WAAY8B,QAAQpH,KAAKiL,eAAgB1D,UAAUvH,KAAKkL,iBAAkB3B,KAAKvJ,KAAKyE,KAAK8E,KAAMC,KAAKxJ,KAAKyE,KAAK+E,MACrPvE,EAAMjF,KAAKiK,WAAWuC,eAAezM,cAElCC,KAAK2J,iBACHA,WAAWrE,WAAWxH,GAExBmH,IACH1S,EAAIuL,EAAE2O,QAAUxH,EAAIrT,EAAIkM,EAAE4O,QAAUzH,EAAIhT,EAAIgT,EAAInH,EAChDtL,EAAIsL,EAAE2O,QAAUxH,EAAIjT,EAAI8L,EAAE4O,QAAUzH,EAAI/S,EAAI+S,EAAI9F,GAGjDoN,EFmYI,SAASI,eAAehb,EAASY,EAAGC,EAAG6I,OAG5CxJ,EAAGY,EAAGkI,EAAGtI,EAFNua,EAAU,CAACna,EAAE,EAAGZ,EAAE,EAAG8I,EAAE,GAC1BkS,EAAepb,MAEXgB,EAAI,EAAGA,EAAId,EAAQG,OAAQW,QAC/BJ,EAAUV,EAAQc,GACbZ,EAAI,EAAGA,EAAIQ,EAAQP,OAAQD,GAAG,EAClC8I,EAAII,2BAA2B,EAAGxI,EAAGC,EAAG,EAAG,EAAG6I,GAAU,GAAIhJ,EAAQR,GAAIQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,IACnJnB,EAAfmc,IACHA,EAAenc,EACfkc,EAAQna,EAAIA,EACZma,EAAQ/a,EAAIA,EACZ+a,EAAQjS,EAAIA,UAIRiS,EEnZSD,CAAe3M,KAAK4K,SAAUrY,EAAGC,GFlP3C,SAASsa,iBAAiBza,EAASR,EAAG8I,MACxCA,GAAK,GAAU,GAALA,SACN,MAEJoS,EAAK1a,EAAQR,GAChBmb,EAAK3a,EAAQR,EAAE,GACfob,EAAO5a,EAAQR,EAAE,GACjBqb,EAAO7a,EAAQR,EAAE,GACjBsb,EAAO9a,EAAQR,EAAE,GACjBub,EAAO/a,EAAQR,EAAE,GAGjBwb,EAAMN,GAAME,EAAOF,GAAMpS,EACzB/C,EAAKqV,GAAQE,EAAOF,GAAQtS,EAC5B2S,EAAMN,GAAME,EAAOF,GAAMrS,EACzB9C,EAAKqV,GAAQE,EAAOF,GAAQvS,EAC5BjH,EAAK2Z,GAAOzV,EAAKyV,GAAO1S,EACxBhH,EAAK2Z,GAAOzV,EAAKyV,GAAO3S,EACxB4S,EAAMJ,GARD9a,EAAQR,EAAE,GAQIsb,GAAQxS,EAC3B6S,EAAMJ,GARD/a,EAAQR,EAAE,GAQIub,GAAQzS,SAC5B/C,IAAO2V,EAAM3V,GAAM+C,EACnB9C,IAAO2V,EAAM3V,GAAM8C,EACnBtI,EAAQ+G,OAAOvH,EAAI,EAAG,EACrBqI,EAAOmT,GACPnT,EAAOoT,GACPpT,EAAOxG,GACPwG,EAAOvG,GACPuG,EAAOxG,GAAMkE,EAAKlE,GAAMiH,GACxBT,EAAOvG,GAAMkE,EAAKlE,GAAMgH,GACxBT,EAAOtC,GACPsC,EAAOrC,GACPqC,EAAOqT,GACPrT,EAAOsT,IAEJnb,EAAQjC,SACXiC,EAAQjC,QAAQgJ,OAASvH,EAAI,EAAKQ,EAAQ7B,WAAc,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAEvE,EE8MLsc,CAAiB9M,KAAK4K,SAAS2B,EAAY9Z,GAAI8Z,EAAY1a,EAAG0a,EAAY5R,GAC1E2R,EAAWC,EAAY1a,EAAI,EACtBA,EAAI,EAAGA,EAAImO,KAAKmL,SAASrZ,OAAQD,IACjCmO,KAAKmL,SAAStZ,GAAGA,GAAKya,SACpBnB,SAAStZ,GAAGA,GAAK,GAGxB0Y,EAAS,IAAI7C,GAAO1H,KAAMA,KAAK4K,SAAU2B,EAAY9Z,EAAG6Z,EAAUzB,QAC7DZ,WAAWlN,YAAYiD,KAAKsL,eAC5BrB,WAAWlN,YAAYiD,KAAKuL,UACjChB,EAAOZ,WAAW5E,SAASjH,GAC3BmK,EAAuBsC,OAClBY,SAAS3V,KAAK+U,QACda,iBAAiBtZ,OAAS,OAC1BsZ,iBAAiB5V,KAAK+U,QACtBsB,sBACAjC,cACAkC,aAENnH,KACAzB,GAAa7G,EAAM,mBAAoBuF,IACvCyC,GAAU,UAAWrE,UAGtByN,gBAAA,+BACKlD,EAASvK,KAAKwK,eACjB3Y,EAAI0Y,EAAO1Y,EACX6X,EAAIa,EAAOlY,QACRyV,GAAQhY,KAAKsB,IAAIsY,EAAE7X,GAAK6X,EAAE7X,EAAE,IAAM,GAAK/B,KAAKsB,IAAIsY,EAAE7X,EAAE,GAAK6X,EAAE7X,EAAE,IAAM,QACjEoZ,eAAeV,OAItBmD,gBAAA,+BACKnD,EAASvK,KAAKwK,eACjB3Y,EAAI0Y,EAAO1Y,EACX6X,EAAIa,EAAOlY,QACRyV,GAAQhY,KAAKsB,IAAIsY,EAAE7X,GAAK6X,EAAE7X,EAAE,IAAM,GAAK/B,KAAKsB,IAAIsY,EAAE7X,EAAE,GAAK6X,EAAE7X,EAAE,IAAM,QACjEoZ,eAAeV,OAItBW,iBAAA,4BACCjD,EAAuB,UAClB6D,iBAGN6B,WAAA,6BACwC,EAA/B3N,KAAKoL,iBAAiBtZ,WAG/BgT,OAAA,gBAAO8I,WACD3D,WAAW/N,MAAMkQ,WAAa,eAC9B5B,eAAiB,WACjB1T,KAAK8L,cAAe,KACrBgL,UACC/b,EAAImO,KAAKmL,SAASrZ,QACR,IAALD,QACHuZ,iBAAiBvZ,GAAKmO,KAAKmL,SAAStZ,UAGL,IAAlCmR,GAAeoC,QAAQpF,OAC1BgD,GAAexN,KAAKwK,WAEhB6L,iBACE7L,SAGRiD,SAAA,gCACMgH,WAAW/N,MAAMkQ,WAAa,cAC9BhB,iBAAiBtZ,OAAS,OAC1B0Y,eAAiB,UACjB1T,KAAK8L,cAAe,EACzBI,GAAe5J,OAAO4J,GAAeoC,QAAQpF,MAAO,QAC/C6L,iBACE7L,SAGR6N,YAAA,2BACKjP,EAAYoB,KAAKyL,kBAAkB9N,aAAa,cAAgB,sBAC/DsM,WAAWhM,aAAa,YAAaW,QACrC9H,KAAKmH,aAAa,YAAaW,OAGrCoM,eAAA,wBAAeT,IACiC,IAA3CvK,KAAKoL,iBAAiBhG,QAAQmF,IAC5BxC,SACCqD,iBAAiBtZ,OAAS,QAE3BsZ,iBAAiB5V,KAAK+U,IACjBxC,SACLqD,iBAAiBhS,OAAO4G,KAAKoL,iBAAiBhG,QAAQmF,GAAS,GACpEA,EAAOZ,WAAWN,WAEnBb,EAAajW,EAAIgY,EAAOlY,QAAQkY,EAAO1Y,GACvC2W,EAAahW,EAAI+X,EAAOlY,QAAQkY,EAAO1Y,EAAE,QACpCga,iBACLxH,GAAU,UAAWrE,UAGtB8N,uBAAA,0CAGEvD,EAAQpS,EAAO1F,EAFZsb,EAAU/N,KAAKoL,iBAClBvZ,EAAIkc,EAAQjc,QAEC,IAALD,QACR0Y,EAASwD,EAAQlc,IACViK,QAAQM,WAAWe,YAAYoN,EAAOzO,SAC7CyO,EAAOZ,WAAWV,SAAQ,IAC1B9Q,EAAQoS,EAAO1Y,GAGJsG,EAAQoS,EAAOlY,QAAQP,OAAS,EAC1CyY,EAAOlY,QAAQ+G,OAAOjB,EAAM,EAAG,GAE/BoS,EAAOlY,QAAQ+G,OAAOjB,EAAM,EAAG,GAJ/BoS,EAAOlY,QAAQ+G,OAAOjB,EAAO,GAM9B4V,EAAQ3U,OAAOvH,EAAG,QACbsZ,SAAS/R,OAAO4G,KAAKmL,SAAS/F,QAAQmF,GAAS,GAC/C9X,EAAI,EAAGA,EAAIuN,KAAKmL,SAASrZ,OAAQW,IACjCuN,KAAKmL,SAAS1Y,GAAGZ,GAAKsG,SACpBgT,SAAS1Y,GAAGZ,GAAK,QAIpBga,sBACAjC,cACAkC,aACD9L,KAAKyE,KAAKuJ,qBACRvJ,KAAKuJ,eAAe5J,KAAKpE,KAAKyE,KAAKC,eAAiB1E,UAI3DiL,eAAA,wBAAeV,OAKb0D,EAAQC,EAAQC,EAASC,EAASpd,EAAKE,EAJpCW,EAAI0Y,EAAO1Y,EACdQ,EAAUkY,EAAOlY,QACjBgc,EAAM,IACNC,GAAUzc,GAAKA,GAAKQ,EAAQP,OAAS,EAElCgW,GAAQG,IAAyBsC,GAAUvK,KAAKwK,gBACnDD,EAAOT,QAAUS,EAAOT,OACpBwE,IACH/D,EAAOT,QAAS,GAEjBS,EAAOzO,QAAQmC,aAAa,IAAKsM,EAAOT,OAAS9J,KAAK+J,cAAgB/J,KAAKgK,eACvEO,EAAOT,SAAWwE,GAGrBL,IAFAA,EAASne,KAAK0B,MAAMa,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,GAAIQ,EAAQR,GAAKQ,EAAQR,EAAE,MACxEqc,EAASpe,KAAK0B,MAAMa,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAKQ,EAAQR,MAC3C,EAC7Bsc,EAAUxG,GAAWtV,EAASR,EAAE,EAAGA,GACnCuc,EAAUzG,GAAWtV,EAASR,EAAGA,EAAE,GAC/Bsc,EAAU,KACbA,EAAWxG,GAAWtV,EAASR,EAAGA,EAAE,GAAK,EACzCoc,EAASC,GAAUpe,KAAK0B,MAAMa,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,KAEjFuc,EAAU,KACbA,EAAWzG,GAAWtV,EAASR,EAAGA,EAAE,GAAK,EACzCqc,EAASD,GAAUne,KAAK0B,MAAMa,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,GAAIQ,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,KAErFb,EAAMlB,KAAKkB,IAAIid,GACf/c,EAAMpB,KAAKoB,IAAI+c,GACXne,KAAKsB,IAAI8c,EAASD,GAAUne,KAAKgB,GAAK,IACzCE,GAAOA,EACPE,GAAOA,GAERmB,EAAQR,EAAE,KAAQQ,EAAQR,GAAKX,EAAMid,GAAWE,EAAO,GAAKA,EAC5Dhc,EAAQR,EAAE,KAAQQ,EAAQR,EAAE,GAAKb,EAAMmd,GAAWE,EAAO,GAAKA,EAC9Dhc,EAAQR,EAAE,KAAQQ,EAAQR,GAAKX,EAAMkd,GAAWC,EAAO,GAAKA,EAC5Dhc,EAAQR,EAAE,KAAQQ,EAAQR,EAAE,GAAKb,EAAMod,GAAWC,EAAO,GAAKA,OACzDxC,sBACAjC,cACAkC,cACMvB,EAAOT,QAAWwE,IACzBzc,IACHQ,EAAQR,EAAE,GAAKQ,EAAQR,GACvBQ,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,IAEtBA,EAAIQ,EAAQP,OAAS,IACxBO,EAAQR,EAAE,GAAKQ,EAAQR,GACvBQ,EAAQR,EAAE,GAAKQ,EAAQR,EAAE,SAErBga,sBACAjC,cACAkC,eAEK/D,SACNqD,iBAAiBtZ,OAAS,OAC1BsZ,iBAAiB5V,KAAK+U,IAE5BtC,EAAuB,UAClB4D,qBAGNA,eAAA,8BAGEha,EAAGU,EAAGC,EAFH+X,EAA2C,IAAjCvK,KAAKoL,iBAAiBtZ,OAAgBkO,KAAKoL,iBAAiB,GAAK,KAC9E/Y,EAAUkY,EAASA,EAAOlY,QAAU,cAEhCmY,eAAiBD,EACjB1Y,EAAI,EAAGA,EAAImO,KAAKmL,SAASrZ,OAAQD,SAChCsZ,SAAStZ,GAAGiK,QAAQI,MAAMgO,MAA6D,IAArDlK,KAAKoL,iBAAiBhG,QAAQpF,KAAKmL,SAAStZ,IAAcuW,EAAkB,QAGhHmC,SACEe,SAASrN,aAAa,IAAKsM,EAAOT,OAAS9J,KAAK+J,cAAgB/J,KAAKgK,oBACrEuB,SAAStN,aAAa,IAAKsM,EAAOT,OAAS9J,KAAK+J,cAAgB/J,KAAKgK,gBAE3EnY,EAAI0Y,EAASA,EAAO1Y,EAAI,EACpB0Y,GAAU1Y,GACbU,EAAIF,EAAQR,EAAE,GACdW,EAAIH,EAAQR,EAAE,QACTyZ,SAASpP,MAAMkQ,WAAapM,KAAKuO,OAAOrS,MAAMkQ,WAAetE,GAAQvV,IAAMF,EAAQR,IAAMW,IAAMH,EAAQR,EAAE,GAAiB,UAAX,cAC/GyZ,SAASrN,aAAa,YAAa,aAAe1L,EAAIqW,GAASpW,EAAI,UACnE+b,OAAOtQ,aAAa,SAAW1L,EAAIqW,GAASpW,EAAIoW,GAASvW,EAAQR,GAAK+W,GAASvW,EAAQR,EAAE,UAEzFyZ,SAASpP,MAAMkQ,WAAapM,KAAKuO,OAAOrS,MAAMkQ,WAAa,SAE7D7B,GAAU1Y,EAAIQ,EAAQP,OAAS,GAClCS,EAAIF,EAAQR,EAAE,GACdW,EAAIH,EAAQR,EAAE,QACT0Z,SAASrP,MAAMkQ,WAAapM,KAAKwO,OAAOtS,MAAMkQ,WAAetE,GAAQvV,IAAMF,EAAQR,IAAMW,IAAMH,EAAQR,EAAE,GAAiB,UAAX,cAC/G0Z,SAAStN,aAAa,YAAa,aAAe1L,EAAIqW,GAASpW,EAAI,UACnEgc,OAAOvQ,aAAa,SAAW5L,EAAQR,GAAK+W,GAASvW,EAAQR,EAAE,GAAK+W,GAASrW,EAAIqW,GAASpW,SAG1F+Y,SAASrP,MAAMkQ,WAAapM,KAAKwO,OAAOtS,MAAMkQ,WAAa,aAIlEqC,YAAA,2BACKlE,EAASvK,KAAKwK,eACdD,IACCA,EAAO1Y,SACLyZ,SAASpP,MAAMkQ,WAAapM,KAAKuO,OAAOrS,MAAMkQ,WAAa,WAE7D7B,EAAO1Y,EAAI0Y,EAAOlY,QAAQP,OAAS,SACjCyZ,SAASrP,MAAMkQ,WAAapM,KAAKwO,OAAOtS,MAAMkQ,WAAa,gBAKnEsC,cAAA,6BAEEhF,EAAG7X,EADA0Y,EAASvK,KAAKwK,eAEdD,KACHb,EAAIa,EAAOlY,SACXR,EAAI0Y,EAAO1Y,KACE6X,EAAE7X,EAAE,IAAM6X,EAAE7X,EAAE,KAAO6X,EAAE7X,EAAE,UAChCyZ,SAASpP,MAAMkQ,WAAapM,KAAKuO,OAAOrS,MAAMkQ,WAAa,UAE7D1C,EAAE7X,KAAO6X,EAAE7X,EAAE,IAAM6X,EAAE7X,EAAE,KAAO6X,EAAE7X,EAAE,UAChC0Z,SAASrP,MAAMkQ,WAAapM,KAAKwO,OAAOtS,MAAMkQ,WAAa,eAKnEuC,gBAAA,2BACK3O,KAAKwK,eAAeV,cAClB8E,sBAAwBjH,GAAW3H,KAAKwK,eAAenY,QAAS2N,KAAKwK,eAAe3Y,EAAGmO,KAAKwK,eAAe3Y,EAAE,IAEnHwS,GAAU,UAAWrE,UAGtB6O,gBAAA,2BACK7O,KAAKwK,eAAeV,cAClB8E,sBAAwBjH,GAAW3H,KAAKwK,eAAenY,QAAS2N,KAAKwK,eAAe3Y,EAAE,EAAGmO,KAAKwK,eAAe3Y,IAEnHwS,GAAU,UAAWrE,UAGtB8O,iBAAA,0BAAiBhR,QACXwH,WAAWxH,QACXgO,iBAGNiD,eAAA,8BAOE/b,EANGuX,EAASvK,KAAKwK,eACjBd,EAAIa,EAAOlY,QACXR,EAAI0Y,EAAO1Y,EACXwc,EAAM,IACN9b,EAAIyN,KAAKsL,SAAS3B,WAAWpX,EAC7BC,EAAIwN,KAAKsL,SAAS3B,WAAWnX,EAE9BkX,EAAE7X,EAAE,GAAKU,GAAMA,EAAI8b,EAAO,GAAKA,EAC/B3E,EAAE7X,EAAE,GAAKW,GAAMA,EAAI6b,EAAO,GAAKA,EAC3B9D,EAAOT,SACNhC,GACHyC,EAAOT,QAAS,EAChBS,EAAOzO,QAAQmC,aAAa,IAAK+B,KAAKgK,oBACjCsB,SAASrN,aAAa,IAAK+B,KAAKgK,oBAChCuB,SAAStN,aAAa,IAAK+B,KAAKgK,iBAErChX,EAAQlD,KAAK0B,MAAMkY,EAAE7X,EAAE,GAAKW,EAAGkX,EAAE7X,GAAKU,GACtCA,EAAIyN,KAAK4O,sBAAwB9e,KAAKoB,IAAI8B,GAC1CR,EAAIwN,KAAK4O,sBAAwB9e,KAAKkB,IAAIgC,GAC1C0W,EAAE7X,EAAE,KAAQ6X,EAAE7X,GAAKU,GAAK8b,EAAO,GAAKA,EACpC3E,EAAE7X,EAAE,KAAQ6X,EAAE7X,EAAE,GAAKW,GAAK6b,EAAO,GAAKA,SAInCzE,aAGNoF,eAAA,8BAOEhc,EANGuX,EAASvK,KAAKwK,eACjBd,EAAIa,EAAOlY,QACXR,EAAI0Y,EAAO1Y,EACXwc,EAAM,IACN9b,EAAIyN,KAAKuL,SAAS5B,WAAWpX,EAC7BC,EAAIwN,KAAKuL,SAAS5B,WAAWnX,EAE9BkX,EAAE7X,EAAE,GAAKU,GAAMA,EAAI8b,EAAO,GAAKA,EAC/B3E,EAAE7X,EAAE,GAAKW,GAAMA,EAAI6b,EAAO,GAAKA,EAC3B9D,EAAOT,SACNhC,GACHyC,EAAOT,QAAS,EAChBS,EAAOzO,QAAQmC,aAAa,IAAK+B,KAAKgK,oBACjCsB,SAASrN,aAAa,IAAK+B,KAAKgK,oBAChCuB,SAAStN,aAAa,IAAK+B,KAAKgK,iBAErChX,EAAQlD,KAAK0B,MAAMkY,EAAE7X,EAAE,GAAKW,EAAGkX,EAAE7X,GAAKU,GACtCA,EAAIyN,KAAK4O,sBAAwB9e,KAAKoB,IAAI8B,GAC1CR,EAAIwN,KAAK4O,sBAAwB9e,KAAKkB,IAAIgC,GAC1C0W,EAAE7X,EAAE,KAAQ6X,EAAE7X,GAAKU,GAAK8b,EAAO,GAAKA,EACpC3E,EAAE7X,EAAE,KAAQ6X,EAAE7X,EAAE,GAAKW,GAAK6b,EAAO,GAAKA,SAInCzE,aAGNmB,cAAA,uBAAcR,EAAQ0E,EAASC,OAI7Brd,EAAGY,EAAGiX,EAAG9X,EAHNmc,EAAU/N,KAAKoL,iBAClB9Y,EAAIyb,EAAQjc,OACZuc,EAAM,QAEF5b,EAAI,EAAGA,EAAIH,EAAGG,IAElBZ,GADAD,EAAImc,EAAQtb,IACNZ,EACN6X,EAAI9X,EAAES,QACFR,IACH6X,EAAE7X,EAAE,KAAQ6X,EAAE7X,EAAE,GAAKod,GAAWZ,EAAO,GAAKA,EAC5C3E,EAAE7X,EAAE,KAAQ6X,EAAE7X,EAAE,GAAKqd,GAAWb,EAAO,GAAKA,GAE7C3E,EAAE7X,KAAQ6X,EAAE7X,GAAKod,GAAWZ,EAAO,GAAKA,EACxC3E,EAAE7X,EAAE,KAAQ6X,EAAE7X,EAAE,GAAKqd,GAAWb,EAAO,GAAKA,EACxCxc,EAAI6X,EAAE5X,OAAS,IAClB4X,EAAE7X,EAAE,KAAQ6X,EAAE7X,EAAE,GAAKod,GAAWZ,EAAO,GAAKA,EAC5C3E,EAAE7X,EAAE,KAAQ6X,EAAE7X,EAAE,GAAKqd,GAAWb,EAAO,GAAKA,GAEzCzc,IAAM2Y,GACT3Y,EAAEkK,QAAQmC,aAAa,YAAa,aAAgByL,EAAE7X,GAAM+W,GAAUc,EAAE7X,EAAE,GAAM,UAG7E+X,aAGNX,QAAA,iBAAQA,OACFC,UAAUpX,cACPkO,KAAK0G,iBAET7U,EAAImO,KAAKmL,SAASrZ,QACR,IAALD,QACHsZ,SAAStZ,GAAG8X,WAAWV,QAAQA,eAEhCvC,SAAWuC,OACXqC,SAAS3B,WAAWV,QAAQA,QAC5BsC,SAAS5B,WAAWV,QAAQA,GAC7BjJ,KAAK2J,iBACHA,WAAWV,QAAQA,GAEpBA,EAIOjJ,KAAKiK,WAAW7N,kBACtBtF,KAAKuG,gBAAgBN,YAAYiD,KAAKyL,wBACtC3U,KAAKuG,gBAAgBN,YAAYiD,KAAKiK,iBACtCQ,YACAqB,oBAPA7I,gBACAnM,KAAKuG,gBAAgBF,YAAY6C,KAAKyL,wBACtC3U,KAAKuG,gBAAgBF,YAAY6C,KAAKiK,kBAOvC4B,iBACE7L,KAAK4J,aAGbA,OAAA,gBAAOuF,OAGLtd,EAAG6X,EAAGnX,EAAGC,EAFNN,EAAI,GACPqY,EAASvK,KAAKwK,kBAEX2E,QACE1E,OAEFF,IACH1Y,EAAI0Y,EAAO1Y,EACX6X,EAAIa,EAAOlY,QACPR,IACHU,EAAImX,EAAE7X,EAAE,GACRW,EAAIkX,EAAE7X,EAAE,QACHyZ,SAASrN,aAAa,YAAa,aAAgB1L,EAAKqW,GAAUpW,EAAK,UACvE+b,OAAOtQ,aAAa,SAAU1L,EAAIqW,GAASpW,EAAIoW,GAASc,EAAE7X,GAAK+W,GAASc,EAAE7X,EAAE,KAE9EA,EAAI6X,EAAE5X,OAAS,IAClBS,EAAImX,EAAE7X,EAAE,GACRW,EAAIkX,EAAE7X,EAAE,QACH0Z,SAAStN,aAAa,YAAa,aAAgB1L,EAAKqW,GAAUpW,EAAK,UACvEgc,OAAOvQ,aAAa,SAAUyL,EAAE7X,GAAK+W,GAASc,EAAE7X,EAAE,GAAK+W,GAASrW,EAAIqW,GAASpW,KAIhF2c,EACHjd,EAAI8N,KAAKlJ,KAAK6G,aAAa,SACrB,KACD9L,EAAI,EAAGA,EAAImO,KAAK4K,SAAS9Y,OAAQD,IAEtB,GADf6X,EAAI1J,KAAK4K,SAAS/Y,IACZC,SACLI,GAAK,IAAMwX,EAAE,GAAKd,GAASc,EAAE,GAAK,IAAMA,EAAErZ,MAAM,GAAG+e,KAAKxG,UAGrD9R,KAAKmH,aAAa,IAAK/L,QACvBsZ,eAAevN,aAAa,IAAK/L,QACjCuZ,kBAAkBxN,aAAa,IAAK/L,UAGtC8N,KAAKyE,KAAK4K,UAAYrP,KAAK0G,UAC9BrC,GAAU,WAAYrE,KAAM9N,GAEtB8N,SAGRsP,WAAA,oBAAWC,EAAiBC,EAASC,MAChCF,EAAiB,KAChB5Y,EAAI4L,GAAuBvC,KAAKlJ,aAC7B/E,iBAAiBL,YAAYsO,KAAK4K,UAAW,EAAG,EAAG,EAAG,EAAGjU,EAAEmH,GAAK0R,GAAW,GAAI7Y,EAAEwI,GAAKsQ,GAAW,WAElGzP,KAAK4K,aAGb8E,UAAA,mBAAUH,EAAiBC,EAASC,MAC/BF,EAAiB,KAChB5Y,EAAI4L,GAAuBvC,KAAKlJ,aFFhC,SAAS6Y,gBAAgBhe,IA3kCnB,SAAZie,UAAY/f,SAA2B,iBAAXA,EA4kCxB+f,CAAUje,EAAQ,MACrBA,EAAU,CAACA,QAIXke,EAAInG,EAAG7X,EAAGQ,EAFPgI,EAAS,GACZ/H,EAAIX,EAAQG,WAER4X,EAAI,EAAGA,EAAIpX,EAAGoX,IAAK,KACvBrX,EAAUV,EAAQ+X,GAClBrP,GAAU,IAAMH,EAAO7H,EAAQ,IAAM,IAAM6H,EAAO7H,EAAQ,IAAM,KAChEwd,EAAKxd,EAAQP,OACRD,EAAI,EAAGA,EAAIge,EAAIhe,IACnBwI,GAAUH,EAAO7H,EAAQR,MAAQ,IAAMqI,EAAO7H,EAAQR,MAAQ,IAAMqI,EAAO7H,EAAQR,MAAQ,IAAMqI,EAAO7H,EAAQR,MAAQ,IAAMqI,EAAO7H,EAAQR,MAAQ,IAAMqI,EAAO7H,EAAQR,IAAM,IAE7KQ,EAAQkF,SACX8C,GAAU,YAGLA,EEfEsV,CAAgB5d,iBAAiBL,YAAYsO,KAAK4K,UAAW,EAAG,EAAG,EAAG,EAAGjU,EAAEmH,GAAK0R,GAAW,GAAI7Y,EAAEwI,GAAKsQ,GAAW,YAElHzP,KAAKlJ,KAAK6G,aAAa,SAG/BmS,iBAAA,0BAAiBC,EAAQC,EAASC,EAASC,OAQzChZ,EAAQrF,EAAG6B,EAAIC,EAAIiE,EAAIC,EAPpB6R,EAAI1J,KAAK4K,SAAS,GACrBzY,GAAa,EAARuX,EAAE,GACPtX,EAAkB,IAAZ4d,EAAiB,IAAMA,GAAWtG,EAAE,IAC1CpX,EAAIoX,EAAE5X,OACN6D,EAAK,GAAK+T,EAAEpX,EAAE,GAAKH,GACnByD,GAAMma,GAAWrG,EAAEpX,EAAE,GAAKF,MAK1BwD,EADGA,EACE,EAAIA,GAEHD,EAEPA,GARO,IASPC,GATO,IAUF/D,EARL8W,GAAM7W,OAAS,EAQHD,EAAIS,EAAGT,GAAK,EACvB8W,GAAM9W,KAAQ6X,EAAE7X,GAAKM,GAAMwD,EAAM,GAX3B,IAYNgT,GAAM9W,EAAE,KAAQ6X,EAAE7X,EAAE,GAAKO,GAAMwD,EAAM,GAZ/B,OAeHsa,EAAa,KAChBhZ,EAAS,GACT5E,EAAIqW,GAAM7W,OACLD,EAAI,EAAGA,EAAIS,EAAGT,GAAG,EACrB6B,EAAKiV,GAAM9W,EAAE,GACb8B,EAAKgV,GAAM9W,EAAE,GACb+F,EAAK+Q,GAAM9W,EAAE,GACbgG,EAAK8Q,GAAM9W,EAAE,GACbqF,EAAO1B,KAAK9B,EAAIC,EAAIiE,EAAIC,GACxBF,eAAejE,EAAIC,EAAIgV,GAAM9W,GAAI8W,GAAM9W,EAAE,GAAI8W,GAAM9W,EAAE,GAAI8W,GAAM9W,EAAE,GAAI+F,EAAIC,EAAI,KAAOX,EAAQA,EAAOpF,OAAS,OAE7G4B,EAAKwD,EAAO,GACZ5E,EAAI4E,EAAOpF,OACND,EAAI,EAAGA,EAAIS,EAAGT,GAAG,EAAG,KACxB+F,EAAKV,EAAOrF,IACH6B,GAAW,EAALkE,GAAUA,EAAK,EAAG,CAChCsY,UAGDxc,EAAKkE,UAIHqY,GAAiB,IAAN3d,GAAwB,IAAbqW,GAAM,IAAyB,IAAbA,GAAM,IAA2B,IAAfA,GAAMrW,EAAE,IAA2B,IAAfqW,GAAMrW,EAAE,GAClFqW,GAAMtY,MAAM,EAAG,GAAG+e,KAAK,MAE/BzG,GAAM,GAAK,IAAMA,GAAM,GAChB,IAAMA,GAAMyG,KAAK,uCArmBb5M,EAAQiC,GACnBA,EAAOA,GAAQ,GACV0D,GA7ZM,SAAZgI,YACCzT,EAAO0T,SACP/T,EAAOC,OACPM,EAAQF,EAAKG,KACbqL,EAAWlG,GAAe,QAC1B4C,EAAe5C,GAAe,aACjB9F,MAAM2I,QAAU,OAC7BjI,GAASA,EAAMG,YAAY6H,GAC3BrB,EAAqB,SAAS8M,WACzBC,EAAWD,EAAME,MAAM,KAC1BC,QAAyCnO,IAA3B6F,EAASuI,cAA+B,uDAAkFpO,IAA7B6F,EAASwI,gBAAiC,0DAA4DL,GAAOE,MAAM,KAC9NI,EAAM,GACN9e,EAAI,GACS,IAALA,GACR8e,EAAIL,EAASze,IAAM2e,EAAU3e,GAC7B8e,EAAIH,EAAU3e,IAAMye,EAASze,UAEvB8e,EATa,CAUnB,6CACFC,WAAWC,UAAUC,sBAAwBF,WAAWC,UAAUC,uBAAyB,SAAShT,UAC5FA,EAAE0O,eAAezM,UAAUf,SAASgB,KAAKwM,iBAEjD9P,EAAK2G,iBAAiB,UAAW,SAASvF,OAGxCjM,EAAGkf,EAAOnf,EAAGkF,EAFVka,EAAMlT,EAAEmT,SAAWnT,EAAEoT,MACxBC,EAAYrT,EAAEkT,KAAOA,KAEJ,UAAdG,GAAiC,KAARH,EAC5BjJ,GAAS,OACH,GAAkB,YAAdoJ,GAAmC,KAARH,EACrCnJ,GAAQ,OACF,GAAkB,SAAdsJ,GAAgC,KAARH,EAClChJ,GAAO,OACD,GAAkB,QAAdmJ,GAA+B,KAARH,MACjClJ,GAAO,EACPjW,EAAImR,GAAelR,QACL,IAALD,GACRmR,GAAenR,GAAG4c,mBAEb,IAAmB,MAAd0C,GAA6B,KAARH,KAAgBnJ,GAASG,IAA2B,EAAlBS,GAAS3W,WAC3E2W,GAAS2I,QACTL,EAAQtI,GAAS,GACN,MACV3R,EAAOia,EAAMja,MACRA,KAAKmH,aAAa,IAAK8S,EAAM7e,GAClC4E,EAAKA,KAAKmH,aAAa,YAAa8S,EAAMnS,WAC1C9H,EAAK2T,OACL7Y,EAAIkF,EAAKqU,SACJtZ,EAAI,EAAGA,EAAID,EAAEE,OAAQD,KACsB,IAA3Ckf,EAAM9E,gBAAgB7G,QAAQxT,EAAEC,GAAGA,IACtCiF,EAAKsU,iBAAiB5V,KAAK5D,EAAEC,IAG/BiF,EAAK+U,iBACL/U,EAAK8S,SACD9S,EAAK2N,KAAK4M,QACbva,EAAK2N,KAAK4M,OAAOjN,KAAKtN,SAGlB,GAAkB,WAAdqa,GAAwC,cAAdA,GAAqC,IAARH,GAAqB,KAARA,GAAsB,QAARA,GAA0B,MAARA,IAAgBnJ,GAASG,OACvInW,EAAImR,GAAelR,QACL,IAALD,GACRmR,GAAenR,GAAGic,8BAEb,IAAmB,MAAdqD,GAA6B,KAARH,KAAgBhJ,GAAQH,OACxDhW,EAAImR,GAAelR,QACL,IAALD,GACRmR,GAAenR,GAAGiT,QAAO,KAGzB,GACHpI,EAAK2G,iBAAiB,QAAS,SAASvF,OACnCkT,EAAMlT,EAAEkT,KAAOlT,EAAEmT,SAAWnT,EAAEoT,SACtB,UAARF,GAA2B,KAARA,EACtBjJ,GAAS,OACH,GAAY,YAARiJ,GAA6B,KAARA,EAC/BnJ,GAAQ,OACF,GAAY,SAARmJ,GAA0B,KAARA,EAC5BhJ,GAAO,OACD,GAAY,QAARgJ,GAAyB,KAARA,EAAY,CACvClJ,GAAO,UACHjW,EAAImR,GAAelR,QACT,IAALD,GACRmR,GAAenR,GAAG6c,mBAGlB,GACHlJ,IAAqBnJ,EAAKiV,aAC1BpO,GAAaxG,EAAM,UAAWiG,IAC9BO,GAAaxG,EAAM,WAAYiG,IAC/BO,GAAaxG,EAAM,cAAeiF,GAClCuB,GAAa7G,EAAM,YAAasF,GAChC/E,GAASA,EAAMyG,iBAAiB,aAAc1B,GAC9CwG,EAAe,EAkUdgI,QAEI1L,KAAOA,OACP3N,KAA2B,iBAAZ0L,EAAwB9F,EAAK4M,iBAAiB9G,GAAQ,GAAKA,OAC1EkJ,GAAKzJ,GAAW,IAAKjC,KAAKlJ,KAAKuG,gBAAiB,OAAO,mCACvDoO,kBAAoBxJ,GAAW,OAAQjC,KAAK0L,GAAI,CAACvB,OAAO,cAAeC,YAAY,GAAIF,KAAK,OAAQG,aAAa,4BACjHJ,WAAaxF,EAAKwF,YAAchI,GAAW,IAAKjC,KAAK0L,GAAI,OAAO,2CAChEF,eAAiBvJ,GAAW,OAAQjC,KAAKiK,WAAY,CAACE,OAAO/B,EAAiBgC,YAAY,EAAGF,KAAK,OAAQG,aAAa,4BACvHe,iBAAmB,QACnBmD,OAAStM,GAAW,WAAYjC,KAAKiK,WAAY,CAACE,OAAO/B,EAAiBgC,YAAY,EAAGC,aAAa,4BACtGmE,OAASvM,GAAW,WAAYjC,KAAKiK,WAAY,CAACE,OAAO/B,EAAiBgC,YAAY,EAAGC,aAAa,4BACtGkE,OAAOrS,MAAMqV,cAAgBvR,KAAKwO,OAAOtS,MAAMqV,cAAgBvR,KAAKwL,eAAetP,MAAMqV,cAAgB,YACzG7K,UAAW,MACZzB,EAAMjF,KAAKlJ,KAAKsF,WAAWoQ,eAAezM,UAC7CyR,GAAQvM,EAAIrT,EAAIqT,EAAI/S,GAAK,GAAKuS,EAAKgN,YAAc,QAC7CzH,cAzfe,SAArB0H,mBAAqBF,SAEb,CAAC,MADRA,EAAOtX,GAAOsX,KACQA,EAAMA,GAAOA,EAAMA,EAAMA,GAAOA,EAAMA,EAAO,KAAKpC,KAAKxG,IAufxD8I,CAAmBF,QACnCzH,cAtfe,SAArB4H,mBAAqBH,OAEnBI,EAAQ1X,GADE,cACKsX,SAET,KADPA,EAAOtX,GAAOsX,IACM,MAAQ,CAACA,EAAMI,EAAOA,EAAOJ,EAAM,EAAGA,GAAQI,EAAOJ,GAAOA,EAAMI,GAAQJ,EAAM,GAAIA,GAAOI,GAAQA,GAAQJ,EAAM,GAAIA,EAAMI,GAAQJ,EAAMA,GAAOI,EAAOJ,EAAM,GAAGpC,KAAKxG,IAAU,IAkf9K+I,CAA0B,KAAPH,QACnClG,SAAWrJ,GAAW,OAAQjC,KAAKiK,WAAY,CAAC/X,EAAE8N,KAAKgK,cAAeE,KAAK9B,EAAiB+B,OAAO,cAAeC,YAAY,SAC9HmB,SAAWtJ,GAAW,OAAQjC,KAAKiK,WAAY,CAAC/X,EAAE8N,KAAKgK,cAAeE,KAAK9B,EAAiB+B,OAAO,cAAeC,YAAY,SAC9HkB,SAAS3B,WAAa,IAAId,GAAa7I,KAAKsL,SAAU,CAAC1E,OAAO5G,KAAK+O,eAAgBrK,cAAc1E,KAAMuG,QAAQvG,KAAK2O,gBAAiBrH,UAAUtH,KAAK8O,iBAAkB1H,QAAQpH,KAAKyN,gBAAiBzE,KAAKvE,EAAKoN,kBAC9MtG,SAAS5B,WAAa,IAAId,GAAa7I,KAAKuL,SAAU,CAAC3E,OAAO5G,KAAKgP,eAAgBtK,cAAc1E,KAAMuG,QAAQvG,KAAK6O,gBAAiBvH,UAAUtH,KAAK8O,iBAAkB1H,QAAQpH,KAAK0N,gBAAiB1E,KAAKvE,EAAKoN,kBAC9MvG,SAASpP,MAAMkQ,WAAapM,KAAKuL,SAASrP,MAAMkQ,WAAa,iBAC9D0F,EAAiB,CAAC9R,KAAKsL,SAAUtL,KAAKuL,SAAUvL,KAAKuO,OAAQvO,KAAKwO,OAAQxO,KAAKiK,WAAYjK,KAAKwL,eAAgBxL,KAAKyL,mBACxH5Z,EAAIigB,EAAehgB,QACN,IAALD,GACRigB,EAAejgB,GAAG+Q,cAAe,GAEX,IAAnB6B,EAAKsN,iBACHpI,WAAa,IAAId,GAAa7I,KAAKyL,kBAAmB,CAAC/G,cAAc1E,KAAMuG,QAAQvG,KAAK8E,OAAQwC,UAAUtH,KAAKsF,WAAYsB,OAAO5G,KAAK6N,YAAatG,UAAUvH,KAAK8L,WAAYvC,KAAKvJ,KAAKyE,KAAK8E,KAAMC,KAAKxJ,KAAKyE,KAAK+E,aAEpNiB,YACAR,WAAW/N,MAAMkQ,YAAgC,IAAlB3H,EAAKuN,SAAsB,SAAW,WACpD,IAAlBvN,EAAKuN,gBACHlb,KAAK8L,cAAe,EACzBI,GAAexN,KAAKwK,YAEhB8L,aACAtG,IACJtC,GAAalD,KAAKyL,kBAAmB,YAAavH,GAAMlE,KAAKmM,sBAAuBnM,OACpFkD,GAAalD,KAAKyL,kBAAmB,UAAWvH,GAAMlE,KAAKsF,WAAYtF,QAExEkD,GAAalD,KAAKyL,kBAAmB,aAAcvH,GAAMlE,KAAKmM,sBAAuBnM,OACrFkD,GAAalD,KAAKyL,kBAAmB,WAAYvH,GAAMlE,KAAKsF,WAAYtF,OAikB1EsK,GAAWnQ,eAAiBA,eAC5BmQ,GAAWjR,gBAAkBA,gBAC7BiR,GAAW2H,YAAc,SAACC,EAAMzN,OAC3B3I,EAAS5E,EAAQrF,EAAG6B,EAAIkE,EAAIjE,EAAIkE,EAAIsa,EAAQC,EAAWhY,EAAW9H,EAAGiH,KAEzEa,GADAqK,EAAOA,GAAQ,IACErK,WAAa,EAC9BgY,EAAY3N,EAAK2N,WAAc,EAAIhY,EACnCb,QAA4C8I,IAAzBoC,EAAKlL,gBAAgC,IAAMkL,EAAKlL,iBAAmB1I,EACjE,iBAAVqhB,IAEVA,GADApW,EAAUoW,GACKvU,aAAa,MAEN,MAAnBuU,EAAKza,OAAO,IAAiC,MAAnBya,EAAKza,OAAO,KACzCqE,EAAUY,EAAK2V,cAAcH,MAE5BA,EAAOpW,EAAQ6B,aAAa,MAG9BzG,GAA0B,IAAhBuN,EAAK6N,QAAqB,eAAeC,KAAKL,GAAmCzc,gBAAgByc,GAAM,GAAhDA,EAAKrb,MAAMjG,IACxD,IAAhB6T,EAAK6N,OAAkB,KAC1BH,EAASjb,EACTA,EAAS,GACT5E,EAAI6f,EAAOrgB,OACND,EAAI,EAAGA,EAAIS,EAAGT,GAAG,EACrB6B,GAAMye,EAAOtgB,EAAE,GACf8B,GAAMwe,EAAOtgB,EAAE,GACf+F,GAAMua,EAAOtgB,EAAE,GACfgG,GAAMsa,EAAOtgB,EAAE,GACfqF,EAAO1B,KAAK0E,GAAOxG,GAAKwG,GAAOvG,GAAKuG,GAAOtC,GAAKsC,GAAOrC,IACvDF,eAAejE,EAAIC,GAAKwe,EAAOtgB,IAAKsgB,EAAOtgB,EAAE,IAAKsgB,EAAOtgB,EAAE,IAAKsgB,EAAOtgB,EAAE,GAAI+F,EAAIC,EAAI,GAAiB,IAAZua,GAAqBlb,EAAQA,EAAOpF,OAAS,IAExIoF,EAASmC,gBAAgBc,eAAejD,EAAQkD,GAAYqK,EAAKnL,UAAWC,IACrE,GAAK,IAAMrC,EAAO,QAEzBA,EAASiD,eAAejD,EAAQkD,UAEjC8X,EAAO,IAAMhb,EAAOkY,KAAK,KACrBtT,GACHA,EAAQmC,aAAa,IAAKiU,GAEpBA,GAGR5H,GAAWkI,OAAS,SAAChQ,EAAQiC,UAAS,IAAI6F,GAAW9H,EAAQiC,IAE7D6F,GAAWmI,YAAcjK,EAEzB8B,GAAWoI,gBAAkB,SAACjO,OACzBkO,EAAIlO,EAAKmO,QAAU,EACtBC,EAAM,KACNrJ,EAAQ/E,EAAKlS,GAAgB,IAAXkS,EAAKlS,EAAWkS,EAAKlS,EAAIkS,EAAKqO,MAAQ,GAAKD,EAC7DE,EAAQtO,EAAKjS,GAAgB,IAAXiS,EAAKjS,EAAWiS,EAAKjS,EAAIiS,EAAKsL,OAAS,GAAK8C,EAC9DtJ,EAAOC,GAAQ/E,EAAKqO,OAASD,MAC7BG,EAAOD,GAAQtO,EAAKsL,QAAU8C,MAC9BI,GAA8B,IAAlBxO,EAAKwO,SACjBC,GAA8B,IAAlBzO,EAAKyO,SACjBC,EAAO1O,EAAK0O,KACZC,EAAO3O,EAAK4O,gBACbV,GAAKA,EACE,SAAAxQ,OAGLmR,EAAOC,EAAOva,EAAIC,EAFf1G,EAAI4P,EAAE5P,EACTC,EAAI2P,EAAE3P,EAEFygB,GAAY1gB,EAAIiX,IAAUxQ,EAAKzG,EAAIiX,GAAQxQ,EAAK2Z,EACpDpgB,EAAIiX,GACOyJ,GAAgB1J,EAAJhX,IAAcyG,EAAKuQ,EAAOhX,GAAKyG,EAAK2Z,KAC3DpgB,EAAIgX,GAEA2J,GAAY1gB,EAAIugB,IAAU9Z,EAAKzG,EAAIugB,GAAQ9Z,EAAK0Z,EACpDngB,EAAIugB,GACOG,GAAgBF,EAAJxgB,IAAcyG,EAAK+Z,EAAOxgB,GAAKyG,EAAK0Z,KAC3DngB,EAAIwgB,GAEDG,IACHna,EAAKzG,EAAI4gB,EAAK5gB,EACd0G,EAAKzG,EAAI2gB,EAAK3gB,EACVwG,EAAKA,EAAK2Z,IACbpgB,EAAI4gB,EAAK5gB,GAEN0G,EAAKA,EAAK0Z,IACbngB,EAAI2gB,EAAK3gB,IAGP4gB,IAEHpa,GADAsa,EAAQ9J,EAAO1Z,KAAKC,OAAOwC,EAAIiX,GAAQ4J,GAAQA,GAClC7gB,GAGJyG,GADTC,GADAsa,EAAQR,EAAOjjB,KAAKC,OAAOyC,EAAIugB,GAAQK,GAAQA,GAClC5gB,GACMyG,EAAK0Z,IACvBpgB,EAAI+gB,EACJ9gB,EAAI+gB,GAGNpR,EAAE5P,EAAIA,EACN4P,EAAE3P,EAAIA,IAIR8X,GAAWkJ,QAAU,QCvvCR,SAAZC,GAAY5jB,SAA2B,iBAAXA,EACX,SAAjBmS,GAAkBpE,EAAMF,OACnBI,EAAIpB,GAAKqB,gBAAkBrB,GAAKqB,iBAAiBL,GAAM,gCAAgCjH,QAAQ,SAAU,QAASmH,GAAQlB,GAAKI,cAAcc,UAC1IE,EAAE5B,MAAQ4B,EAAIpB,GAAKI,cAAcc,GA+B5B,SAAb8V,GAAc5c,EAAM0L,EAAQiC,UAAUgP,GAAU3c,IAAS6c,GAAapB,KAAKzb,GAAS4F,GAAK2V,cAAcvb,GAAQ8c,MAAMC,QAAQ/c,GAAQgd,GAAiBC,IAAiB,CAACxhB,EAAEyhB,GAAKC,YAAYzR,EAAQ,KAAMhQ,EAAEwhB,GAAKC,YAAYzR,EAAQ,cAAU1L,GAAO2N,IAAUgP,GAAU3c,IAASA,GAA8C,UAArCA,EAAKwG,QAAU,IAAIC,cAA4BzG,EAAO,EAqCrU,SAAZqZ,GAAa+D,EAAMC,OACdC,EAAU,+CACd/X,GAAOC,OACP0X,GAAOA,IAAQE,GAAQ7X,GAAK2X,MAAQ5c,QAAQid,KAAKD,GACjD1X,GAAO0T,SACPxT,GAAQF,GAAKG,KACbyX,GAAS5X,GAAKC,iBACd4X,GAAmBP,IAAQA,GAAKQ,QAAQC,aAjDlB,SAAvBC,wBACC9P,GAAe5C,GAAe,aACjB9F,MAAM2I,QAAU,OAC7BjI,GAAMG,YAAY6H,IAkDjB8P,GACAX,GAAkBQ,GAAiBI,eACnCb,GAAmBS,GAAiB5E,kBAJtB,IAAbwE,GAAsB/c,QAAQid,KAAKD,OAnFnCJ,GAAM3X,GAAMK,GAAM4X,GAAQ1X,GAAO2X,GAAmBR,GAAiBD,GA+BxElP,GA9BAgQ,GACe,4BA2DflS,GAAwB,CAACxD,OAAO,CAACtN,EAAE,EAAGI,EAAE,EAAGC,EAAE,EAAGC,EAAE,EAAG4L,EAAE,EAAGqB,EAAE,IA8BhD0V,+BAyHZnF,UAAA,4BACQ1P,KAAKyH,OAAOiI,WAAU,GAAO1P,KAAK8U,OAAOviB,GAAIyN,KAAK8U,OAAOtiB,gDAxHrDuiB,EAAetQ,YAAAA,IAAAA,EAAO,IAC5B8P,IACJpE,GAAU1L,EAAKuP,KAAM,OAKrBxR,EAAQ1L,EAAMke,EAAO7e,EAAQC,EAAQ4G,EAAUS,EAAKwX,EAAWC,EAAcvgB,EAAMuK,EAAQiW,EAAaC,EAHrGC,EAAarT,GAAe,OAC/BsC,EAAOtE,KACP8U,EAAS,CAACviB,EAAE,EAAGC,EAAE,GAEduiB,aAAyBf,GAAKE,KAAKoB,MAEtC9S,GADAyS,EAAYF,GACOQ,UAAU,IAE7B/S,EAASwR,GAAKwB,MAAMC,QAAQV,GAAe,GAC3CE,EA3CqB,SAAvBS,qBAAuBlT,WAClBmT,EAAS3B,GAAK4B,YAAYpT,GAC7B3Q,EAAI,EACEA,EAAI8jB,EAAO7jB,OAAQD,IAAK,IAC1B8jB,EAAO9jB,GAAG4S,KAAKgQ,kBACXkB,EAAO9jB,GACJ8jB,EAAO9jB,GAAGgkB,UACpBF,EAAOngB,WAAPmgB,EAAeA,EAAO9jB,GAAGgkB,SAASC,gBAoCvBJ,CAAqBlT,IAElC1L,EAAO4c,GAAWjP,EAAK3N,KAAM0L,EAAQiC,QAChCqQ,OAASA,EACd9X,EAtGoB,SAArB+Y,mBAAqBvT,OAChBwT,EAASxT,EAAOzB,wBACnBkV,EAAgB3B,GAAO4B,WAAa7Z,GAAKoF,aAAe6S,GAAO5S,WAAa9E,GAAM8E,WAAa,GAC/FyU,EAAgB7B,GAAO8B,YAAc/Z,GAAKiF,aAAegT,GAAO/S,YAAc3E,GAAM2E,YAAc,SAC5F,CAAC/B,KAAKwW,EAAOxW,KAAO2W,EAAe5W,IAAIyW,EAAOzW,IAAM0W,EAAeI,MAAOL,EAAOK,MAAQF,EAAeG,OAAQN,EAAOM,OAASL,GAkG5HF,CAAmBvT,GAC9BrM,EAASoE,WAAWyZ,GAAKC,YAAYzR,EAAQ,IAAK,OAClDpM,EAASmE,WAAWyZ,GAAKC,YAAYzR,EAAQ,IAAK,OAClDwS,EAASxS,EAAO+T,QAA2C,QAAjC/T,EAAOlF,QAAQC,cACrC0X,IAAcne,IACjBA,EAAO4c,GAAWuB,EAAUxQ,KAAKgQ,WAAW3d,MAAQme,EAAUxQ,KAAKgQ,WAAYjS,EAAQyS,EAAUxQ,KAAKgQ,aAEvGY,EAAWpX,aAAa,QAAS,oBACjCoX,EAAWnZ,MAAMiC,QAAU,gPAC3BkX,EAAWmB,UAAY,mBACvBnB,EAAWoB,UAAYnS,GACtB0P,GAAKwB,MAAMC,QAAQhR,EAAKnG,WAAW,IAAM1B,IAAOG,YAAYsY,GAnFxC,SAAtBqB,oBAAuBlU,EAAQmU,EAAQC,GACtCpU,EAAOa,iBAAiB,QAAS,SAAAvF,MAC5BA,EAAE0E,OAAOiU,UAAW,KACnBxkB,EAAI0kB,EAAO7Y,EAAE0E,YACjBoC,GAAa/U,MAAQoC,IACZ2S,GAAaE,OAAQ,CAC7B1N,QAAQC,IAAIpF,GACZ2S,GAAa1I,MAAM2I,QAAU,QAC7BD,GAAaE,aAEZpI,GAAKma,YAAY,QACjBjS,GAAakS,OACTF,GACHA,EAAWpU,GAEX,MAAOuU,GACR3f,QAAQid,KAAK,uDAEdzP,GAAa1I,MAAM2I,QAAU,WAkEhC6R,CAAoBrB,EAAY,kBAAM/Q,EAAKoL,aAAa,kBAAMsE,GAAKgD,OAAO3B,EAAY,CAAC4B,gBAAgB,SAAU,CAACC,SAAS,GAAKD,gBAAgB,6BAChJxZ,EAAM3G,GAAQA,EAAKuG,mBAElB6X,EAAgBF,GAASxS,EAAOnF,iBAAmBmF,EAAOnF,gBAAgBM,aAAa,UAAa,6BAChGqX,GACHvX,EAAM+E,EAAOnF,gBACb1I,EAAO6N,EAAO7D,UAEdxI,GADA+I,EAnEsB,SAAzBqD,uBAAyBC,UAAWA,EAAO5D,UAAUC,QAAQ4D,eAAiBC,IAAuBxD,OAmEzFqD,CAAuBC,IAChB1E,EAChB1H,EAAS8I,EAAOC,EAChB2V,EAAOviB,EAAIoC,EAAKpC,EAChBuiB,EAAOtiB,EAAImC,EAAKnC,IAEhBiL,EAAMuE,GAAe,MAAOkT,GAC5BtY,GAAMG,YAAYU,GAClBA,EAAIQ,aAAa,UAAW,eAC5BR,EAAIvB,MAAMiC,QAAU,sGAAwGnB,EAASuC,IAAM,YAAcvC,EAASwC,KAAO,OAE1K7K,EAAO8e,GAAU3c,KAAU6c,GAAapB,KAAKzb,GAAQA,EA9HrC,SAAlBqgB,gBAAmB5kB,EAAGC,OAEpBX,EADGulB,EAAc,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,SAE/CvlB,EAAI,EAAGA,EAAIulB,EAAYtlB,OAAQD,GAAG,EACtCulB,EAAYvlB,IAAMU,EAClB6kB,EAAYvlB,EAAE,IAAMW,QAEd,IAAMD,EAAI,IAAMC,EAAI,IAAM4kB,EAAYhI,KAAK,KAuHW+H,CAAgBhhB,EAAQC,IACpFU,EAAOkL,GAAe,OAAQkT,IACzBjX,aAAa,IAAKtJ,GACvBmC,EAAKmH,aAAa,gBAAiB,sBACnCnH,EAAKoF,MAAMiC,QAAU,mCAAqCsG,EAAK4S,WAAa,GAAK,aAAe5S,EAAK6S,WAAa,QAAU,cAAgB7S,EAAK8S,aAAe,IAChK9Z,EAAIV,YAAYjG,IACZge,EAAOviB,GAAKuiB,EAAOtiB,IACtBwhB,GAAKwD,IAAI1gB,EAAM,CAACvE,EAAEuiB,EAAOviB,EAAGC,EAAEsiB,EAAOtiB,KAIjC,aAAciS,IACnBA,EAAKuN,UAAW,GAEX,eAAgBvN,IACrBA,EAAKqG,WAAa,SAAA3I,GACbA,EAAE5P,EAAI4P,EAAE5P,EAAI4P,EAAE3P,EAAI2P,EAAE3P,EAAI,KAC3B2P,EAAE5P,EAAI4P,EAAE3P,EAAI,KAKf4iB,EAAmBH,GAAuC,WAA1BA,EAAUhU,OAAOiR,KAAoB+C,EAAUhU,OAAOA,OAASgU,EAE/FxQ,EAAK8B,QAAU,WACd6O,EAAiBqC,MAAM,IAGxBtC,EAAc,uBAIbF,EAAUyC,aACVtC,EAAiBuC,WAElBlT,EAAK6C,UAAY7C,EAAKuJ,eAAiBmH,OAElC1N,OAAS6C,GAAWkI,OAAO1b,EAAM2N,GAClCA,EAAKmT,QACR5D,GAAKwD,IAAIhV,EAAQ,CAACqV,gBAAgB,UAAWC,UAAU,GAAIC,UAAU,KAElE9C,GACCA,EAAUxQ,KAAKgQ,WAAW3d,KAC7Bme,EAAUxQ,KAAKgQ,WAAW3d,KAAOA,EAEjCme,EAAUxQ,KAAKgQ,WAAa,CAAC3d,KAAKA,GAE/Bse,EAAiBnU,SAAW+S,GAAKgE,gBACpChE,GAAKgE,eAAeC,IAAI7C,EArKV,SAAjB8C,eAAiBjD,WACZkD,EAAOlD,EAAUmD,YACdnD,GACNkD,EAAOlD,EAAUoD,YAAcF,GAAQlD,EAAUqD,aAAe,GAChErD,EAAYA,EAAUhU,cAEhBkX,EA+JqCD,CAAe9C,GAAoBA,EAAiBmD,SAE/FnD,EAAiBoD,QAAQ,GAAGC,YAAY,IAGxCxD,EAAYG,EAAmBpB,GAAK0E,GAAGlW,EAAQ,CAC9CiS,WAAY,CACX3d,KAAMA,EACNqE,MAAOsJ,EAAKtJ,OAAS,EACrBC,IAAM,QAASqJ,EAAQA,EAAKrJ,IAAM,EAClCud,WAAa,eAAgBlU,GAAQA,EAAKkU,WAC1CC,MAAO9hB,EACP+hB,YAAapU,EAAKoU,aAEnB3B,SAAUzS,EAAKyS,UAAY,EAC3B4B,KAAMrU,EAAKqU,MAAQ,eACnBN,QAAQ,EACRC,YAAY,EACZM,QAAQtU,EAAK3N,YAGVme,UAAYA,EASnBJ,GAAiBmE,SAAW7I,GAC5B0E,GAAiBrC,OAAS,SAAChQ,EAAQiC,UAAS,IAAIoQ,GAAiBrS,EAAQiC,IACzEoQ,GAAiBrB,QAAU"}